<?xml version="1.0"?>
<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="ultimateautomizer"
           timelimit="60"
           hardtimelimit="75"
           memlimit="8000"
           cpuCores="4">

  <rundefinition name="Test">
  </rundefinition>
  
  <tasks name="LDV">
    <include>../../trunk/examples/svcomp/ldv-regression/1_3.c_false-unreach-call.cil.c</include>
    <include>../../trunk/examples/svcomp/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--rfc1201.ko-entry_point_false-unreach-call.cil.out.c</include>
    <include>../../trunk/examples/svcomp/ldv-consumption/32_7a_cilled_false-unreach-call_linux-3.8-rc1-drivers--media--rc--rc-core.ko-main.cil.out.c</include>
    <include>../../trunk/examples/svcomp/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--staging--media--lirc--lirc_sasem.ko-entry_point_false-unreach-call.cil.out.c</include>
    <include>../../trunk/examples/svcomp/ldv-regression/mutex_lock_int.c_false-unreach-call.cil.c</include>
    <propertyfile>${inputfile_path}/ALL.prp</propertyfile>
	<option name="32bit"></option>
	<option name="precise"></option>
	<option name="--full-output"></option>

  </tasks>

  <tasks name="Memsafety Deref">
    <include>../../trunk/examples/svcomp/array-memsafety/diff_usafe_false-valid-deref.i</include>
    <include>../../trunk/examples/svcomp/array-memsafety/array02-alloca_true-valid-memsafety.i</include>
    <propertyfile>${inputfile_path}/ALL.prp</propertyfile>
	<option name="32bit"></option>
	<option name="precise"></option>
	<option name="--full-output"></option>

  </tasks>

  <tasks name="Memsafety DerefFreeMemtrack">
    <include>../../trunk/examples/svcomp/memsafety/test-0158_false-valid-free.i</include>
    <include>../../trunk/examples/svcomp/list-ext-properties/test-0158_1_false-valid-memtrack.i</include>
	<include>../../trunk/examples/svcomp/list-ext-properties/960521-1_1_false-valid-deref.i</include>
	<include>../../trunk/examples/svcomp/ldv-memsafety/ArraysOfVariableLength_false-valid-deref-read.c</include>
	<include>../../trunk/examples/svcomp/ldv-memsafety/memset2_false-valid-deref-write.c</include>
	<include>../../trunk/examples/svcomp/ldv-memsafety/memset_false-valid-deref-write.c</include>
    <propertyfile>${inputfile_path}/ALL.prp</propertyfile>
	<option name="32bit"></option>
	<option name="precise"></option>
	<option name="--full-output"></option>

  </tasks>

  <tasks name="Overflow">
    <include>../../trunk/examples/svcomp/signedintegeroverflow-regression/ConversionToSignedInt_true-no-overflow.c.i</include>
    <include>../../trunk/examples/svcomp/signedintegeroverflow-regression/AdditionIntMin_false-no-overflow.c.i</include>
    <propertyfile>${inputfile_path}/ALL.prp</propertyfile>
	<option name="64bit"></option>
	<option name="precise"></option>

	<option name="--full-output"></option>
  </tasks>
  
  <tasks name="CFI">
    <include>../../trunk/examples/svcomp/ssh-simplified/s3_clnt_1_true-unreach-call.cil.c</include>
    <include>../../trunk/examples/svcomp/ssh-simplified/s3_clnt_1_false-unreach-call.cil.c</include>
    <include>../../trunk/examples/svcomp/loop-acceleration/array_true-unreach-call3.i</include>
    <include>../../trunk/examples/svcomp/loop-acceleration/simple_false-unreach-call2.i</include>
	<include>../../trunk/examples/svcomp/seq-pthread/cs_dekker_true-unreach-call.i</include>
    <propertyfile>${inputfile_path}/ALL.prp</propertyfile>
	<option name="32bit"></option>
	<option name="precise"></option>

	<option name="--full-output"></option>
  </tasks>

  <tasks name="Bitvectors">
	<include>../../trunk/examples/svcomp/bitvector-loops/diamond_false-unreach-call2.i</include>
	<include>../../trunk/examples/svcomp/bitvector-regression/implicitunsignedconversion_false-unreach-call.i</include>
	<include>../../trunk/examples/svcomp/bitvector-regression/implicitunsignedconversion_true-unreach-call.i</include>
	<include>../../trunk/examples/svcomp/bitvector-regression/signextension2_false-unreach-call.i</include>
	<include>../../trunk/examples/svcomp/bitvector-regression/signextension2_true-unreach-call.i</include>
	<include>../../trunk/examples/svcomp/bitvector/gcd_4_true-unreach-call.c</include>
	<include>../../trunk/examples/svcomp/bitvector/jain_1_true-unreach-call.c</include>
	<include>../../trunk/examples/svcomp/bitvector-regression/integerpromotion_true-unreach-call.i</include>
	<include>../../trunk/examples/svcomp/bitvector-regression/integerpromotion_false-unreach-call.i</include>
	<include>../../trunk/examples/svcomp/bitvector/byte_add_false-unreach-call.c</include>
	<include>../../trunk/examples/svcomp/bitvector/num_conversion_1_true-unreach-call.i</include>
	<include>../../trunk/examples/svcomp/bitvector/s3_clnt_1_false-unreach-call.BV.c.cil.c</include>
	<include>../../trunk/examples/svcomp/bitvector/soft_float_2_true-unreach-call.c.cil.c</include>
	<propertyfile>${inputfile_path}/ALL.prp</propertyfile>
	<option name="32bit"></option>
	<option name="precise"></option>
	<option name="--full-output"></option>

  </tasks>

  <tasks name="Recursive">
    <include>../../trunk/examples/svcomp/recursive/recHanoi02_true-unreach-call_true-termination.c</include>
    <include>../../trunk/examples/svcomp/recursive/McCarthy91_false-unreach-call_false-termination.c</include>
    <propertyfile>${inputfile_path}/ALL.prp</propertyfile>
	<option name="32bit"></option>
	<option name="precise"></option>
	<option name="--full-output"></option>

  </tasks>

  <tasks name="Termination">
    <include>../../trunk/examples/svcomp/termination-15/cstrcmp_diffterm_alloca_true-termination.c.i</include>
	<include>../../trunk/examples/svcomp/termination-15/cstrncpy_malloc_true-termination.c.i</include>
	<include>../../trunk/examples/svcomp/termination-crafted-lit/AliasDarteFeautrierGonnord-SAS2010-counterex1a_true-termination.c</include>
	<include>../../trunk/examples/svcomp/termination-crafted/Madrid_false-termination.c</include>
	<include>../../trunk/examples/svcomp/termination-crafted/McCarthy91_Iteration_true-termination.c</include>
	<include>../../trunk/examples/svcomp/termination-crafted/NonTermination1_false-termination.c</include>
	<include>../../trunk/examples/svcomp/termination-libowfat/strcpy_small_true-termination.c.i</include>
	<include>../../trunk/examples/svcomp/termination-libowfat/strstr_true-termination.c.i</include>
	<include>../../trunk/examples/svcomp/termination-memory-alloca/b.10-alloca_true-termination.c.i</include>
	<include>../../trunk/examples/svcomp/termination-numeric/Avg_true_true-termination.c</include>
	<include>../../trunk/examples/svcomp/termination-numeric/Et1_true_true-termination.c</include>
	<include>../../trunk/examples/svcomp/termination-numeric/LeUserDefRec_true-termination.c</include>
	<include>../../trunk/examples/svcomp/termination-restricted-15/NO_13_false-termination.c</include>
	<include>../../trunk/examples/svcomp/termination-restricted-15/WhileTrueInc_false-termination.c</include>
	<include>../../trunk/examples/svcomp/termination-restricted-15/java_Continue1_true-termination.c</include>
    <include>../../trunk/examples/svcomp/termination-memory-alloca/a.04-alloca_true-termination.c.i</include>
    <include>../../trunk/examples/svcomp/termination-restricted-15/ConvLower_false-termination.c</include>
    <include>../../trunk/examples/svcomp/termination-crafted/Collatz_unknown-termination.c</include>
	<include>../../trunk/examples/svcomp/termination-libowfat/dirname_true-termination.c.i</include>
    <propertyfile>${inputfile_path}/ALL.prp</propertyfile>
	<option name="64bit"></option>
	<option name="precise"></option>
	<option name="--full-output"></option>

  </tasks>


</benchmark>
