#!/usr/bin/perl -i
# Perl script that Jochen wrote for me to create .smt2 scripts for the 
# SMT competition
#
# In the bash shell you can apply this script to all files in the folder using the
# for i in *.smt2 ; do perl THIS_SCRIPT.pl $i; done

while (<>) {
     next if $_ =~ /^\(set-option :produce.*\)/;
     next if $_ =~ /^\(get-value\s.*\)/;
     next if $_ =~ /^\(echo .*\)/;
     next if $_ =~ /^\(get-unsat-core\)/;
  if (/^\(set-logic.*\)/) {
     print '(set-logic QF_UFLIA)
(set-info :source |
SMT script generated by Ultimate Automizer[1,2].
Ultimate Automizer is an automatic software verification tool for C programs.
This tool is a prototype implementation of an automata-theoretic approach that 
allows a modular verification of programs.[3]

This SMT script belongs to a set of SMT scripts that was generated by applying
revision 11583 of Ultimate Automizer to benchmarks of the SV-COMP 2014 [4] 
which are available at [5].

2014-05-14, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)


[1] http://http://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, JÃ¼rgen Christ, Daniel Dietsch, Jochen Hoenicke,
Markus Lindenmann, Betim Musa, Christian Schilling, Stefan Wissert,
Andreas Podelski: Ultimate Automizer with Unsatisfiable Cores - (Competition 
Contribution). TACAS 2014:418-420
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model 
Checking for People Who Love Automata. CAV 2013:36-52
[4] Dirk Beyer: Status Report on Software Verification - (Competition Summary 
SV-COMP 2014). TACAS 2014
[5] https://svn.sosy-lab.org/software/sv-benchmarks/trunk/c/termination-crafted/
|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
';
  } else {
    print $_;
  }
}
