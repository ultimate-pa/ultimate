(set-option :produce-proofs true)
(set-option :proof-check-mode true)
(set-option :model-check-mode true)
(set-option :print-terms-cse false)

(set-logic QF_LIA)
(declare-const i Int)
(declare-const j Int)

(push 1)
(assert (not (= (mod (+ i j) 1) 0)))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (mod (- i j) (- 1)) 0)))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (- i j) (+ (* 5 (div (- i j) 5)) (mod (- i j) 5)))))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (- i j) (+ (* (- 5) (div (- i j) (- 5))) (mod (- i j) (- 5))))))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (mod 123456 3224) 944)))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (mod 125735 3224) 3223)))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (mod 125736 3224) 0)))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (mod (- 125736) 3224) 0)))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (mod (- 125737) 3224) 3223)))
(check-sat)
(get-proof)
(pop 1)


(push 1)
(assert (not (= (mod (- 125737) (- 3224)) 3223)))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (mod (- 125736) (- 3224)) 0)))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (mod 125736 (- 3224)) 0)))
(check-sat)
(get-proof)
(pop 1)

(push 1)
(assert (not (= (mod 125735 (- 3224)) 3223)))
(check-sat)
(get-proof)
(pop 1)
