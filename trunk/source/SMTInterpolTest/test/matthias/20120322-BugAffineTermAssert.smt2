(set-option :produce-models true)
(set-option :produce-proofs true)
(set-option :interpolant-check-mode true)
(set-logic QF_UFLIRA)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_1 () Real)
(declare-fun _g_init () Int)
(declare-fun |_old(g)_2| () Int)
(declare-fun _g_2 () Int)
(declare-fun callee_a_2 () Int)
(declare-fun callee_b_2 () Real)
(declare-fun v_callee_InParam_b_230 () Real)
(declare-fun v_callee_InParam_a_31 () Int)
(declare-fun v_callee_InParam_a_222 () Int)
(declare-fun v_callee_InParam_b_43 () Real)
(declare-fun callee_c_3 () Int)
(declare-fun callee_d_4 () Real)
(declare-fun caller_d_6 () Int)
(declare-fun caller_b_6 () Real)
(declare-fun v_callee_OutParam_c_74 () Int)
(declare-fun v_callee_OutParam_c_245 () Int)
(declare-fun v_callee_OutParam_d_256 () Real)
(declare-fun v_callee_OutParam_d_87 () Real)
(assert (! (and (= caller_d_0 0) true) :named ssa_0))
(assert (! (and (= caller_b_1 0.0) true) :named ssa_1))
(assert (! (and (= _g_2 |_old(g)_2|) true) :named ssa_2))
(assert (! (and (= callee_c_3 (+ callee_a_2 1)) true) :named ssa_3))
(assert (! (and (= callee_d_4 (+ callee_b_2 1.0)) true) :named ssa_4))
(assert (! (and true true) :named ssa_5))
(assert (! (and (and (= caller_b_6 callee_d_4) (= caller_d_6 callee_c_3) true) (= callee_d_4 callee_d_4) (= callee_c_3 callee_c_3) true) :named ssa_6))
(assert (! (and (not (and (= caller_d_6 1) (= caller_b_6 1.0))) true) :named ssa_7))
(assert (! (and (and (= callee_b_2 caller_b_1) (= callee_a_2 callee_a_2) true) (= caller_b_1 caller_b_1) (= callee_a_2 caller_d_0) true) :named ssa_localVarAssignmentAtCall2))
(assert (! (and (= _g_init |_old(g)_2|) true) :named ssa_globalOldVarAssignmentAtCall2))
(check-sat)
(get-interpolants ssa_0 ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 (and ssa_6 ssa_localVarAssignmentAtCall2 ssa_globalOldVarAssignmentAtCall2) ssa_7)
(get-interpolants ssa_2 ssa_3 ssa_4 ssa_5 (and ssa_6 ssa_localVarAssignmentAtCall2 ssa_globalOldVarAssignmentAtCall2 ssa_0 ssa_1 ssa_7))
(pop 1)
(push 1)
(declare-fun caller_d_1 () Int)
(assert (and true (and (= caller_d_1 0) true) (not (and (<= 0 caller_d_1) (<= caller_d_1 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_1 () Real)
(assert (and (and (<= 0 caller_d_0) (<= caller_d_0 0)) (and (= caller_b_1 0.0) true) (not (and (<= 0.0 caller_b_1) (<= caller_b_1 0.0) (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_1 () Int)
(assert (and true (and (= callee_c_1 (+ callee_a_0 1)) true) (not (and (<= callee_a_0 (+ callee_c_1 (- 1))) (<= callee_c_1 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(assert (and (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))) (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (<= callee_b_0 (+ callee_d_1 (- 1.0))) (<= callee_d_1 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_0 () Real)
(assert (and (and (<= callee_b_0 (+ callee_d_0 (- 1.0))) (<= callee_d_0 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))) true true (not (and (<= callee_b_0 (+ callee_d_0 (- 1.0))) (<= callee_d_0 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_c_1 () Int)
(declare-fun callee_d_1 () Real)
(declare-fun caller_d_2 () Int)
(declare-fun caller_b_2 () Real)
(declare-fun v_callee_OutParam_c_78 () Int)
(declare-fun v_callee_OutParam_d_259 () Real)
(declare-fun v_callee_OutParam_c_2410 () Int)
(declare-fun v_callee_OutParam_d_811 () Real)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2312 () Real)
(declare-fun v_callee_InParam_a_313 () Int)
(declare-fun v_callee_InParam_a_2214 () Int)
(declare-fun v_callee_InParam_b_415 () Real)
(assert (and (let ((d caller_d_0) (b caller_b_0)) (and (<= 0.0 b) (<= b 0.0) (<= 0 d) (<= d 0))) (and (= callee_b_1 caller_b_0) (= callee_a_1 callee_a_1) true) (= caller_b_0 caller_b_0) (= callee_a_1 caller_d_0) true (let ((a callee_a_1) (d callee_d_1) (c callee_c_1) (b callee_b_1)) (and (<= b (+ d (- 1.0))) (<= d (+ b 1.0)) (<= a (+ c (- 1))) (<= c (+ a 1)))) (and (= caller_b_2 callee_d_1) (= caller_d_2 callee_c_1) true) (= callee_d_1 callee_d_1) (= callee_c_1 callee_c_1) true (not (let ((d caller_d_2) (b caller_b_2)) (and (ite (< b 1.0) (<= 0.0 (+ b (- 1.0))) (or (<= b 1.0) (<= b 1.0))) (ite (<= d 0) (<= 0 (+ d (- 1))) (or (<= d 1) (<= d 1))))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(assert (and (and (ite (< caller_b_0 1.0) (<= 0.0 (+ caller_b_0 (- 1.0))) (or (<= caller_b_0 1.0) (<= caller_b_0 1.0))) (ite (<= caller_d_0 0) (<= 0 (+ caller_d_0 (- 1))) (or (<= caller_d_0 1) (<= caller_d_0 1)))) (and (not (and (= caller_d_0 1) (= caller_b_0 1.0))) true) (not false)))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_1 () Int)
(assert (and true (and (= callee_c_1 (+ callee_a_0 1)) true) (not (and (<= callee_a_0 (+ callee_c_1 (- 1))) (<= callee_c_1 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_1 () Int)
(assert (and true (and (= caller_d_1 0) true) (not (and (<= 0 caller_d_1) (<= caller_d_1 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_1 () Real)
(assert (and (and (<= 0 caller_d_0) (<= caller_d_0 0)) (and (= caller_b_1 0.0) true) (not (and (<= 0.0 caller_b_1) (<= caller_b_1 0.0) (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(assert (and (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))) (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (<= callee_b_0 (+ callee_d_1 (- 1.0))) (<= callee_d_1 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_0 () Real)
(assert (and (and (<= callee_b_0 (+ callee_d_0 (- 1.0))) (<= callee_d_0 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))) true true (not (and (<= callee_b_0 (+ callee_d_0 (- 1.0))) (<= callee_d_0 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_c_1 () Int)
(declare-fun callee_d_1 () Real)
(declare-fun caller_d_2 () Int)
(declare-fun caller_b_2 () Real)
(declare-fun v_callee_OutParam_c_716 () Int)
(declare-fun v_callee_OutParam_d_2517 () Real)
(declare-fun v_callee_OutParam_c_2418 () Int)
(declare-fun v_callee_OutParam_d_819 () Real)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2320 () Real)
(declare-fun v_callee_InParam_a_321 () Int)
(declare-fun v_callee_InParam_a_2222 () Int)
(declare-fun v_callee_InParam_b_423 () Real)
(assert (and (let ((d caller_d_0) (b caller_b_0)) (and (<= 0.0 b) (<= b 0.0) (<= 0 d) (<= d 0))) (and (= callee_b_1 caller_b_0) (= callee_a_1 callee_a_1) true) (= caller_b_0 caller_b_0) (= callee_a_1 caller_d_0) true (let ((a callee_a_1) (d callee_d_1) (c callee_c_1) (b callee_b_1)) (and (<= b (+ d (- 1.0))) (<= d (+ b 1.0)) (<= a (+ c (- 1))) (<= c (+ a 1)))) (and (= caller_b_2 callee_d_1) (= caller_d_2 callee_c_1) true) (= callee_d_1 callee_d_1) (= callee_c_1 callee_c_1) true (not (let ((d caller_d_2) (b caller_b_2)) (and (ite (< b 1.0) (<= 0.0 (+ b (- 1.0))) (or (<= b 1.0) (<= b 1.0))) (ite (<= d 0) (<= 0 (+ d (- 1))) (or (<= d 1) (<= d 1))))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(assert (and (and (ite (< caller_b_0 1.0) (<= 0.0 (+ caller_b_0 (- 1.0))) (or (<= caller_b_0 1.0) (<= caller_b_0 1.0))) (ite (<= caller_d_0 0) (<= 0 (+ caller_d_0 (- 1))) (or (<= caller_d_0 1) (<= caller_d_0 1)))) (and (not (and (= caller_d_0 1) (= caller_b_0 1.0))) true) (not false)))
(check-sat)
(pop 1)
(push 1)
(assert (and true (not true)))
(check-sat)
(pop 1)
(push 1)
(assert (and true (not true)))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_1 () Int)
(declare-fun caller_b_0 () Real)
(assert (and true (and (= caller_d_1 0) true) (not (and (<= 0.0 caller_b_0) (<= caller_b_0 0.0) (<= 0 caller_d_1) (<= caller_d_1 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_1 () Int)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_0 () Real)
(assert (and true (and (= caller_d_1 0) true) (not (and (<= callee_b_0 (+ callee_d_0 (- 1.0))) (<= callee_d_0 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_1 () Int)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(assert (and true (and (= caller_d_1 0) true) (not (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_1 () Int)
(assert (and true (and (= caller_d_1 0) true) (not false)))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_1 () Int)
(declare-fun caller_b_0 () Real)
(assert (and true (and (= caller_d_1 0) true) (not (and (ite (< caller_b_0 1.0) (<= 0.0 (+ caller_b_0 (- 1.0))) (or (<= caller_b_0 1.0) (<= caller_b_0 1.0))) (ite (<= caller_d_1 0) (<= 0 (+ caller_d_1 (- 1))) (or (<= caller_d_1 1) (<= caller_d_1 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_1 () Int)
(assert (and true (and (= caller_d_1 0) true) (not (and (<= 0 caller_d_1) (<= caller_d_1 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun d_const_1520373260 () Int)
(assert (let ((d d_const_1520373260)) (and true (not (and (<= 0 d) (<= d 0))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun d_const_1520373260 () Int)
(assert (let ((d d_const_1520373260)) (and (not true) (<= 0 d) (<= d 0))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_1 () Int)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(assert (and true (and (= callee_c_1 (+ callee_a_0 1)) true) (not (and (<= 0.0 caller_b_0) (<= caller_b_0 0.0) (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_1 () Int)
(declare-fun caller_d_0 () Int)
(assert (and true (and (= callee_c_1 (+ callee_a_0 1)) true) (not (and (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_1 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_0 () Real)
(assert (and true (and (= callee_c_1 (+ callee_a_0 1)) true) (not (and (<= callee_b_0 (+ callee_d_0 (- 1.0))) (<= callee_d_0 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_1 (- 1))) (<= callee_c_1 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_1 () Int)
(assert (and true (and (= callee_c_1 (+ callee_a_0 1)) true) (not false)))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_1 () Int)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(assert (and true (and (= callee_c_1 (+ callee_a_0 1)) true) (not (and (ite (< caller_b_0 1.0) (<= 0.0 (+ caller_b_0 (- 1.0))) (or (<= caller_b_0 1.0) (<= caller_b_0 1.0))) (ite (<= caller_d_0 0) (<= 0 (+ caller_d_0 (- 1))) (or (<= caller_d_0 1) (<= caller_d_0 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_1 () Int)
(assert (and true (and (= callee_c_1 (+ callee_a_0 1)) true) (not (and (<= callee_a_0 (+ callee_c_1 (- 1))) (<= callee_c_1 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun a_const_1520373257 () Int)
(declare-fun c_const_1520373259 () Int)
(assert (let ((a a_const_1520373257) (c c_const_1520373259)) (and true (not (and (<= a (+ c (- 1))) (<= c (+ a 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun a_const_1520373257 () Int)
(declare-fun c_const_1520373259 () Int)
(assert (let ((a a_const_1520373257) (c c_const_1520373259)) (and (not true) (<= a (+ c (- 1))) (<= c (+ a 1)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_b_1 () Real)
(declare-fun caller_d_0 () Int)
(assert (and true (and (= caller_b_1 0.0) true) (not (and (<= 0.0 caller_b_1) (<= caller_b_1 0.0) (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_b_1 () Real)
(declare-fun caller_d_0 () Int)
(assert (and true (and (= caller_b_1 0.0) true) (not (and (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_b_1 () Real)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_0 () Real)
(assert (and true (and (= caller_b_1 0.0) true) (not (and (<= callee_b_0 (+ callee_d_0 (- 1.0))) (<= callee_d_0 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_b_1 () Real)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(assert (and true (and (= caller_b_1 0.0) true) (not (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_b_1 () Real)
(assert (and true (and (= caller_b_1 0.0) true) (not false)))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_b_1 () Real)
(declare-fun caller_d_0 () Int)
(assert (and true (and (= caller_b_1 0.0) true) (not (and (ite (< caller_b_1 1.0) (<= 0.0 (+ caller_b_1 (- 1.0))) (or (<= caller_b_1 1.0) (<= caller_b_1 1.0))) (ite (<= caller_d_0 0) (<= 0 (+ caller_d_0 (- 1))) (or (<= caller_d_0 1) (<= caller_d_0 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_1 () Real)
(assert (and (and (<= 0 caller_d_0) (<= caller_d_0 0)) (and (= caller_b_1 0.0) true) (not (and (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_1 () Real)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_0 () Real)
(assert (and (and (<= 0 caller_d_0) (<= caller_d_0 0)) (and (= caller_b_1 0.0) true) (not (and (<= callee_b_0 (+ callee_d_0 (- 1.0))) (<= callee_d_0 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_1 () Real)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(assert (and (and (<= 0 caller_d_0) (<= caller_d_0 0)) (and (= caller_b_1 0.0) true) (not (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_1 () Real)
(assert (and (and (<= 0 caller_d_0) (<= caller_d_0 0)) (and (= caller_b_1 0.0) true) (not false)))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_1 () Real)
(assert (and (and (<= 0 caller_d_0) (<= caller_d_0 0)) (and (= caller_b_1 0.0) true) (not (and (ite (< caller_b_1 1.0) (<= 0.0 (+ caller_b_1 (- 1.0))) (or (<= caller_b_1 1.0) (<= caller_b_1 1.0))) (ite (<= caller_d_0 0) (<= 0 (+ caller_d_0 (- 1))) (or (<= caller_d_0 1) (<= caller_d_0 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_1 () Real)
(assert (and (and (<= 0 caller_d_0) (<= caller_d_0 0)) (and (= caller_b_1 0.0) true) (not (and (<= 0.0 caller_b_1) (<= caller_b_1 0.0) (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun b_const_1876667705 () Real)
(declare-fun d_const_1520373260 () Int)
(assert (let ((b b_const_1876667705) (d d_const_1520373260)) (and true (not (and (<= 0.0 b) (<= b 0.0) (<= 0 d) (<= d 0))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun b_const_1876667705 () Real)
(declare-fun d_const_1520373260 () Int)
(assert (let ((b b_const_1876667705) (d d_const_1520373260)) (and (not true) (<= 0.0 b) (<= b 0.0) (<= 0 d) (<= d 0))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(assert (and true (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (<= 0.0 caller_b_0) (<= caller_b_0 0.0) (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(declare-fun caller_d_0 () Int)
(assert (and true (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(assert (and true (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (<= callee_b_0 (+ callee_d_1 (- 1.0))) (<= callee_d_1 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(assert (and true (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(assert (and true (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not false)))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(assert (and true (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (ite (< caller_b_0 1.0) (<= 0.0 (+ caller_b_0 (- 1.0))) (or (<= caller_b_0 1.0) (<= caller_b_0 1.0))) (ite (<= caller_d_0 0) (<= 0 (+ caller_d_0 (- 1))) (or (<= caller_d_0 1) (<= caller_d_0 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(assert (and (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))) (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (<= 0.0 caller_b_0) (<= caller_b_0 0.0) (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(declare-fun caller_d_0 () Int)
(assert (and (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))) (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (<= 0 caller_d_0) (<= caller_d_0 0)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(assert (and (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))) (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(assert (and (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))) (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not false)))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_a_0 () Int)
(declare-fun callee_c_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(assert (and (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))) (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (ite (< caller_b_0 1.0) (<= 0.0 (+ caller_b_0 (- 1.0))) (or (<= caller_b_0 1.0) (<= caller_b_0 1.0))) (ite (<= caller_d_0 0) (<= 0 (+ caller_d_0 (- 1))) (or (<= caller_d_0 1) (<= caller_d_0 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun callee_c_0 () Int)
(declare-fun callee_a_0 () Int)
(declare-fun callee_b_0 () Real)
(declare-fun callee_d_1 () Real)
(assert (and (and (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))) (and (= callee_d_1 (+ callee_b_0 1.0)) true) (not (and (<= callee_b_0 (+ callee_d_1 (- 1.0))) (<= callee_d_1 (+ callee_b_0 1.0)) (<= callee_a_0 (+ callee_c_0 (- 1))) (<= callee_c_0 (+ callee_a_0 1))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun b_const_1876667705 () Real)
(declare-fun d_const_1876667711 () Real)
(declare-fun a_const_1520373257 () Int)
(declare-fun c_const_1520373259 () Int)
(assert (let ((b b_const_1876667705) (d d_const_1876667711) (a a_const_1520373257) (c c_const_1520373259)) (and true (not (and (<= b (+ d (- 1.0))) (<= d (+ b 1.0)) (<= a (+ c (- 1))) (<= c (+ a 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun b_const_1876667705 () Real)
(declare-fun d_const_1876667711 () Real)
(declare-fun a_const_1520373257 () Int)
(declare-fun c_const_1520373259 () Int)
(assert (let ((b b_const_1876667705) (d d_const_1876667711) (a a_const_1520373257) (c c_const_1520373259)) (and (not true) (<= b (+ d (- 1.0))) (<= d (+ b 1.0)) (<= a (+ c (- 1))) (<= c (+ a 1)))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2324 () Real)
(declare-fun v_callee_InParam_a_325 () Int)
(declare-fun v_callee_InParam_a_2226 () Int)
(declare-fun v_callee_InParam_b_427 () Real)
(declare-fun caller_d_1 () Int)
(declare-fun caller_b_1 () Real)
(assert (and true (let ((v_callee_InParam_b_4 v_callee_InParam_b_427)) (let ((v_callee_InParam_a_22 v_callee_InParam_a_2226)) (let ((v_callee_InParam_a_3 v_callee_InParam_a_325)) (let ((v_callee_InParam_b_23 v_callee_InParam_b_2324)) (let ((v_b_22 callee_b_1)) (let ((v_a_21 callee_a_1)) (let ((v_b_5 caller_b_0)) (let ((v_d_4 caller_d_0)) (and (and (= v_b_22 v_b_5) (= v_a_21 v_a_21) true) (= v_b_5 v_b_5) (= v_a_21 v_d_4) true))))))))) (not (let ((d caller_d_1) (b caller_b_1)) (and (<= 0.0 b) (<= b 0.0) (<= 0 d) (<= d 0))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2328 () Real)
(declare-fun v_callee_InParam_a_329 () Int)
(declare-fun v_callee_InParam_a_2230 () Int)
(declare-fun v_callee_InParam_b_431 () Real)
(declare-fun caller_d_1 () Int)
(assert (and true (let ((v_callee_InParam_b_4 v_callee_InParam_b_431)) (let ((v_callee_InParam_a_22 v_callee_InParam_a_2230)) (let ((v_callee_InParam_a_3 v_callee_InParam_a_329)) (let ((v_callee_InParam_b_23 v_callee_InParam_b_2328)) (let ((v_b_22 callee_b_1)) (let ((v_a_21 callee_a_1)) (let ((v_b_5 caller_b_0)) (let ((v_d_4 caller_d_0)) (and (and (= v_b_22 v_b_5) (= v_a_21 v_a_21) true) (= v_b_5 v_b_5) (= v_a_21 v_d_4) true))))))))) (not (let ((d caller_d_1)) (and (<= 0 d) (<= d 0))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2332 () Real)
(declare-fun v_callee_InParam_a_333 () Int)
(declare-fun v_callee_InParam_a_2234 () Int)
(declare-fun v_callee_InParam_b_435 () Real)
(declare-fun callee_c_1 () Int)
(declare-fun callee_d_1 () Real)
(assert (and true (let ((v_callee_InParam_b_4 v_callee_InParam_b_435)) (let ((v_callee_InParam_a_22 v_callee_InParam_a_2234)) (let ((v_callee_InParam_a_3 v_callee_InParam_a_333)) (let ((v_callee_InParam_b_23 v_callee_InParam_b_2332)) (let ((v_b_22 callee_b_1)) (let ((v_a_21 callee_a_1)) (let ((v_b_5 caller_b_0)) (let ((v_d_4 caller_d_0)) (and (and (= v_b_22 v_b_5) (= v_a_21 v_a_21) true) (= v_b_5 v_b_5) (= v_a_21 v_d_4) true))))))))) (not (let ((a callee_a_1) (d callee_d_1) (c callee_c_1) (b callee_b_1)) (and (<= b (+ d (- 1.0))) (<= d (+ b 1.0)) (<= a (+ c (- 1))) (<= c (+ a 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2336 () Real)
(declare-fun v_callee_InParam_a_337 () Int)
(declare-fun v_callee_InParam_a_2238 () Int)
(declare-fun v_callee_InParam_b_439 () Real)
(declare-fun callee_c_1 () Int)
(assert (and true (let ((v_callee_InParam_b_4 v_callee_InParam_b_439)) (let ((v_callee_InParam_a_22 v_callee_InParam_a_2238)) (let ((v_callee_InParam_a_3 v_callee_InParam_a_337)) (let ((v_callee_InParam_b_23 v_callee_InParam_b_2336)) (let ((v_b_22 callee_b_1)) (let ((v_a_21 callee_a_1)) (let ((v_b_5 caller_b_0)) (let ((v_d_4 caller_d_0)) (and (and (= v_b_22 v_b_5) (= v_a_21 v_a_21) true) (= v_b_5 v_b_5) (= v_a_21 v_d_4) true))))))))) (not (let ((a callee_a_1) (c callee_c_1)) (and (<= a (+ c (- 1))) (<= c (+ a 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2340 () Real)
(declare-fun v_callee_InParam_a_341 () Int)
(declare-fun v_callee_InParam_a_2242 () Int)
(declare-fun v_callee_InParam_b_443 () Real)
(assert (and true (let ((v_callee_InParam_b_4 v_callee_InParam_b_443)) (let ((v_callee_InParam_a_22 v_callee_InParam_a_2242)) (let ((v_callee_InParam_a_3 v_callee_InParam_a_341)) (let ((v_callee_InParam_b_23 v_callee_InParam_b_2340)) (let ((v_b_22 callee_b_1)) (let ((v_a_21 callee_a_1)) (let ((v_b_5 caller_b_0)) (let ((v_d_4 caller_d_0)) (and (and (= v_b_22 v_b_5) (= v_a_21 v_a_21) true) (= v_b_5 v_b_5) (= v_a_21 v_d_4) true))))))))) (not false)))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2344 () Real)
(declare-fun v_callee_InParam_a_345 () Int)
(declare-fun v_callee_InParam_a_2246 () Int)
(declare-fun v_callee_InParam_b_447 () Real)
(declare-fun caller_d_1 () Int)
(declare-fun caller_b_1 () Real)
(assert (and true (let ((v_callee_InParam_b_4 v_callee_InParam_b_447)) (let ((v_callee_InParam_a_22 v_callee_InParam_a_2246)) (let ((v_callee_InParam_a_3 v_callee_InParam_a_345)) (let ((v_callee_InParam_b_23 v_callee_InParam_b_2344)) (let ((v_b_22 callee_b_1)) (let ((v_a_21 callee_a_1)) (let ((v_b_5 caller_b_0)) (let ((v_d_4 caller_d_0)) (and (and (= v_b_22 v_b_5) (= v_a_21 v_a_21) true) (= v_b_5 v_b_5) (= v_a_21 v_d_4) true))))))))) (not (let ((d caller_d_1) (b caller_b_1)) (and (ite (< b 1.0) (<= 0.0 (+ b (- 1.0))) (or (<= b 1.0) (<= b 1.0))) (ite (<= d 0) (<= 0 (+ d (- 1))) (or (<= d 1) (<= d 1))))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2348 () Real)
(declare-fun v_callee_InParam_a_349 () Int)
(declare-fun v_callee_InParam_a_2250 () Int)
(declare-fun v_callee_InParam_b_451 () Real)
(declare-fun caller_d_1 () Int)
(declare-fun caller_b_1 () Real)
(assert (and (let ((d caller_d_0) (b caller_b_0)) (and (<= 0.0 b) (<= b 0.0) (<= 0 d) (<= d 0))) (let ((v_callee_InParam_b_4 v_callee_InParam_b_451)) (let ((v_callee_InParam_a_22 v_callee_InParam_a_2250)) (let ((v_callee_InParam_a_3 v_callee_InParam_a_349)) (let ((v_callee_InParam_b_23 v_callee_InParam_b_2348)) (let ((v_b_22 callee_b_1)) (let ((v_a_21 callee_a_1)) (let ((v_b_5 caller_b_0)) (let ((v_d_4 caller_d_0)) (and (and (= v_b_22 v_b_5) (= v_a_21 v_a_21) true) (= v_b_5 v_b_5) (= v_a_21 v_d_4) true))))))))) (not (let ((d caller_d_1) (b caller_b_1)) (and (<= 0.0 b) (<= b 0.0) (<= 0 d) (<= d 0))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2352 () Real)
(declare-fun v_callee_InParam_a_353 () Int)
(declare-fun v_callee_InParam_a_2254 () Int)
(declare-fun v_callee_InParam_b_455 () Real)
(declare-fun caller_d_1 () Int)
(assert (and (let ((d caller_d_0) (b caller_b_0)) (and (<= 0.0 b) (<= b 0.0) (<= 0 d) (<= d 0))) (let ((v_callee_InParam_b_4 v_callee_InParam_b_455)) (let ((v_callee_InParam_a_22 v_callee_InParam_a_2254)) (let ((v_callee_InParam_a_3 v_callee_InParam_a_353)) (let ((v_callee_InParam_b_23 v_callee_InParam_b_2352)) (let ((v_b_22 callee_b_1)) (let ((v_a_21 callee_a_1)) (let ((v_b_5 caller_b_0)) (let ((v_d_4 caller_d_0)) (and (and (= v_b_22 v_b_5) (= v_a_21 v_a_21) true) (= v_b_5 v_b_5) (= v_a_21 v_d_4) true))))))))) (not (let ((d caller_d_1)) (and (<= 0 d) (<= d 0))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2356 () Real)
(declare-fun v_callee_InParam_a_357 () Int)
(declare-fun v_callee_InParam_a_2258 () Int)
(declare-fun v_callee_InParam_b_459 () Real)
(declare-fun callee_c_1 () Int)
(declare-fun callee_d_1 () Real)
(assert (and (let ((d caller_d_0) (b caller_b_0)) (and (<= 0.0 b) (<= b 0.0) (<= 0 d) (<= d 0))) (let ((v_callee_InParam_b_4 v_callee_InParam_b_459)) (let ((v_callee_InParam_a_22 v_callee_InParam_a_2258)) (let ((v_callee_InParam_a_3 v_callee_InParam_a_357)) (let ((v_callee_InParam_b_23 v_callee_InParam_b_2356)) (let ((v_b_22 callee_b_1)) (let ((v_a_21 callee_a_1)) (let ((v_b_5 caller_b_0)) (let ((v_d_4 caller_d_0)) (and (and (= v_b_22 v_b_5) (= v_a_21 v_a_21) true) (= v_b_5 v_b_5) (= v_a_21 v_d_4) true))))))))) (not (let ((a callee_a_1) (d callee_d_1) (c callee_c_1) (b callee_b_1)) (and (<= b (+ d (- 1.0))) (<= d (+ b 1.0)) (<= a (+ c (- 1))) (<= c (+ a 1)))))))
(check-sat)
(pop 1)
(push 1)
(declare-fun caller_d_0 () Int)
(declare-fun caller_b_0 () Real)
(declare-fun callee_a_1 () Int)
(declare-fun callee_b_1 () Real)
(declare-fun v_callee_InParam_b_2360 () Real)
(declare-fun v_callee_InParam_a_361 () Int)
(declare-fun v_callee_InParam_a_2262 () Int)
(declare-fun v_callee_InParam_b_463 () Real)
(declare-fun callee_c_1 () Int)
(assert (and (let ((d caller_d_0) (b caller_b_0)) (and (<= 0.0 b) (<= b 0.0) (<= 0 d) (<= d 0))) (let ((v_callee_InParam_b_4 v_callee_InParam_b_463)) (let ((v_callee_InParam_a_22 v_callee_InParam_a_2262)) (let ((v_callee_InParam_a_3 v_callee_InParam_a_361)) (let ((v_callee_InParam_b_23 v_callee_InParam_b_2360)) (let ((v_b_22 callee_b_1)) (let ((v_a_21 callee_a_1)) (let ((v_b_5 caller_b_0)) (let ((v_d_4 caller_d_0)) (and (and (= v_b_22 v_b_5) (= v_a_21 v_a_21) true) (= v_b_5 v_b_5) (= v_a_21 v_d_4) true))))))))) (not (let ((a callee_a_1) (c callee_c_1)) (and (<= a (+ c (- 1))) (<= c (+ a 1)))))))
(check-sat)
