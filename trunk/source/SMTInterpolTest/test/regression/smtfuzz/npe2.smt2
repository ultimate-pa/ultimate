(set-info :expect-errors 2)
(set-logic NRA)
(declare-fun v0 () Bool)
(declare-fun v1 () Bool)
(declare-fun v2 () Bool)
(declare-fun v3 () Bool)
(declare-fun v4 () Bool)
(declare-fun v5 () Bool)
(declare-fun v6 () Bool)
(declare-fun v7 () Bool)
(declare-fun v8 () Bool)
(declare-fun r0 () Real)
(declare-fun r4 () Real)
(declare-fun v9 () Bool)
(declare-fun r5 () Real)
(assert (exists ((q0 Real)) (not (>= 387304.0 0.327560811 q0 q0 387304.0))))
(assert (exists ((q1 Real)) v3))
(declare-fun v10 () Bool)
(declare-fun v11 () Bool)
(push 1)
(assert (exists ((q2 Real)) v7))
(pop 1)
(declare-fun v12 () Bool)
(push 1)
(declare-fun v13 () Bool)
(assert (not (exists ((q3 Real) (q4 Bool) (q5 Bool)) (not (xor (and (not v0) v5 v7 (not v8) v5 (<= 387304.0 387304.0)) q5 q4 q5 (not v8) v5 q4 v10 v11 q4 q5)))))
(declare-fun v14 () Bool)
(push 1)
(declare-fun v15 () Bool)
(declare-fun r6 () Real)
(push 1)
(declare-fun v16 () Bool)
(declare-fun v17 () Bool)
(assert (not (forall ((q6 Real) (q7 Bool)) v13)))
(declare-fun v18 () Bool)
(assert (exists ((q8 Bool)) (>= r0 r6 r6 r6)))
(declare-fun v19 () Bool)
(assert (forall ((q9 Real) (q10 Bool)) (not (xor q10 v13 v1))))
(declare-fun r7 () Real)
(declare-fun v20 () Bool)
(declare-fun r8 () Real)
(declare-fun v21 () Bool)
(declare-fun r9 () Real)
(assert (forall ((q11 Real) (q12 Real) (q13 Real)) (not (distinct r5 (/ (- r5 r4) r5) q11))))
(declare-fun v22 () Bool)
(declare-fun r10 () Real)
(declare-fun r11 () Real)
(assert (not (exists ((q14 Bool) (q15 Real)) v3)))
(declare-fun v23 () Bool)
(declare-fun r12 () Real)
(assert (forall ((q16 Real) (q17 Bool)) (not (> (* (* r5 r5 387304.0) r0 958714.0 (* 958714.0 (- r5 r4))) q16 q16 (- (- (/ (* r5 r5 387304.0) 387304.0)))))))
(declare-fun r13 () Real)
(push 1)
(declare-fun v24 () Bool)
(declare-fun v25 () Bool)
(assert (not (exists ((q18 Bool) (q19 Real) (q20 Bool)) (= v20 v23 (=> (=> v3 v8) v1) v7))))
(assert (not (exists ((q21 Bool) (q22 Real) (q23 Real)) (not (> 9753525.0 q22 r12 9753525.0)))))
(assert (exists ((q21 Bool) (q23 Real) ) (forall ((q22 Real) ) (=> (xor (<= (* 958714.0 (- r5 r4)) (* 958714.0 (- r5 r4)) 958714.0 r9 (- (/ (* r5 r5 387304.0) 387304.0))) q21 (not v22) (=> (=> v3 v8) v1) v2 q21 q21 (=> (=> v3 v8) v1) q21) (distinct q23 4.71 4.71)))))
(declare-fun v26 () Bool)
(assert (exists ((q24 Real) (q25 Real) (q26 Real) (q27 Real)) v1))
(declare-fun v27 () Bool)
(assert (not (exists ((q28 Bool)) (not (=> q28 (=> (not v10) v9))))))
(declare-fun v28 () Bool)
(declare-fun r14 () Real)
(declare-fun r15 () Real)
(assert (not (forall ((q29 Real) (q30 Bool)) (=> (= q30 q30 q30 (= (=> (not v10) v9) v17 v19 v23 v12 v0 v19 (=> v3 v8))) (< r11 44.4314256 q29 q29 q29)))))
(declare-fun r16 () Real)
(declare-fun r17 () Real)
(assert (not (exists ((q31 Real) (q32 Bool)) (=> (distinct q31 r5) (=> (>= r0 r6 r6 r6) v26)))))
(declare-fun v29 () Bool)
(assert (forall ((q33 Bool)) (= r0 (/ (* r5 r5 387304.0) 387304.0))))
(declare-fun r18 () Real)
(assert (not (exists ((q34 Bool) (q35 Real)) (=> (= q35 4639.50037 q35) (= (distinct 958714.0 r5) v20 v16 v2 v19 q34 q34 q34 q34)))))
(pop 1)
(declare-fun v30 () Bool)
(push 1)
(declare-fun v31 () Bool)
(assert (not (exists ((q36 Real) (q37 Bool) (q38 Real) (q39 Bool)) (> (- r5 r4) 44.4314256 97.86502))))
(assert (exists ((q36 Real) (q38 Real) ) (forall ((q37 Bool) (q39 Bool) ) v9)))
(assert (exists ((q40 Real)) (= 0.327560811 (- (/ (* r5 r5 387304.0) 387304.0)))))
(assert (forall ((q41 Bool) (q42 Real) (q43 Real) (q44 Real)) v14))
(declare-fun v32 () Bool)
(declare-fun v33 () Bool)
(pop 1)
(pop 1)
(declare-fun r19 () Real)
(declare-fun v34 () Bool)
(declare-fun v35 () Bool)
(assert (or v14 (<= 387304.0 387304.0) v1))
(assert (or v1 v14 (<= 387304.0 387304.0)))
(assert (or v14 (<= 387304.0 387304.0) v1))
(assert (or v1 v14 v14))
(assert (or v1 v1 v14))
(assert (or v1 (<= 387304.0 387304.0) v1))
(assert (or v1 v14 (<= 387304.0 387304.0)))
(assert (or v1 (<= 387304.0 387304.0) (<= 387304.0 387304.0)))
(assert (or v14 v1 v1))
(assert (or (<= 387304.0 387304.0) (<= 387304.0 387304.0) v14))
(assert (or (<= 387304.0 387304.0) v1 v14))
(assert (or v14 v1 v1))
(assert (or v1 v1 v1))
(assert (or v1 v1 v14))
(assert (or v1 v14 v1))
(check-sat)
(exit)
