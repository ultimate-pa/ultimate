(set-info :expect-errors 5)
(set-option :produce-unsat-cores true)
(set-logic NRA)
(declare-fun v0 () Bool)
(declare-fun v1 () Bool)
(declare-fun v2 () Bool)
(declare-fun v3 () Bool)
(declare-fun v4 () Bool)
(declare-fun v5 () Bool)
(declare-fun v6 () Bool)
(declare-fun v7 () Bool)
(declare-fun v8 () Bool)
(declare-fun v9 () Bool)
(declare-fun v10 () Bool)
(declare-fun v11 () Bool)
(declare-fun v12 () Bool)
(declare-fun v13 () Bool)
(declare-fun v14 () Bool)
(declare-fun r0 () Real)
(declare-fun r2 () Real)
(declare-fun r4 () Real)
(declare-fun r5 () Real)
(declare-fun r6 () Real)
(declare-fun r8 () Real)
(declare-fun r10 () Real)
(declare-fun r11 () Real)
(declare-fun r12 () Real)
(declare-fun r13 () Real)
(assert (forall ((q0 Bool) (q1 Real) (q2 Real)) v5))
(assert (! (xor v4 v6) :named IP_1))
(check-sat)
(declare-fun v15 () Bool)
(assert (! v1 :named IP_2))
(declare-fun v16 () Bool)
(assert (exists ((q3 Real)) (not (<= r13 q3 0.3616288648 r12))))
(assert (exists ((q4 Bool) (q5 Bool) (q6 Real) (q7 Real)) (=> (<= q7 r12) (=> q5 q5))))
(assert (or (forall ((q4 Bool) (q5 Bool) (q6 Real) (q7 Real)) (and v5 v5 v3 v2 v1 v0 v16 (xor v4 v6))) (exists ((q4 Bool) (q5 Bool) (q6 Real) (q7 Real)) v2)))
(assert (! v16 :named IP_3))
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(declare-fun v17 () Bool)
(assert (not (forall ((q8 Real) (q9 Real) (q10 Real) (q11 Real)) (not (<= r0 q9 r11)))))
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(declare-fun v18 () Bool)
(assert (not (exists ((q12 Bool) (q13 Real)) (=> (<= r6 q13 (- r0) q13) (= v2 q12 q12 q12)))))
(assert (! (distinct v3 v5 v15 v2) :named IP_4))
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(declare-fun r14 () Real)
(assert (forall ((q14 Real) (q15 Bool) (q16 Bool) (q17 Bool)) (not (distinct v10 q16 v13 q15 q16 v1 v17))))
(assert (! v14 :named IP_5))
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(assert (exists ((q18 Real)) (not (distinct q18 q18 (- r11) r14))))
(assert (or (forall ((q18 Real)) (not (> r13 r13 q18 q18))) (exists ((q18 Real)) (not (> q18 q18 q18 r12)))))
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(push 1)
(declare-fun r15 () Real)
(assert (not (forall ((q19 Bool) (q20 Bool) (q21 Real) (q22 Bool)) (not (not v18)))))
(assert (! (or v6 v18 (and v4 v5 v4 (distinct v3 v5 v15 v2) (distinct v3 v5 v15 v2)) v0 (= 45804754469.0 r5) (and v5 v5 v3 v2 v1 v0 v16 (xor v4 v6))) :named IP_6))
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_5))
(get-unsat-core)
(declare-fun v19 () Bool)
(assert (exists ((q23 Bool) (q24 Bool) (q25 Bool) (q26 Real)) (=> (=> v10 (= 45804754469.0 r5)) (>= q26 q26 (- r8) r5 0.3616288648))))
(assert (! v13 :named IP_7))
(check-sat-assuming (IP_1 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_6))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_4 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_4 IP_6))
(get-unsat-core)
(assert (! (or (and v4 v5 v4 (distinct v3 v5 v15 v2) (distinct v3 v5 v15 v2)) v8 (< r11 r12 0.3616288648 r2)) :named IP_8))
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_6 IP_7))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_7))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_7))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(declare-fun v20 () Bool)
(assert (not (exists ((q27 Bool)) v16)))
(assert (! (or v11 v13 (and v4 v5 v4 (distinct v3 v5 v15 v2) (distinct v3 v5 v15 v2)) v20 v7 v18 v14) :named IP_9))
(check-sat-assuming (IP_5 IP_8))
(get-unsat-core)
(check-sat-assuming (IP_4 IP_6))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_7 IP_8))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_7))
(get-unsat-core)
(assert (forall ((q28 Bool) (q29 Real) (q30 Bool)) (=> (distinct q30 v14 q30 q30 v15 v19 q30 q28 q28 (distinct v3 v5 v15 v2)) (<= q29 (- r8) q29 45804754469.0))))
(assert (! (= 45804754469.0 r5) :named IP_10))
(check-sat)
(check-sat-assuming (IP_7 IP_9))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_4 IP_8))
(get-unsat-core)
(check-sat-assuming (IP_4 IP_5))
(get-unsat-core)
(declare-fun v21 () Bool)
(assert (not (forall ((q31 Bool) (q32 Real) (q33 Real) (q34 Real)) (= 12.957 r14 r14))))
(check-sat-assuming (IP_7 IP_9))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_5 IP_8))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(declare-fun v22 () Bool)
(check-sat-assuming (IP_3 IP_9))
(get-unsat-core)
(check-sat-assuming (IP_7 IP_9))
(get-unsat-core)
(check-sat-assuming (IP_4 IP_9))
(get-unsat-core)
(check-sat-assuming (IP_6 IP_9))
(get-unsat-core)
(check-sat-assuming (IP_5 IP_7))
(get-unsat-core)
(assert (not (exists ((q35 Bool) (q36 Real)) (=> (xor v5 q35 v15 (or v6 v18 (and v4 v5 v4 (distinct v3 v5 v15 v2) (distinct v3 v5 v15 v2)) v0 (= 45804754469.0 r5) (and v5 v5 v3 v2 v1 v0 v16 (xor v4 v6))) v4 (< r11 r12 0.3616288648 r2) (or v6 v18 (and v4 v5 v4 (distinct v3 v5 v15 v2) (distinct v3 v5 v15 v2)) v0 (= 45804754469.0 r5) (and v5 v5 v3 v2 v1 v0 v16 (xor v4 v6)))) (= q36 q36 r0 r11)))))
(assert (! (or (and v4 v5 v4 (distinct v3 v5 v15 v2) (distinct v3 v5 v15 v2)) v8 (< r11 r12 0.3616288648 r2)) :named IP_11))
(check-sat-assuming (IP_4 IP_6))
(get-unsat-core)
(check-sat-assuming (IP_7 IP_10))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_6))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_5))
(get-unsat-core)
(declare-fun v23 () Bool)
(assert (exists ((q37 Bool) (q38 Bool) (q39 Bool) (q40 Bool)) (and v5 v5 v3 v2 v1 v0 v16 (xor v4 v6))))
(check-sat-assuming (IP_1 IP_8))
(get-unsat-core)
(check-sat-assuming (IP_7 IP_8))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_8 IP_10))
(get-unsat-core)
(check-sat-assuming (IP_5 IP_8))
(get-unsat-core)
(assert (not (exists ((q41 Real) (q42 Bool) (q43 Bool)) (not (distinct v21 q43 (= r12 r5 r12 45804754469.0 4700242994.0) q43 q43 q42)))))
(assert (! (and v1 (or (and v4 v5 v4 (distinct v3 v5 v15 v2) (distinct v3 v5 v15 v2)) v8 (< r11 r12 0.3616288648 r2)) v1 v0 v13 v16 v10) :named IP_12))
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_5 IP_7))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_6))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_4 IP_6))
(get-unsat-core)
(check-sat)
(get-unsat-core)
(check-sat-assuming (IP_2 IP_8))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_5 IP_10))
(get-unsat-core)
(check-sat-assuming (IP_7 IP_10))
(get-unsat-core)
(check-sat-assuming (IP_7 IP_11))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_11))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_6))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_8))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_11))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_11))
(get-unsat-core)
(exit)
