(set-option :produce-unsat-cores true)
(set-info :expect-errors 64)
(set-logic NRA)
(declare-fun v0 () Bool)
(declare-fun v1 () Bool)
(declare-fun v2 () Bool)
(declare-fun v3 () Bool)
(declare-fun v4 () Bool)
(declare-fun v5 () Bool)
(declare-fun v6 () Bool)
(declare-fun v7 () Bool)
(declare-fun v8 () Bool)
(declare-fun v9 () Bool)
(declare-fun v10 () Bool)
(declare-fun v11 () Bool)
(declare-fun v12 () Bool)
(declare-fun v13 () Bool)
(declare-fun r1 () Real)
(declare-fun r3 () Real)
(declare-fun r4 () Real)
(assert (forall ((q0 Real) (q1 Bool) (q2 Real) (q3 Bool)) (=> (distinct v2 v0 q3 v11) (> r1 q0 q0))))
(assert (! (= v1 v11) :named IP_1))
(declare-fun v14 () Bool)
(assert (exists ((q4 Bool) (q5 Bool)) v4))
(assert (! (xor v12 v1) :named IP_2))
(declare-fun v15 () Bool)
(assert (forall ((q6 Bool) (q7 Bool) (q8 Real) (q9 Bool)) (= v1 v11)))
(push 1)
(declare-fun v16 () Bool)
(assert (exists ((q10 Real) (q11 Bool) (q12 Bool) (q13 Real)) (=> (= v3 q11) (= r1 r1))))
(assert (not (exists ((q14 Real) (q15 Bool)) v0)))
(assert (not (exists ((q16 Real)) v7)))
(assert (! (= v0 v16 v2 v5) :named IP_3))
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(pop 1)
(declare-fun r5 () Real)
(assert (! (not v7) :named IP_4))
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(declare-fun r6 () Real)
(assert (not (exists ((q17 Bool) (q18 Bool) (q19 Bool)) v0)))
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(push 1)
(declare-fun v17 () Bool)
(assert (exists ((q20 Bool) (q21 Real) (q22 Real) (q23 Bool)) (=> (=> q23 (not v7)) (< q22 q21 r3 r4 q21))))
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(assert (! (xor v7 v0 v6 v4 v12) :named IP_5))
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(declare-fun v18 () Bool)
(assert (exists ((q24 Bool) (q25 Real)) (=> (distinct r5 q25 q25 (/ 0.5987802 r5) q25) (distinct q24 v3 q24 q24 q24 q24 q24 (>= r4 r5) q24 (= v1 v11)))))
(assert (or (forall ((q24 Bool) (q25 Real)) v7) (exists ((q24 Bool) (q25 Real)) (not (< q25 (- r4) r6 q25 q25)))))
(check-sat-assuming (IP_3 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(pop 1)
(check-sat-assuming (IP_3 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(declare-fun v19 () Bool)
(declare-fun r7 () Real)
(assert (not (exists ((q26 Real)) v2)))
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(assert (not (exists ((q27 Real) (q28 Bool)) (not (= 0.5987802 q27 0.24956170)))))
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(declare-fun v20 () Bool)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(assert (! (distinct (= 42768.949 42768.949 r7) v12 v20 v20 (<= 0.24956170 r3 r6) v1 (<= 0.24956170 r3 r6) (= v1 v11) v10 v4 (= v1 v11)) :named IP_6))
(check-sat-assuming (IP_4 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(declare-fun v21 () Bool)
(assert (not (exists ((q29 Bool)) (not (and q29 v0 q29 v2 q29 v9 (< r4 (- r4)) v8 q29)))))
(assert (! (<= 0.24956170 r3 r6) :named IP_7))
(check-sat-assuming (IP_1 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_4 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_4))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_5))
(get-unsat-core)
(check-sat)
(get-unsat-core)
(check-sat-assuming (IP_4 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_6))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_4 IP_6))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_3))
(get-unsat-core)
(check-sat-assuming (IP_1 IP_2))
(get-unsat-core)
(check-sat-assuming (IP_3 IP_5))
(get-unsat-core)
(check-sat-assuming (IP_2 IP_6))
(get-unsat-core)
(exit)
