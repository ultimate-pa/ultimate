(set-logic NIA)
(declare-fun v0 () Bool)
(declare-fun v1 () Bool)
(declare-fun v2 () Bool)
(declare-fun v4 () Bool)
(declare-fun v5 () Bool)
(declare-fun v7 () Bool)
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i5 () Int)
(declare-fun i7 () Int)
(assert v1)
(declare-fun v8 () Bool)
(assert (< 59 61))
(check-sat)
(declare-fun v10 () Bool)
(assert (=> v10 (< 52 i1)))
(assert (not (exists ((q0 Bool) (q1 Int) (q2 Int)) (not (>= 61 q2)))))
(push 1)
(push 1)
(assert (exists ((q7 Int)) (and v10 v4 v1 (xor (distinct i7 i5) v2 (=> v10 (< 52 i1)) v10 v4 v8 v7 v10 v0 v4 v5))))
(assert (forall ((q9 Bool) (q10 Int) (q11 Int)) (not (not q9))))
(pop 1)
(check-sat)
(push 1)
(check-sat)

