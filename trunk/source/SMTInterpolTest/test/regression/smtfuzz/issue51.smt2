(set-info :expect-errors 1)
(set-logic NRA)
(declare-fun v0 () Bool)
(declare-fun v1 () Bool)
(declare-fun v2 () Bool)
(declare-fun v3 () Bool)
(declare-fun v4 () Bool)
(declare-fun v5 () Bool)
(declare-fun v6 () Bool)
(declare-fun v7 () Bool)
(declare-fun v8 () Bool)
(declare-fun v9 () Bool)
(declare-fun r0 () Real)
(declare-fun r7 () Real)
(declare-fun r10 () Real)
(push 1)
(declare-fun v10 () Bool)
(declare-fun r12 () Real)
(declare-fun v11 () Bool)
(assert (or (forall ((q3 Real)) (or v3 v7 v3)) (exists ((q3 Real)) v6)))
(assert (=> v4 v11))
(assert (exists ((q4 Real) (q5 Real) (q6 Bool) (q7 Bool)) (not (not v5))))
(assert (or (exists ((q4 Real) (q5 Real) (q6 Bool) (q7 Bool)) (>= 2530134.0 6913554.0)) (exists ((q4 Real) (q5 Real) (q6 Bool) (q7 Bool)) (not (distinct q4 q4)))))
(declare-fun r14 () Real)
(check-sat)
(pop 1)
(declare-fun v12 () Bool)
(assert (forall ((q8 Bool) (q9 Bool) (q10 Bool)) (not (and q9 v7 v3 q9 v4 v9 v8))))
(assert (or (forall ((q8 Bool) (q9 Bool) (q10 Bool)) (not (or v1 v3 q8 v5 v4 q10 q9 v4 v5))) (exists ((q8 Bool) (q9 Bool) (q10 Bool)) v12)))
(assert (and v12 v0 v12 v0 v4 v7 v1 v7 v12))
(push 1)
(assert (xor v2 v12 v12 v2 v2 v8 v0 (<= r0 r0 r10) v0 v9))
(check-sat)
(pop 1)
(declare-fun r15 () Real)
(assert (xor v12 v3 v7 v9 v12 v3 v2 v2 v2 v12))
(assert (or (forall ((q15 Real) (q16 Bool)) (=> (xor (not v12) q16 q16 q16 (= 7313772477.0 0.137156 r0) q16 v5 v0) (= r15 6599423.0 19974.0))) (exists ((q15 Real) (q16 Bool)) (=> (>= 15.0 q15 2530134.0) (and v8 q16 v9)))))
(push 1)
(check-sat)

