(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic QF_AUFLIRA)
(set-info :source |
    SMT script generated on 2017/09/29 by Ultimate. http://ultimate.informatik.uni-freiburg.de/
|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(assert true)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_$Pointer$.base_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#memory_int_-1| () (Array Int (Array Int Int)))
(declare-fun |#NULL.offset_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_$Pointer$.offset_-1| () (Array Int (Array Int Int)))
(declare-fun |#NULL.base_-1| () Int)
(declare-fun |old(#memory_$Pointer$.base)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(#memory_int)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#NULL.offset)_-1| () Int)
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_$Pointer$.offset)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#NULL.base)_-1| () Int)
(declare-fun |old(#valid)_0| () (Array Int Int))
(declare-fun |old(#NULL.offset)_0| () Int)
(declare-fun |old(#NULL.base)_0| () Int)
(declare-fun |#valid_0| () (Array Int Int))
(declare-fun |#NULL.offset_0| () Int)
(declare-fun |#NULL.base_0| () Int)
(declare-fun |#valid_1| () (Array Int Int))
(declare-fun |#NULL.offset_1| () Int)
(declare-fun |#NULL.base_1| () Int)
(declare-fun |old(#memory_$Pointer$.base)_4| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_4| () (Array Int Int))
(declare-fun |old(#memory_int)_4| () (Array Int (Array Int Int)))
(declare-fun |old(#length)_4| () (Array Int Int))
(declare-fun |old(#memory_$Pointer$.offset)_4| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.base_4| () (Array Int (Array Int Int)))
(declare-fun |#valid_4| () (Array Int Int))
(declare-fun |#memory_int_4| () (Array Int (Array Int Int)))
(declare-fun |#length_4| () (Array Int Int))
(declare-fun |#memory_$Pointer$.offset_4| () (Array Int (Array Int Int)))
(declare-fun |main_#t~malloc0.base_5| () Int)
(declare-fun |#valid_5| () (Array Int Int))
(declare-fun |#length_5| () (Array Int Int))
(declare-fun |main_#t~malloc0.offset_5| () Int)
(declare-fun main_~a~6.offset_6 () Int)
(declare-fun main_~a~6.base_6 () Int)
(declare-fun main_~p~6.base_8 () Int)
(declare-fun main_~p~6.offset_8 () Int)
(declare-fun main_~t~6.base_8 () Int)
(declare-fun main_~t~6.offset_8 () Int)
(declare-fun |main_#t~nondet1_4| () Int)
(declare-fun |main_#t~nondet1_11| () Int)
(declare-fun |#memory_$Pointer$.base_12| () (Array Int (Array Int Int)))
(declare-fun |#memory_int_12| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.offset_12| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.base_13| () (Array Int (Array Int Int)))
(declare-fun |#memory_int_13| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.offset_13| () (Array Int (Array Int Int)))
(declare-fun main_~p~6.base_14 () Int)
(declare-fun main_~p~6.offset_14 () Int)
(declare-fun |main_#t~mem8_17| () Int)
(declare-fun |main_#t~mem8_18| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= |#valid_0| |old(#valid)_0|) (= |#NULL.offset_0| |old(#NULL.offset)_0|) (= |#NULL.base_0| |old(#NULL.base)_0|)) :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! (and (= |old(#valid)_0| |#valid_-1|) (= |old(#NULL.offset)_0| |#NULL.offset_-1|) (= |old(#NULL.base)_0| |#NULL.base_-1|)) :named ssa_0_OldVarAssigCall))
(assert (! (and (= |#NULL.offset_1| 0) (= |#NULL.base_1| 0) (= |#valid_1| (store |#valid_0| 0 0))) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= |#memory_$Pointer$.base_4| |old(#memory_$Pointer$.base)_4|) (= |#valid_4| |old(#valid)_4|) (= |#memory_int_4| |old(#memory_int)_4|) (= |#length_4| |old(#length)_4|) (= |#memory_$Pointer$.offset_4| |old(#memory_$Pointer$.offset)_4|)) :named ssa_4_GlobVarAssigCall))
(assert (! true :named ssa_4_LocVarAssigCall))
(assert (! (and (= |old(#memory_$Pointer$.base)_4| |#memory_$Pointer$.base_-1|) (= |old(#valid)_4| |#valid_1|) (= |old(#memory_int)_4| |#memory_int_-1|) (= |old(#length)_4| |#length_-1|) (= |old(#memory_$Pointer$.offset)_4| |#memory_$Pointer$.offset_-1|)) :named ssa_4_OldVarAssigCall))
(assert (! (and (= |#length_5| (store |#length_4| |main_#t~malloc0.base_5| 8)) (not (= 0 |main_#t~malloc0.base_5|)) (= |main_#t~malloc0.offset_5| 0) (= (store |#valid_4| |main_#t~malloc0.base_5| 1) |#valid_5|) (= (select |#valid_4| |main_#t~malloc0.base_5|) 0)) :named ssa_5))
(assert (! (and (= main_~a~6.offset_6 |main_#t~malloc0.offset_5|) (= main_~a~6.base_6 |main_#t~malloc0.base_5|)) :named ssa_6))
(assert (! (or (not (= main_~a~6.base_6 0)) (not (= main_~a~6.offset_6 0))) :named ssa_7))
(assert (! (and (= main_~p~6.base_8 main_~a~6.base_6) (= main_~p~6.offset_8 main_~a~6.offset_6)) :named ssa_8))
(assert (! true :named ssa_9))
(assert (! (and (<= 0 (+ |main_#t~nondet1_4| 2147483648)) (<= |main_#t~nondet1_4| 2147483647)) :named ssa_10))
(assert (! (= |main_#t~nondet1_4| 0) :named ssa_11))
(assert (! (and (= |#memory_int_12| (store |#memory_int_4| main_~p~6.base_8 (store (select |#memory_int_4| main_~p~6.base_8) main_~p~6.offset_8 1))) (= |#memory_$Pointer$.base_12| (store |#memory_$Pointer$.base_4| main_~p~6.base_8 (store (select |#memory_$Pointer$.base_4| main_~p~6.base_8) main_~p~6.offset_8 (select (select |#memory_$Pointer$.base_12| main_~p~6.base_8) main_~p~6.offset_8)))) (= |#memory_$Pointer$.offset_12| (store |#memory_$Pointer$.offset_4| main_~p~6.base_8 (store (select |#memory_$Pointer$.offset_4| main_~p~6.base_8) main_~p~6.offset_8 (select (select |#memory_$Pointer$.offset_12| main_~p~6.base_8) main_~p~6.offset_8))))) :named ssa_12))
(assert (! (and (= |#memory_int_13| (store |#memory_int_12| main_~p~6.base_8 (store (select |#memory_int_12| main_~p~6.base_8) (+ main_~p~6.offset_8 4) (select (select |#memory_int_13| main_~p~6.base_8) (+ main_~p~6.offset_8 4))))) (= |#memory_$Pointer$.base_13| (store |#memory_$Pointer$.base_12| main_~p~6.base_8 (store (select |#memory_$Pointer$.base_12| main_~p~6.base_8) (+ main_~p~6.offset_8 4) 0))) (= |#memory_$Pointer$.offset_13| (store |#memory_$Pointer$.offset_12| main_~p~6.base_8 (store (select |#memory_$Pointer$.offset_12| main_~p~6.base_8) (+ main_~p~6.offset_8 4) 0)))) :named ssa_13))
(assert (! (and (= main_~p~6.offset_14 main_~a~6.offset_6) (= main_~p~6.base_14 main_~a~6.base_6)) :named ssa_14))
(assert (! true :named ssa_15))
(assert (! (or (not (= 0 main_~p~6.base_14)) (not (= 0 main_~p~6.offset_14))) :named ssa_16))
(assert (! (= |main_#t~mem8_17| (select (select |#memory_int_13| main_~p~6.base_14) main_~p~6.offset_14)) :named ssa_17))
(assert (! (not (= |main_#t~mem8_17| 1)) :named ssa_18))
(assert (! true :named ssa_19))
(check-sat)
(get-interpolants ssa_0_GlobVarAssigCall ssa_1 ssa_2 (and ssa_3_return ssa_0_LocVarAssigCall ssa_0_OldVarAssigCall ssa_precond) (and ssa_4_GlobVarAssigCall ssa_4_LocVarAssigCall ssa_4_OldVarAssigCall) ssa_5 ssa_6 ssa_7 ssa_8 ssa_9 ssa_10 ssa_11 ssa_12 ssa_13 ssa_14 ssa_15 ssa_16 ssa_17 ssa_18 (and ssa_19 ssa_postcond))
