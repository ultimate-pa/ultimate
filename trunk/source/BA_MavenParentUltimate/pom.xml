<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.uni_freiburg.informatik.ultimate</groupId>
	<artifactId>mavenparent</artifactId>
	<version>0.1.14</version>
	<packaging>pom</packaging>

	<name>Ultimate</name>
	<url>https://ultimate.informatik.uni-freiburg.de</url>
	<scm>
		<connection>scm:git:https://github.com/ultimate-pa/ultimate.git</connection>
		<developerConnection>scm:git:https://github.com/ultimate-pa/ultimate.git</developerConnection>
		<url>https://github.com/ultimate-pa/ultimate/tree/dev</url>
	</scm>

	<properties>
		<ultimate-version>0.1.14</ultimate-version>
	
		<!-- maven plugin versions -->
		<tycho-version>1.0.0</tycho-version>
		<sonar-version>3.2</sonar-version>
		<jacoco-version>0.7.7.201606060606</jacoco-version>
		<m2e-version>1.0.0</m2e-version>
		<coveralls-version>4.2.0</coveralls-version>

		<!-- reference to workspace root -->
		<workspaceDir>${basedir}/..</workspaceDir>

		<!-- Various parameters for dependent build files -->
		<cupDir>${workspaceDir}/JavaCup/target/classes</cupDir>
		<flexBinary>${workspaceDir}/JavaCup/JFlex.jar</flexBinary>
		<astbuilderBinaries>${workspaceDir}/ASTBuilder/target/classes</astbuilderBinaries>
		<acslparserDir>${workspaceDir}/ACSLParser/src/de/uni_freiburg/informatik/ultimate/acsl/parser</acslparserDir>
		<acslastDir>${workspaceDir}/ACSLParser/src/de/uni_freiburg/informatik/ultimate/model/acsl/ast</acslastDir>
		<astbuilderDir>${workspaceDir}/ASTBuilder/src/de/uni_freiburg/informatik/ultimate/astbuilder</astbuilderDir>
		<boogieparserDir>${workspaceDir}/BoogiePLParser/src/de/uni_freiburg/informatik/ultimate/boogie/parser</boogieparserDir>
		<boogieastDir>${workspaceDir}/Library-BoogieAST/src/de/uni_freiburg/informatik/ultimate/boogie/ast</boogieastDir>
		<toolchainDir>${workspaceDir}/Library-UltimateCore/src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain</toolchainDir>
		<benchexecDir>${workspaceDir}/Library-UltimateTest/src/de/uni_freiburg/informatik/ultimate/test/benchexec/benchmark</benchexecDir>
		<spaceexDir>${workspaceDir}/SpaceExParser/src/de/uni_freiburg/informatik/ultimate/plugins/spaceex/parser</spaceexDir>
		<interactiveconsoledir>${workspaceDir}/InteractiveConsole/src/de/uni_freiburg/informatik/ultimate/interactiveconsole</interactiveconsoledir>
		<smtlibDir>${workspaceDir}/SMTInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib</smtlibDir>
		<smtlib2Dir>${workspaceDir}/SMTInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib2</smtlib2Dir>
		<dimacsDir>${workspaceDir}/SMTInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/dimacs</dimacsDir>
		<externalsmtsolverDir>${workspaceDir}/SMTSolverBridge/src/de/uni_freiburg/informatik/ultimate/smtsolver/external</externalsmtsolverDir>
		<automatascriptparserDir>${workspaceDir}/AutomataScriptParser/src/de/uni_freiburg/informatik/ultimate/plugins/source/automatascriptparser</automatascriptparserDir>
		<ltl2autParserDir>${workspaceDir}/LTL2aut/src/de/uni_freiburg/informatik/ultimate/ltl2aut </ltl2autParserDir>
		<srparseparserDir>${workspaceDir}/Library-srParse/src/de/uni_freiburg/informatik/ultimate/lib/srparse</srparseparserDir>

		<!-- Encoding settings -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Path to dir were jacoco should append all the coverage metrics -->
		<jacoco.reportDir>${project.basedir}/../target</jacoco.reportDir>

		<!-- Sonar parameters -->
		<sonar.language>java</sonar.language>
		<sonar.java.source>1.8</sonar.java.source>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.jacoco.reportPath>${jacoco.reportDir}/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.showProfiling>false</sonar.showProfiling>
		<sonar.verbose>false</sonar.verbose>
		<sonar.log.level>WARN</sonar.log.level>

		<!-- we currently do not use integration tests -->
		<!-- <sonar.jacoco.itReportPath>${jacoco.reportDir}/jacoco-it.exec</sonar.jacoco.itReportPath> -->

		<!-- Exclude completely from any sonar analysis (including coverage) -->
		<sonar.exclusions>
			src/jdd/**,
			src/net/sf/javabdd/**,
			src/com/github/jhoenicke/javacup/**,
			src/org/apache/commons/cli/**,
			src/srParse/ReqLexer.java,
			src/srParse/ReqParser.java,
			src/srParse/ReqSymbols.java,
			src/de/uni_freiburg/informatik/ultimate/model/acsl/ast/*.java,
			src/de/uni_freiburg/informatik/ultimate/acsl/parser/Parser.java,
			src/de/uni_freiburg/informatik/ultimate/acsl/parser/Scanner.java,
			src/de/uni_freiburg/informatik/ultimate/acsl/parser/sym.java,
			src/de/uni_freiburg/informatik/ultimate/astbuilder/parser.java,
			src/de/uni_freiburg/informatik/ultimate/astbuilder/Lexer.java,
			src/de/uni_freiburg/informatik/ultimate/astbuilder/sym.java,
			src/de/uni_freiburg/informatik/ultimate/astbuilder/Node.java,
			src/de/uni_freiburg/informatik/ultimate/astbuilder/Parameter.java,
			src/de/uni_freiburg/informatik/ultimate/astbuilder/Grammar.java,
			src/de/uni_freiburg/informatik/ultimate/plugins/source/automatascriptparser/Lexer.java,
			src/de/uni_freiburg/informatik/ultimate/plugins/source/automatascriptparser/Parser.java,
			src/de/uni_freiburg/informatik/ultimate/plugins/source/automatascriptparser/sym.java,
			src/de/uni_freiburg/informatik/ultimate/boogie/ast/*.java,
			src/de/uni_freiburg/informatik/ultimate/boogie/parser/Parser.java,
			src/de/uni_freiburg/informatik/ultimate/boogie/parser/Lexer.java,
			src/de/uni_freiburg/informatik/ultimate/boogie/parser/LexerSymbols.java,
			src/de/uni_freiburg/informatik/ultimate/ltl2aut/Lexer.java,
			src/de/uni_freiburg/informatik/ultimate/ltl2aut/LexerAP.java,
			src/de/uni_freiburg/informatik/ultimate/ltl2aut/SymbolsAP.java,
			src/de/uni_freiburg/informatik/ultimate/ltl2aut/Symbols.java,
			src/de/uni_freiburg/informatik/ultimate/ltl2aut/ParserAP.java,
			src/de/uni_freiburg/informatik/ultimate/ltl2aut/Parser.java,
			src/de/uni_freiburg/informatik/ultimate/smtinterpol/dimacs/Lexer.java,
			src/de/uni_freiburg/informatik/ultimate/smtinterpol/dimacs/LexerSymbols.java,
			src/de/uni_freiburg/informatik/ultimate/smtinterpol/dimacs/Parser.java,
			src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib/Lexer.java,
			src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib/LexerSymbols.java,
			src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib/Parser.java,
			src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib2/Lexer.java,
			src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib2/LexerSymbols.java,
			src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib2/Parser.java,
			src/de/uni_freiburg/informatik/ultimate/smtsolver/external/Lexer.java,
			src/de/uni_freiburg/informatik/ultimate/smtsolver/external/LexerSymbols.java,
			src/de/uni_freiburg/informatik/ultimate/smtsolver/external/Parser.java,
			src/de/uni_freiburg/informatik/ultimate/plugins/spaceex/parser/generated/*.java,
			src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain/DropmodelType.java,
			src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain/ModelIdOnlyType.java,
			src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain/ObjectFactory.java,
			src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain/PluginType.java,
			src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain/SerializeType.java,
			src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain/SubchainType.java,
			src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain/ToolchainListType.java,
			src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain/ToolchainModelType.java,
			src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain/OptionType.java,
			src/de/uni_freiburg/informatik/ultimate/core/lib/toolchain/RunDefinition.java
		</sonar.exclusions>

		<!-- Exclude from sonar duplication analysis -->
		<sonar.cpd.exclusions></sonar.cpd.exclusions>

		<!-- Exclude from sonar issue analysis -->
		<!-- Format is: <ruleregexp>;<filepathregexp>,<ruleregexp>;<filepathregexp>,... -->
		<!-- E.g.: *;**/* -->
		<sonar.issue.ignore.multicriteria></sonar.issue.ignore.multicriteria>

		<!-- Global arguments for the VM used during junit tests depending on profile -->
		<!-- use -XX:+HeapDumpOnOutOfMemoryError if you want to generate dumps 
			on OutOfMemory exceptions -->
		<manualtest-argline>-Xmx4g </manualtest-argline>
		<coverage-argline>-Xmx4g -ea</coverage-argline>

	</properties>

	<repositories>
		<repository>
			<id>eclipse-mars</id>
			<layout>p2</layout>
			<url>http://download.eclipse.org/releases/mars</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>javaxRepository</id>
			<name>Java.net Repository for Maven</name>
			<url>https://maven.java.net/content/repositories/releases/javax/</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<!-- enable tycho build extension -->
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho-version}</version>
				<extensions>true</extensions>

			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<environments>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-version}</version>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${m2e-version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[0.0.0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.0.0,)</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<modules>
		<module>../BA_SiteRepository</module>
		<module>../BA_FeatureUltimateDebug</module>
		<module>../BA_FeatureUltimateCommandLine</module>
		<module>../BA_FeatureUltimateDeltaDebugger</module>
		<module>../BA_FeatureDependenciesCommandlineE4</module>
		<module>../BA_FeatureDependenciesDebugE4</module>
		<module>../BA_FeatureUltimateCommon</module>
		<module>../CoreRCP</module>
		<module>../GuiRCP</module>
		<module>../BlockEncodingV2</module>
		<module>../BoogieModSetAnnotator</module>
		<module>../BoogiePLParser</module>
		<module>../BoogiePreprocessor</module>
		<module>../BoogiePrinter</module>
		<module>../SMTInterpol</module>
		<module>../TraceAbstraction</module>
		<module>../TraceAbstractionConcurrent</module>
		<module>../TraceAbstractionWithAFAs</module>
		<module>../JavaCup</module>
		<module>../RCFGBuilder</module>
		<module>../CodeCheck</module>
		<module>../ACSLParser</module>
		<module>../SMTSolverBridge</module>
		<module>../CDTParser</module>
		<module>../CDTPlugin</module>
		<module>../CACSL2BoogieTranslator</module>
		<module>../ASTBuilder</module>
		<module>../JungVisualization</module>
		<module>../UltimateCLI</module>
		<module>../GUIGeneratedPreferencePages</module>
		<module>../GUILoggingWindow</module>
		<module>../LassoRanker</module>
		<module>../WebUltimateBridge</module>
		<module>../Library-ModelCheckerUtils</module>
		<module>../AutomataScriptParser</module>
		<module>../AutomataScriptInterpreter</module>
		<module>../BlockEncoding</module>
		<module>../BuchiAutomizer</module>
		<module>../PEAtoBoogie</module>
		<module>../Library-log4j</module>
		<module>../Library-Log4j2</module>
		<module>../Library-Disruptor</module>
		<module>../Library-Batik</module>
		<module>../Library-Jung</module>
		<module>../Library-xerces</module>
		<module>../Library-srParse</module>
		<module>../Library-PEA</module>
		<module>../Library-CZT</module>
		<module>../Library-jdom</module>
		<module>../Library-UltimateUtil</module>
		<module>../Library-SMTLIB</module>
		<module>../Library-LassoRanker</module>
		<module>../Library-Automata</module>
		<module>../Library-BoogieAST</module>
		<module>../Library-JavaBDD</module>
		<module>../Library-UltimateCore</module>
		<module>../Library-UltimateModel</module>
		<module>../Library-ApacheCommonsCLI</module>
		<module>../Library-IcfgTransformer</module>
		<module>../Library-Protobuf</module>
		<module>../Library-InteractiveModel</module>
		<module>../Library-InteractiveCommon</module>
		<module>../Library-InteractiveTA</module>
		<module>../Library-Server</module>
		<module>../UltimateServer</module>
		<module>../IcfgTransformation</module>
		<module>../BuchiProgramProduct</module>
		<module>../LTL2aut</module>
		<module>../ReachingDefinitions</module>
		<module>../IRSDependencies</module>
		<module>../Library-ApacheCommonsLang</module>
		<module>../WitnessParser</module>
		<module>../BoogieProcedureInliner</module>
		<module>../SpaceExParser</module>
		<module>../Library-ojAlgo</module>
		<module>../AbstractInterpretationV2</module>
		<module>../AutomatonDeltaDebugger</module>
		<module>../WitnessPrinter</module>
		<module>../SmtParser</module>
		<module>../SyntaxChecker</module>
		<module>../HeapSeparator</module>
		<module>../TreeAutomizer</module>
		<module>../UltimateDeltaDebugger</module>
		<module>../InvariantSynthesis</module>
	</modules>

	<profiles>

		<profile>
			<!-- The profile coverage is used to generate junit test case coverage 
				through jenkins and sonar. It uses all regression tests, but not UltimateTest, 
				as those tests are very slow and should be executed manually via profile 
				manualtest. You should not need to run this profile manually. -->
			<id>coverage</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-surefire-plugin</artifactId>
						<version>${tycho-version}</version>
						<configuration>
							<providerHint>junit47</providerHint>
							<useUIHarness>false</useUIHarness>
							<useUIThread>false</useUIThread>
							<reuseForks>false</reuseForks>
							<showEclipseLog>true</showEclipseLog>
							<threadCount>1</threadCount>
							<failIfNoTests>false</failIfNoTests>
							<trimStackTrace>true</trimStackTrace>
							<redirectTestOutputToFile>true</redirectTestOutputToFile>
							<!-- if you want to change the argLine, use the global property -->
							<argLine>${tycho.testArgLine} ${coverage-argline}</argLine>

							<systemProperties>
								<svcompdir>../svcomp</svcompdir>
							</systemProperties>

							<!-- Use this for global timeouts per class -->
							<!-- <forkedProcessTimeoutInSeconds>28800</forkedProcessTimeoutInSeconds> -->

							<includes>
								<include>**/*.java</include>
							</includes>
							<excludes>
								<exclude>**/ultimatetest/suites/**/*.java</exclude>
							</excludes>
						</configuration>
					</plugin>

					<!-- Code Coverage Analysis -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-version}</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.reportPath}</destFile>
									<append>true</append>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

			<modules>
				<!-- modules containing test utilities -->
				<module>../Library-UltimateTest</module>

				<!-- modules containing unit tests -->
				<module>../AbstractInterpretationV2Test</module>
				<module>../BoogiePreprocessorTest</module>
				<module>../CoreRCPTest</module>
				<module>../Library-AutomataTest</module>
				<module>../Library-IcfgTransformerTest</module>
				<module>../Library-ModelCheckerUtilsTest</module>
				<module>../Library-SMTLIBTest</module>
				<module>../Library-UltimateTestTest</module>
				<module>../Library-UltimateUtilTest</module>
				<module>../SMTInterpolTest</module>
				<module>../SMTSolverBridgeTest</module>
				<module>../SpaceExParserTest</module>

				<!-- UltimateRegressionTest contains system tests that are relatively fast -->
				<module>../UltimateRegressionTest</module>

				<!-- UltimateTest contains system tests, but should not be run. It is 
					excluded in surefire. -->
				<module>../UltimateTest</module>
			</modules>
		</profile>

		<profile>
			<!-- The profile travis is used to generate junit test case coverage through 
				travis and coveralls. It uses all regression tests, but not UltimateTest, 
				as those tests are very slow and should be executed manually via profile 
				manualtest. You should not need to run this profile manually. -->
			<id>travis</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-surefire-plugin</artifactId>
						<version>${tycho-version}</version>
						<configuration>
							<providerHint>junit47</providerHint>
							<useUIHarness>false</useUIHarness>
							<useUIThread>false</useUIThread>
							<reuseForks>false</reuseForks>
							<showEclipseLog>true</showEclipseLog>
							<threadCount>1</threadCount>
							<failIfNoTests>false</failIfNoTests>
							<trimStackTrace>true</trimStackTrace>
							<redirectTestOutputToFile>true</redirectTestOutputToFile>
							<argLine>${tycho.testArgLine} ${coverage-argline}</argLine>

							<includes>
								<include>**/*.java</include>
							</includes>
						</configuration>
					</plugin>

					<!-- Code Coverage Analysis -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-version}</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.reportPath}</destFile>
									<append>true</append>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Coveralls connector -->
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<version>${coveralls-version}</version>
						<configuration>
							<!-- We should not publish the repo token, but I dont know any other 
								way of telling travis. Its either here or in .travis.yml -->
							<repoToken>EfXcoEYdCZRch9bAt6OULUTnGEz43OyEw</repoToken>
							<jacocoReports>
								<jacocoReport>${jacoco.reportDir}/report/jacoco.xml</jacocoReport>
							</jacocoReports>
						</configuration>
					</plugin>
				</plugins>
			</build>

			<modules>
				<!-- modules containing test utilities -->
				<module>../Library-UltimateTest</module>

				<!-- modules containing unit tests -->
				<module>../AbstractInterpretationV2Test</module>
				<module>../BoogiePreprocessorTest</module>
				<module>../CoreRCPTest</module>
				<module>../Library-AutomataTest</module>
				<module>../Library-IcfgTransformerTest</module>
				<module>../Library-ModelCheckerUtilsTest</module>
				<module>../Library-SMTLIBTest</module>
				<module>../Library-UltimateTestTest</module>
				<module>../Library-UltimateUtilTest</module>
				<module>../SMTInterpolTest</module>
				<module>../SMTSolverBridgeTest</module>
				<module>../SpaceExParserTest</module>
				
				
			</modules>
		</profile>

		<profile>
			<!-- The profile manualtest is used to start manual tests from the commandline. 
				It allows you to run all tests, but you should nevertheless specify which 
				suite you want to run, as all the suites may require several days to run. 
				To run this, you can use the following syntax: time mvn clean integration-test 
				-Pmanualtest -Dtest=SVCOMP15TestSuite > output.log 2>&1 You can also use 
				the following options to customize your run: -o enables offline mode, skipping 
				lookup of online repositories -T n uses n threads during build export _JAVA_OPTIONS="-enableassertions" 
				(Linux) or set _JAVA_OPTIONS=-enableassertions (Windows) before the actual 
				command supplies additional options to the test VM without changing this 
				pom.xml Further notes: Maven chooses your VM by inspecting JAVA_HOME. Under 
				Windows, you can show it with echo %JAVA_HOME% and change it temporarily 
				with set JAVA_HOME=C:\Program Files\Java\jdk1.8.0_05 This profile should 
				(probably) only be used manually. -->
			<id>manualtest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-surefire-plugin</artifactId>
						<version>${tycho-version}</version>
						<configuration>
							<providerHint>junit47</providerHint>
							<useUIHarness>false</useUIHarness>
							<useUIThread>false</useUIThread>
							<reuseForks>false</reuseForks>
							<showEclipseLog>true</showEclipseLog>
							<threadCount>1</threadCount>
							<failIfNoTests>false</failIfNoTests>
							<trimStackTrace>false</trimStackTrace>
							<!-- redirectTestOutputToFile=false is the default, but to debug strange 
								maven/junit bugs, you may want to set it to true to have all the test output 
								written to file -->
							<redirectTestOutputToFile>false</redirectTestOutputToFile>
							<!-- if you want to change the argLine, use the global property; Note: 
								for some reason, in this profile we cannot use ${tycho.testArgLine} -->
							<argLine>${manualtest-argline}</argLine>

							<systemProperties>
								<svcompdir>examples/svcomp</svcompdir>
							</systemProperties>

							<!-- Use this for global timeouts per class -->
							<!-- <forkedProcessTimeoutInSeconds>28800</forkedProcessTimeoutInSeconds> -->
							<includes>
								<include>**/*.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>

			<modules>
			<!-- modules containing test utilities -->
				<module>../Library-UltimateTest</module>

				<!-- modules containing unit tests -->
				<module>../AbstractInterpretationV2Test</module>
				<module>../BoogiePreprocessorTest</module>
				<module>../CoreRCPTest</module>
				<module>../Library-AutomataTest</module>
				<module>../Library-IcfgTransformerTest</module>
				<module>../Library-ModelCheckerUtilsTest</module>
				<module>../Library-SMTLIBTest</module>
				<module>../Library-UltimateTestTest</module>
				<module>../Library-UltimateUtilTest</module>
				<module>../SMTInterpolTest</module>
				<module>../SMTSolverBridgeTest</module>
				<module>../SpaceExParserTest</module>

				<!-- UltimateRegressionTest contains system tests that are relatively fast -->
				<module>../UltimateRegressionTest</module>

				<!-- UltimateTest contains system tests, but should not be run. It is 
					excluded in surefire. -->
				<module>../UltimateTest</module>
			</modules>
		</profile>
	</profiles>

</project>
