[L49]  CALL       call ULTIMATE.init();
       VAL        [#NULL!base=6, #NULL!offset=7, old(#NULL!base)=6, old(#NULL!offset)=7]
[L42]             #NULL := { base: 0, offset: 0 };
       VAL        [#NULL!base=0, #NULL!offset=0, old(#NULL!base)=6, old(#NULL!offset)=7]
[L43]             #valid[0] := false;
       VAL        [#NULL!base=0, #NULL!offset=0, old(#NULL!base)=6, old(#NULL!offset)=7]
[L49]  RET        call ULTIMATE.init();
       VAL        [#NULL!base=0, #NULL!offset=0]
[L50]  CALL       call #t~ret4 := main();
       VAL        [#NULL!base=0, #NULL!offset=0]
[L8]   FCALL      call ~#a~4 := ~malloc(4);
       VAL        [#NULL!base=0, #NULL!offset=0, ~#a~4!base=8, ~#a~4!offset=0]
[L9]              havoc ~p1~4;
       VAL        [#NULL!base=0, #NULL!offset=0, ~#a~4!base=8, ~#a~4!offset=0]
[L10]             ~p1~4 := ~#a~4;
       VAL        [#NULL!base=0, #NULL!offset=0, ~#a~4!base=8, ~#a~4!offset=0, ~p1~4!base=8, ~p1~4!offset=0]
[L11]  FCALL      call write~int(5, ~#a~4, 4);
       VAL        [#NULL!base=0, #NULL!offset=0, ~#a~4!base=8, ~#a~4!offset=0, ~p1~4!base=8, ~p1~4!offset=0]
[L12]  FCALL      call #t~mem1 := read~int(~#a~4, 4);
       VAL        [#NULL!base=0, #NULL!offset=0, #t~mem1=5, ~#a~4!base=8, ~#a~4!offset=0, ~p1~4!base=8, ~p1~4!offset=0]
[L13]             #t~post2 := #t~mem1;
       VAL        [#NULL!base=0, #NULL!offset=0, #t~post2=5, ~#a~4!base=8, ~#a~4!offset=0, ~p1~4!base=8, ~p1~4!offset=0]
[L14]  FCALL      call write~int(#t~post2 - 1, ~#a~4, 4);
       VAL        [#NULL!base=0, #NULL!offset=0, ~p1~4!base=8, ~p1~4!offset=0]
[L15]             havoc #t~post2;
       VAL        [#NULL!base=0, #NULL!offset=0, ~p1~4!base=8, ~p1~4!offset=0]
[L16]             havoc #t~mem1;
       VAL        [#NULL!base=0, #NULL!offset=0, ~p1~4!base=8, ~p1~4!offset=0]
[L17]  FCALL      call #t~mem3 := read~int(~p1~4, 4);
       VAL        [#NULL!base=0, #NULL!offset=0, #t~mem3=4]
[L18]  COND TRUE  #t~mem3 == 4
       VAL        [#NULL!base=0, #NULL!offset=0]
[L19]             havoc #t~mem3;
       VAL        [#NULL!base=0, #NULL!offset=0]
[L20]  FCALL      call assert_fail();
       VAL        [#NULL!base=0, #NULL!offset=0]
[L31]             assert false;
       VAL        [#NULL!base=0, #NULL!offset=0]
