<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>test/programs/benchmarks/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i</default>
 </key>
 <key attr.name="invariant" attr.type="string" for="node" id="invariant"/>
 <key attr.name="invariant.scope" attr.type="string" for="node" id="invariant.scope"/>
 <key attr.name="namedValue" attr.type="string" for="node" id="named"/>
 <key attr.name="nodeType" attr.type="string" for="node" id="nodetype">
  <default>path</default>
 </key>
 <key attr.name="isFrontierNode" attr.type="boolean" for="node" id="frontier">
  <default>false</default>
 </key>
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="threadId" attr.type="string" for="edge" id="threadId"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="memoryModel" attr.type="string" for="graph" id="memorymodel"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="sourcecode" attr.type="string" for="edge" id="sourcecode"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="lineColSet" attr.type="string" for="edge" id="lineCols"/>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
 <key attr.name="predecessor" attr.type="string" for="edge" id="predecessor"/>
 <key attr.name="successor" attr.type="string" for="edge" id="successor"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <graph edgedefault="directed">
  <data key="witness-type">correctness_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.6.1-svn 22638M</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">test/programs/benchmarks/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i</data>
  <data key="programhash">c62539c2e14b08d86c8cb4e39e591e925fb42fda</data>
  <data key="memorymodel">precise</data>
  <data key="architecture">64bit</data>
  <node id="N2754">
   <data key="entry">true</data>
  </node>
  <node id="N3661"/>
  <edge source="N2754" target="N3661">
   <data key="sourcecode">extern struct task_struct *current_task __attribute__((__section__(".data..percpu"))) ;</data>
   <data key="startline">3761</data>
   <data key="startoffset">105332</data>
  </edge>
  <node id="N3703"/>
  <edge source="N3661" target="N3703">
   <data key="sourcecode">extern struct kernel_param_ops param_ops_int ;</data>
   <data key="startline">4000</data>
   <data key="startoffset">111955</data>
  </edge>
  <node id="N3704"/>
  <edge source="N3703" target="N3704">
   <data key="sourcecode">extern struct kernel_param_ops param_ops_bool ;</data>
   <data key="startline">4001</data>
   <data key="startoffset">112002</data>
  </edge>
  <node id="N3707"/>
  <edge source="N3704" target="N3707">
   <data key="sourcecode">extern struct module __this_module ;</data>
   <data key="startline">4004</data>
   <data key="startoffset">112102</data>
  </edge>
  <node id="N3750"/>
  <edge source="N3707" target="N3750">
   <data key="sourcecode">static int debug ;</data>
   <data key="startline">4253</data>
   <data key="startoffset">119200</data>
  </edge>
  <node id="N3751"/>
  <edge source="N3750" target="N3751">
   <data key="sourcecode">static struct usb_device_id const id_table_std[1] = { {(__u16 )3, (__u16 )1808, (__u16 )32769, (unsigned short)0, (unsigned short)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, 0UL}};</data>
   <data key="startline">4254</data>
   <data key="startoffset">119307</data>
  </edge>
  <node id="N3752"/>
  <edge source="N3751" target="N3752">
   <data key="sourcecode">static struct usb_device_id const id_table_prerenumeration[1] = { {(__u16 )3, (__u16 )1808, (__u16 )1, (unsigned short)0, (unsigned short)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      0UL}};</data>
   <data key="startline">4257</data>
   <data key="startoffset">119554</data>
  </edge>
  <node id="N3753"/>
  <edge source="N3752" target="N3753">
   <data key="sourcecode">static struct usb_device_id const id_table_combined[2] = { {(__u16 )3, (__u16 )1808, (__u16 )32769, (unsigned short)0, (unsigned short)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, 0UL},
        {(__u16 )3, (__u16 )1808, (__u16 )1, (unsigned short)0, (unsigned short)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      0UL}};</data>
   <data key="startline">4260</data>
   <data key="startoffset">119818</data>
  </edge>
  <node id="N3754"/>
  <edge source="N3753" target="N3754">
   <data key="sourcecode">extern struct usb_device_id const __mod_usb_device_table __attribute__((__unused__,
__alias__("id_table_combined"))) ;</data>
   <data key="startline">4266</data>
   <data key="startoffset">120221</data>
  </edge>
  <node id="N3755"/>
  <edge source="N3754" target="N3755">
   <data key="sourcecode">static struct usb_driver whiteheat_driver =
     {"whiteheat", &amp; usb_serial_probe, &amp; usb_serial_disconnect, (int (*)(struct usb_interface *intf ,
                                                                       unsigned int code ,
                                                                       void *buf ))0,
    (int (*)(struct usb_interface *intf , pm_message_t message ))0, (int (*)(struct usb_interface *intf ))0,
    (int (*)(struct usb_interface *intf ))0, (int (*)(struct usb_interface *intf ))0,
    (int (*)(struct usb_interface *intf ))0, id_table_combined, {{{{{0U}, 0U, 0U,
                                                                    (void *)0, {(struct lock_class_key *)0,
                                                                                {(struct lock_class *)0,
                                                                                 (struct lock_class *)0},
                                                                                (char const *)0,
                                                                                0,
                                                                                0UL}}}},
                                                                 {(struct list_head *)0,
                                                                  (struct list_head *)0}},
    {{(char const *)0, (struct bus_type *)0, (struct module *)0, (char const *)0,
      (_Bool)0, (struct of_device_id const *)0, (int (*)(struct device *dev ))0,
      (int (*)(struct device *dev ))0, (void (*)(struct device *dev ))0, (int (*)(struct device *dev ,
                                                                                  pm_message_t state ))0,
      (int (*)(struct device *dev ))0, (struct attribute_group const **)0, (struct dev_pm_ops const *)0,
      (struct driver_private *)0}, 0}, 1U, 0U, 0U};</data>
   <data key="startline">4283</data>
   <data key="startoffset">121770</data>
  </edge>
  <node id="N3774"/>
  <edge source="N3755" target="N3774">
   <data key="sourcecode">static struct usb_serial_driver whiteheat_fake_device =
     {"Connect Tech - WhiteHEAT - (prerenumeration)", id_table_prerenumeration, (char)1,
    {(struct list_head *)0, (struct list_head *)0}, {"whiteheatnofirm", (struct bus_type *)0,
                                                     &amp; __this_module, (char const *)0,
                                                     (_Bool)0, (struct of_device_id const *)0,
                                                     (int (*)(struct device *dev ))0,
                                                     (int (*)(struct device *dev ))0,
                                                     (void (*)(struct device *dev ))0,
                                                     (int (*)(struct device *dev ,
                                                              pm_message_t state ))0,
                                                     (int (*)(struct device *dev ))0,
                                                     (struct attribute_group const **)0,
                                                     (struct dev_pm_ops const *)0,
                                                     (struct driver_private *)0},
    &amp; whiteheat_driver, {{{{{0U}, 0U, 0U, (void *)0, {(struct lock_class_key *)0,
                                                      {(struct lock_class *)0, (struct lock_class *)0},
                                                      (char const *)0, 0, 0UL}}}},
                         {(struct list_head *)0, (struct list_head *)0}}, 0UL, 0UL,
    &amp; whiteheat_firmware_download, &amp; whiteheat_firmware_attach, (int (*)(struct usb_serial *serial ))0,
    (void (*)(struct usb_serial *serial ))0, (void (*)(struct usb_serial *serial ))0,
    (int (*)(struct usb_serial_port *port ))0, (int (*)(struct usb_serial_port *port ))0,
    (int (*)(struct usb_serial *serial , pm_message_t message ))0, (int (*)(struct usb_serial *serial ))0,
    (int (*)(struct tty_struct *tty , struct usb_serial_port *port ))0, (void (*)(struct usb_serial_port *port ))0,
    (int (*)(struct tty_struct *tty , struct usb_serial_port *port , unsigned char const *buf ,
             int count ))0, (int (*)(struct tty_struct *tty ))0, (int (*)(struct tty_struct *tty ,
                                                                          unsigned int cmd ,
                                                                          unsigned long arg ))0,
    (void (*)(struct tty_struct *tty , struct usb_serial_port *port , struct ktermios *old ))0,
    (void (*)(struct tty_struct *tty , int break_state ))0, (int (*)(struct tty_struct *tty ))0,
    (void (*)(struct tty_struct *tty ))0, (void (*)(struct tty_struct *tty ))0, (int (*)(struct tty_struct *tty ))0,
    (int (*)(struct tty_struct *tty , unsigned int set , unsigned int clear ))0, (int (*)(struct tty_struct *tty ,
                                                                                          struct serial_icounter_struct *icount ))0,
    (void (*)(struct usb_serial_port *port , int on ))0, (int (*)(struct usb_serial_port *port ))0,
    (void (*)(struct tty_struct *tty ))0, (void (*)(struct urb *urb ))0, (void (*)(struct urb *urb ))0,
    (void (*)(struct urb *urb ))0, (void (*)(struct urb *urb ))0, (void (*)(struct urb *urb ))0,
    (int (*)(struct usb_serial_port *port , void *dest , size_t size ))0};</data>
   <data key="startline">4325</data>
   <data key="startoffset">125098</data>
  </edge>
  <node id="N3775"/>
  <edge source="N3774" target="N3775">
   <data key="sourcecode">static struct usb_serial_driver whiteheat_device =
     {"Connect Tech - WhiteHEAT", id_table_std, (char)4, {(struct list_head *)0, (struct list_head *)0},
    {"whiteheat", (struct bus_type *)0, &amp; __this_module, (char const *)0, (_Bool)0,
     (struct of_device_id const *)0, (int (*)(struct device *dev ))0, (int (*)(struct device *dev ))0,
     (void (*)(struct device *dev ))0, (int (*)(struct device *dev , pm_message_t state ))0,
     (int (*)(struct device *dev ))0, (struct attribute_group const **)0, (struct dev_pm_ops const *)0,
     (struct driver_private *)0}, &amp; whiteheat_driver, {{{{{0U}, 0U, 0U, (void *)0,
                                                          {(struct lock_class_key *)0,
                                                           {(struct lock_class *)0,
                                                            (struct lock_class *)0},
                                                           (char const *)0, 0, 0UL}}}},
                                                       {(struct list_head *)0, (struct list_head *)0}},
    0UL, 0UL, (int (*)(struct usb_serial *serial , struct usb_device_id const *id ))0,
    &amp; whiteheat_attach, (int (*)(struct usb_serial *serial ))0, (void (*)(struct usb_serial *serial ))0,
    &amp; whiteheat_release, (int (*)(struct usb_serial_port *port ))0, (int (*)(struct usb_serial_port *port ))0,
    (int (*)(struct usb_serial *serial , pm_message_t message ))0, (int (*)(struct usb_serial *serial ))0,
    &amp; whiteheat_open, &amp; whiteheat_close, &amp; whiteheat_write, &amp; whiteheat_write_room,
    &amp; whiteheat_ioctl, &amp; whiteheat_set_termios, &amp; whiteheat_break_ctl, &amp; whiteheat_chars_in_buffer,
    &amp; whiteheat_throttle, &amp; whiteheat_unthrottle, &amp; whiteheat_tiocmget, &amp; whiteheat_tiocmset,
    (int (*)(struct tty_struct *tty , struct serial_icounter_struct *icount ))0, (void (*)(struct usb_serial_port *port ,
                                                                                           int on ))0,
    (int (*)(struct usb_serial_port *port ))0, (void (*)(struct tty_struct *tty ))0,
    (void (*)(struct urb *urb ))0, (void (*)(struct urb *urb ))0, &amp; whiteheat_read_callback,
    &amp; whiteheat_write_callback, (void (*)(struct urb *urb ))0, (int (*)(struct usb_serial_port *port ,
                                                                        void *dest ,
                                                                        size_t size ))0};</data>
   <data key="startline">4359</data>
   <data key="startoffset">128286</data>
  </edge>
  <node id="N3776"/>
  <edge source="N3775" target="N3776">
   <data key="sourcecode">static int urb_pool_size = 8;</data>
   <data key="startline">4371</data>
   <data key="startoffset">129486</data>
  </edge>
  <node id="N3795"/>
  <edge source="N3776" target="N3795">
   <data key="sourcecode">static struct lock_class_key __key___7 ;</data>
   <data key="startline">4611</data>
   <data key="startoffset">136166</data>
  </edge>
  <node id="N3796"/>
  <edge source="N3795" target="N3796">
   <data key="sourcecode">static struct lock_class_key __key___8 ;</data>
   <data key="startline">4612</data>
   <data key="startoffset">136207</data>
  </edge>
  <node id="N3797"/>
  <edge source="N3796" target="N3797">
   <data key="sourcecode">static struct lock_class_key __key___9 ;</data>
   <data key="startline">4613</data>
   <data key="startoffset">136248</data>
  </edge>
  <node id="N3798"/>
  <edge source="N3797" target="N3798">
   <data key="sourcecode">static struct lock_class_key __key___10 ;</data>
   <data key="startline">4614</data>
   <data key="startoffset">136289</data>
  </edge>
  <node id="N3799"/>
  <edge source="N3798" target="N3799">
   <data key="sourcecode">static struct lock_class_key __key___11 ;</data>
   <data key="startline">4615</data>
   <data key="startoffset">136331</data>
  </edge>
  <node id="N3802"/>
  <edge source="N3799" target="N3802">
   <data key="sourcecode">static char const __mod_author1555[87] __attribute__((__used__, __unused__, __section__(".modinfo"),
__aligned__(1))) =
  { (char const )'a', (char const )'u', (char const )'t', (char const )'h',
        (char const )'o', (char const )'r', (char const )'=', (char const )'G',
        (char const )'r', (char const )'e', (char const )'g', (char const )' ',
        (char const )'K', (char const )'r', (char const )'o', (char const )'a',
        (char const )'h', (char const )'-', (char const )'H', (char const )'a',
        (char const )'r', (char const )'t', (char const )'m', (char const )'a',
        (char const )'n', (char const )' ', (char const )'&lt;', (char const )'g',
        (char const )'r', (char const )'e', (char const )'g', (char const )'@',
        (char const )'k', (char const )'r', (char const )'o', (char const )'a',
        (char const )'h', (char const )'.', (char const )'c', (char const )'o',
        (char const )'m', (char const )'&gt;', (char const )',', (char const )' ',
        (char const )'S', (char const )'t', (char const )'u', (char const )'a',
        (char const )'r', (char const )'t', (char const )' ', (char const )'M',
        (char const )'a', (char const )'c', (char const )'D', (char const )'o',
        (char const )'n', (char const )'a', (char const )'l', (char const )'d',
        (char const )' ', (char const )'&lt;', (char const )'s', (char const )'t',
        (char const )'u', (char const )'a', (char const )'r', (char const )'t',
        (char const )'m', (char const )'@', (char const )'c', (char const )'o',
        (char const )'n', (char const )'n', (char const )'e', (char const )'c',
        (char const )'t', (char const )'t', (char const )'e', (char const )'c',
        (char const )'h', (char const )'.', (char const )'c', (char const )'o',
        (char const )'m', (char const )'&gt;', (char const )'\000'};</data>
   <data key="startline">7499</data>
   <data key="startoffset">208358</data>
  </edge>
  <node id="N3803"/>
  <edge source="N3802" target="N3803">
   <data key="sourcecode">static char const __mod_description1556[45] __attribute__((__used__, __unused__,
__section__(".modinfo"), __aligned__(1))) =
  { (char const )'d', (char const )'e', (char const )'s', (char const )'c',
        (char const )'r', (char const )'i', (char const )'p', (char const )'t',
        (char const )'i', (char const )'o', (char const )'n', (char const )'=',
        (char const )'U', (char const )'S', (char const )'B', (char const )' ',
        (char const )'C', (char const )'o', (char const )'n', (char const )'n',
        (char const )'e', (char const )'c', (char const )'t', (char const )'T',
        (char const )'e', (char const )'c', (char const )'h', (char const )' ',
        (char const )'W', (char const )'h', (char const )'i', (char const )'t',
        (char const )'e', (char const )'H', (char const )'E', (char const )'A',
        (char const )'T', (char const )' ', (char const )'d', (char const )'r',
        (char const )'i', (char const )'v', (char const )'e', (char const )'r',
        (char const )'\000'};</data>
   <data key="startline">7528</data>
   <data key="startoffset">210661</data>
  </edge>
  <node id="N3804"/>
  <edge source="N3803" target="N3804">
   <data key="sourcecode">static char const __mod_license1557[12] __attribute__((__used__, __unused__, __section__(".modinfo"),
__aligned__(1))) =
  { (char const )'l', (char const )'i', (char const )'c', (char const )'e',
        (char const )'n', (char const )'s', (char const )'e', (char const )'=',
        (char const )'G', (char const )'P', (char const )'L', (char const )'\000'};</data>
   <data key="startline">7533</data>
   <data key="startoffset">210950</data>
  </edge>
  <node id="N3805"/>
  <edge source="N3804" target="N3805">
   <data key="sourcecode">static char const __mod_firmware1559[22] __attribute__((__used__, __unused__, __section__(".modinfo"),
__aligned__(1))) =
  { (char const )'f', (char const )'i', (char const )'r', (char const )'m',
        (char const )'w', (char const )'a', (char const )'r', (char const )'e',
        (char const )'=', (char const )'w', (char const )'h', (char const )'i',
        (char const )'t', (char const )'e', (char const )'h', (char const )'e',
        (char const )'a', (char const )'t', (char const )'.', (char const )'f',
        (char const )'w', (char const )'\000'};</data>
   <data key="startline">7542</data>
   <data key="startoffset">211614</data>
  </edge>
  <node id="N3806"/>
  <edge source="N3805" target="N3806">
   <data key="sourcecode">static char const __mod_firmware1560[29] __attribute__((__used__, __unused__, __section__(".modinfo"),
__aligned__(1))) =
  { (char const )'f', (char const )'i', (char const )'r', (char const )'m',
        (char const )'w', (char const )'a', (char const )'r', (char const )'e',
        (char const )'=', (char const )'w', (char const )'h', (char const )'i',
        (char const )'t', (char const )'e', (char const )'h', (char const )'e',
        (char const )'a', (char const )'t', (char const )'_', (char const )'l',
        (char const )'o', (char const )'a', (char const )'d', (char const )'e',
        (char const )'r', (char const )'.', (char const )'f', (char const )'w',
        (char const )'\000'};</data>
   <data key="startline">7546</data>
   <data key="startoffset">211840</data>
  </edge>
  <node id="N3807"/>
  <edge source="N3806" target="N3807">
   <data key="sourcecode">static char const __param_str_urb_pool_size[14] =
  { (char const )'u', (char const )'r', (char const )'b', (char const )'_',
        (char const )'p', (char const )'o', (char const )'o', (char const )'l',
        (char const )'_', (char const )'s', (char const )'i', (char const )'z',
        (char const )'e', (char const )'\000'};</data>
   <data key="startline">7555</data>
   <data key="startoffset">212476</data>
  </edge>
  <node id="N3808"/>
  <edge source="N3807" target="N3808">
   <data key="sourcecode">static struct kernel_param const __param_urb_pool_size __attribute__((__used__,
__unused__, __section__("__param"), __aligned__(sizeof(void *)))) = {__param_str_urb_pool_size, (struct kernel_param_ops const *)(&amp; param_ops_int),
    (u16 )0, (u16 )0, {(void *)(&amp; urb_pool_size)}};</data>
   <data key="startline">7560</data>
   <data key="startoffset">212907</data>
  </edge>
  <node id="N3809"/>
  <edge source="N3808" target="N3809">
   <data key="sourcecode">static char const __mod_urb_pool_sizetype1562[27] __attribute__((__used__, __unused__,
__section__(".modinfo"), __aligned__(1))) =
  { (char const )'p', (char const )'a', (char const )'r', (char const )'m',
        (char const )'t', (char const )'y', (char const )'p', (char const )'e',
        (char const )'=', (char const )'u', (char const )'r', (char const )'b',
        (char const )'_', (char const )'p', (char const )'o', (char const )'o',
        (char const )'l', (char const )'_', (char const )'s', (char const )'i',
        (char const )'z', (char const )'e', (char const )':', (char const )'i',
        (char const )'n', (char const )'t', (char const )'\000'};</data>
   <data key="startline">7564</data>
   <data key="startoffset">213173</data>
  </edge>
  <node id="N3810"/>
  <edge source="N3809" target="N3810">
   <data key="sourcecode">static char const __mod_urb_pool_size1563[55] __attribute__((__used__, __unused__,
__section__(".modinfo"), __aligned__(1))) =
  { (char const )'p', (char const )'a', (char const )'r', (char const )'m',
        (char const )'=', (char const )'u', (char const )'r', (char const )'b',
        (char const )'_', (char const )'p', (char const )'o', (char const )'o',
        (char const )'l', (char const )'_', (char const )'s', (char const )'i',
        (char const )'z', (char const )'e', (char const )':', (char const )'N',
        (char const )'u', (char const )'m', (char const )'b', (char const )'e',
        (char const )'r', (char const )' ', (char const )'o', (char const )'f',
        (char const )' ', (char const )'u', (char const )'r', (char const )'b',
        (char const )'s', (char const )' ', (char const )'t', (char const )'o',
        (char const )' ', (char const )'u', (char const )'s', (char const )'e',
        (char const )' ', (char const )'f', (char const )'o', (char const )'r',
        (char const )' ', (char const )'b', (char const )'u', (char const )'f',
        (char const )'f', (char const )'e', (char const )'r', (char const )'i',
        (char const )'n', (char const )'g', (char const )'\000'};</data>
   <data key="startline">7577</data>
   <data key="startoffset">214198</data>
  </edge>
  <node id="N3811"/>
  <edge source="N3810" target="N3811">
   <data key="sourcecode">static char const __param_str_debug[6] = { (char const )'d', (char const )'e', (char const )'b', (char const )'u',
        (char const )'g', (char const )'\000'};</data>
   <data key="startline">7587</data>
   <data key="startoffset">215019</data>
  </edge>
  <node id="N3812"/>
  <edge source="N3811" target="N3812">
   <data key="sourcecode">static struct kernel_param const __param_debug __attribute__((__used__, __unused__,
__section__("__param"), __aligned__(sizeof(void *)))) = {__param_str_debug, (struct kernel_param_ops const *)(&amp; param_ops_bool), (u16 )420,
    (u16 )0, {(void *)(&amp; debug)}};</data>
   <data key="startline">7591</data>
   <data key="startoffset">215331</data>
  </edge>
  <node id="N3813"/>
  <edge source="N3812" target="N3813">
   <data key="sourcecode">static char const __mod_debugtype1565[20] __attribute__((__used__, __unused__,
__section__(".modinfo"), __aligned__(1))) =
  { (char const )'p', (char const )'a', (char const )'r', (char const )'m',
        (char const )'t', (char const )'y', (char const )'p', (char const )'e',
        (char const )'=', (char const )'d', (char const )'e', (char const )'b',
        (char const )'u', (char const )'g', (char const )':', (char const )'b',
        (char const )'o', (char const )'o', (char const )'l', (char const )'\000'};</data>
   <data key="startline">7592</data>
   <data key="startoffset">215362</data>
  </edge>
  <node id="N3814"/>
  <edge source="N3813" target="N3814">
   <data key="sourcecode">static char const __mod_debug1566[32] __attribute__((__used__, __unused__, __section__(".modinfo"),
__aligned__(1))) =
  { (char const )'p', (char const )'a', (char const )'r', (char const )'m',
        (char const )'=', (char const )'d', (char const )'e', (char const )'b',
        (char const )'u', (char const )'g', (char const )':', (char const )'D',
        (char const )'e', (char const )'b', (char const )'u', (char const )'g',
        (char const )' ', (char const )'e', (char const )'n', (char const )'a',
        (char const )'b', (char const )'l', (char const )'e', (char const )'d',
        (char const )' ', (char const )'o', (char const )'r', (char const )' ',
        (char const )'n', (char const )'o', (char const )'t', (char const )'\000'};</data>
   <data key="startline">7603</data>
   <data key="startoffset">216186</data>
  </edge>
  <node id="N3819"/>
  <edge source="N3814" target="N3819">
   <data key="sourcecode">int LDV_IN_INTERRUPT ;</data>
   <data key="startline">7613</data>
   <data key="startoffset">216833</data>
  </edge>
  <node id="N3820"/>
  <edge source="N3819" target="N3820">
   <data key="sourcecode">static int res_whiteheat_firmware_download_0 ;</data>
   <data key="startline">7614</data>
   <data key="startoffset">216856</data>
  </edge>
  <node id="N3821"/>
  <edge source="N3820" target="N3821">
   <data key="sourcecode">static int res_whiteheat_open_4 ;</data>
   <data key="startline">7615</data>
   <data key="startoffset">216903</data>
  </edge>
  <node id="N3826"/>
  <edge source="N3821" target="N3826">
   <data key="sourcecode">int ldv_urb_state = 0;</data>
   <data key="startline">7888</data>
   <data key="startoffset">223268</data>
  </edge>
  <node id="N3827"/>
  <edge source="N3826" target="N3827">
   <data key="sourcecode">int ldv_coherent_state = 0;</data>
   <data key="startline">7889</data>
   <data key="startoffset">223316</data>
  </edge>
  <node id="N2756"/>
  <edge source="N3827" target="N2756">
   <data key="sourcecode">struct usb_serial *var_group1 ;</data>
   <data key="startline">7617</data>
   <data key="startoffset">216954</data>
  </edge>
  <node id="N2757"/>
  <edge source="N2756" target="N2757">
   <data key="sourcecode">struct usb_device_id const *var_whiteheat_firmware_download_0_p1 ;</data>
   <data key="startline">7618</data>
   <data key="startoffset">216988</data>
  </edge>
  <node id="N2758"/>
  <edge source="N2757" target="N2758">
   <data key="sourcecode">struct tty_struct *var_group2 ;</data>
   <data key="startline">7619</data>
   <data key="startoffset">217057</data>
  </edge>
  <node id="N2759"/>
  <edge source="N2758" target="N2759">
   <data key="sourcecode">struct usb_serial_port *var_group3 ;</data>
   <data key="startline">7620</data>
   <data key="startoffset">217091</data>
  </edge>
  <node id="N2760"/>
  <edge source="N2759" target="N2760">
   <data key="sourcecode">unsigned char const *var_whiteheat_write_6_p2 ;</data>
   <data key="startline">7621</data>
   <data key="startoffset">217130</data>
  </edge>
  <node id="N2761"/>
  <edge source="N2760" target="N2761">
   <data key="sourcecode">int var_whiteheat_write_6_p3 ;</data>
   <data key="startline">7622</data>
   <data key="startoffset">217180</data>
  </edge>
  <node id="N2762"/>
  <edge source="N2761" target="N2762">
   <data key="sourcecode">unsigned int var_whiteheat_ioctl_10_p1 ;</data>
   <data key="startline">7623</data>
   <data key="startoffset">217213</data>
  </edge>
  <node id="N2763"/>
  <edge source="N2762" target="N2763">
   <data key="sourcecode">unsigned long var_whiteheat_ioctl_10_p2 ;</data>
   <data key="startline">7624</data>
   <data key="startoffset">217256</data>
  </edge>
  <node id="N2764"/>
  <edge source="N2763" target="N2764">
   <data key="sourcecode">struct ktermios *var_whiteheat_set_termios_11_p2 ;</data>
   <data key="startline">7625</data>
   <data key="startoffset">217300</data>
  </edge>
  <node id="N2765"/>
  <edge source="N2764" target="N2765">
   <data key="sourcecode">int var_whiteheat_break_ctl_12_p1 ;</data>
   <data key="startline">7626</data>
   <data key="startoffset">217353</data>
  </edge>
  <node id="N2766"/>
  <edge source="N2765" target="N2766">
   <data key="sourcecode">unsigned int var_whiteheat_tiocmset_9_p1 ;</data>
   <data key="startline">7627</data>
   <data key="startoffset">217391</data>
  </edge>
  <node id="N2767"/>
  <edge source="N2766" target="N2767">
   <data key="sourcecode">unsigned int var_whiteheat_tiocmset_9_p2 ;</data>
   <data key="startline">7628</data>
   <data key="startoffset">217436</data>
  </edge>
  <node id="N2768"/>
  <edge source="N2767" target="N2768">
   <data key="sourcecode">struct urb *var_group4 ;</data>
   <data key="startline">7629</data>
   <data key="startoffset">217481</data>
  </edge>
  <node id="N2769"/>
  <edge source="N2768" target="N2769">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">7630</data>
   <data key="startoffset">217508</data>
  </edge>
  <node id="N2770"/>
  <edge source="N2769" target="N2770">
   <data key="sourcecode">int ldv_s_whiteheat_fake_device_usb_serial_driver ;</data>
   <data key="startline">7631</data>
   <data key="startoffset">217524</data>
  </edge>
  <node id="N2771"/>
  <edge source="N2770" target="N2771">
   <data key="sourcecode">int ldv_s_whiteheat_device_usb_serial_driver ;</data>
   <data key="startline">7632</data>
   <data key="startoffset">217578</data>
  </edge>
  <node id="N2772"/>
  <edge source="N2771" target="N2772">
   <data key="sourcecode">int tmp___8 ;</data>
   <data key="startline">7633</data>
   <data key="startoffset">217627</data>
  </edge>
  <node id="N2773"/>
  <edge source="N2772" target="N2773">
   <data key="sourcecode">int tmp___9 ;</data>
   <data key="startline">7634</data>
   <data key="startoffset">217643</data>
  </edge>
  <node id="N2774"/>
  <edge source="N2773" target="N2774">
   <data key="sourcecode">LDV_IN_INTERRUPT = 1;</data>
   <data key="startline">7638</data>
   <data key="startoffset">217668</data>
  </edge>
  <node id="N2775"/>
  <edge source="N2774" target="N2775">
   <data key="sourcecode">ldv_initialize();</data>
   <data key="startline">7639</data>
   <data key="startoffset">217692</data>
  </edge>
  <node id="N2708"/>
  <edge source="N2775" target="N2708">
   <data key="sourcecode">tmp___7 = whiteheat_init();</data>
   <data key="startline">7640</data>
   <data key="startoffset">217712</data>
   <data key="enterFunction">whiteheat_init</data>
  </edge>
  <node id="N2710"/>
  <edge source="N2708" target="N2710">
   <data key="sourcecode">int retval ;</data>
   <data key="startline">7416</data>
   <data key="startoffset">206627</data>
  </edge>
  <node id="N2711"/>
  <edge source="N2710" target="N2711">
   <data key="sourcecode">retval = usb_serial_register(&amp; whiteheat_fake_device);</data>
   <data key="startline">7420</data>
   <data key="startoffset">206660</data>
  </edge>
  <node id="N2714"/>
  <edge source="N2711" target="N2714">
   <data key="sourcecode">[!((retval == 0) == 0)]</data>
   <data key="startline">7422</data>
   <data key="startoffset">206716</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2732"/>
  <edge source="N2711" target="N2732">
   <data key="sourcecode">[(retval == 0) == 0]</data>
   <data key="startline">7422</data>
   <data key="startoffset">206716</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2707"/>
  <edge source="N2732" target="N2707">
   <data key="sourcecode">return (retval);</data>
   <data key="startline">7456</data>
   <data key="startoffset">207296</data>
   <data key="returnFrom">whiteheat_init</data>
  </edge>
  <node id="N2746"/>
  <edge source="N2707" target="N2746">
   <data key="startline">7478</data>
   <data key="startoffset">207765</data>
  </edge>
  <node id="N2776"/>
  <edge source="N2707" target="N2776">
   <data key="startline">7640</data>
   <data key="startoffset">217712</data>
  </edge>
  <node id="N2779"/>
  <edge source="N2776" target="N2779">
   <data key="sourcecode">[!((tmp___7 == 0) == 0)]</data>
   <data key="startline">7642</data>
   <data key="startoffset">217750</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2983"/>
  <edge source="N2776" target="N2983">
   <data key="sourcecode">[(tmp___7 == 0) == 0]</data>
   <data key="startline">7642</data>
   <data key="startoffset">217750</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N3090"/>
  <edge source="N2983" target="N3090">
   <data key="sourcecode">ldv_check_final_state();</data>
   <data key="startline">7865</data>
   <data key="startoffset">222911</data>
   <data key="enterFunction">ldv_check_final_state</data>
  </edge>
  <node id="N3094"/>
  <edge source="N3090" target="N3094">
   <data key="sourcecode">[!(ldv_urb_state == 0)]</data>
   <data key="startline">8023</data>
   <data key="startoffset">225960</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N3095"/>
  <edge source="N3090" target="N3095">
   <data key="sourcecode">[ldv_urb_state == 0]</data>
   <data key="startline">8023</data>
   <data key="startoffset">225960</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N3098"/>
  <edge source="N3095" target="N3098">
   <data key="sourcecode">[!(ldv_coherent_state == 0)]</data>
   <data key="startline">8030</data>
   <data key="startoffset">226040</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N3099"/>
  <edge source="N3095" target="N3099">
   <data key="sourcecode">[ldv_coherent_state == 0]</data>
   <data key="startline">8030</data>
   <data key="startoffset">226040</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N3089"/>
  <edge source="N3099" target="N3089">
   <data key="sourcecode">return;</data>
   <data key="startline">8037</data>
   <data key="startoffset">226121</data>
   <data key="returnFrom">ldv_check_final_state</data>
  </edge>
  <node id="N2985"/>
  <edge source="N3089" target="N2985">
   <data key="startline">7865</data>
   <data key="startoffset">222911</data>
  </edge>
  <node id="N2753"/>
  <edge source="N2985" target="N2753">
   <data key="sourcecode">return 0;</data>
   <data key="startline">7867</data>
   <data key="startoffset">222942</data>
   <data key="returnFrom">main</data>
  </edge>
  <node id="N2988"/>
  <edge source="N3098" target="N2988">
   <data key="sourcecode">ldv_blast_assert();</data>
   <data key="startline">8034</data>
   <data key="startoffset">226089</data>
   <data key="enterFunction">ldv_blast_assert</data>
  </edge>
  <node id="N2991"/>
  <edge source="N2988" target="N2991">
   <data key="sourcecode">__VERIFIER_error();</data>
   <data key="startline">7874</data>
   <data key="startoffset">223000</data>
  </edge>
  <node id="N3036"/>
  <edge source="N2991" target="N3036">
   <data key="startline">7940</data>
   <data key="startoffset">224504</data>
   <data key="returnFrom">ldv_blast_assert</data>
  </edge>
  <node id="N3082"/>
  <edge source="N2991" target="N3082">
   <data key="startline">8003</data>
   <data key="startoffset">225667</data>
   <data key="returnFrom">ldv_blast_assert</data>
  </edge>
  <edge source="N2991" target="N3095">
   <data key="startline">8027</data>
   <data key="startoffset">226004</data>
   <data key="returnFrom">ldv_blast_assert</data>
  </edge>
  <edge source="N2991" target="N3099">
   <data key="startline">8034</data>
   <data key="startoffset">226089</data>
   <data key="returnFrom">ldv_blast_assert</data>
  </edge>
  <node id="N3083"/>
  <edge source="N3082" target="N3083">
   <data key="sourcecode">ldv_urb_state = ldv_urb_state - 1;</data>
   <data key="startline">8006</data>
   <data key="startoffset">225711</data>
  </edge>
  <node id="N3065"/>
  <edge source="N3083" target="N3065">
   <data key="sourcecode">return;</data>
   <data key="startline">8015</data>
   <data key="startoffset">225836</data>
   <data key="returnFrom">usb_free_urb</data>
  </edge>
  <node id="N786"/>
  <edge source="N3065" target="N786">
   <data key="startline">5027</data>
   <data key="startoffset">147342</data>
  </edge>
  <node id="N798"/>
  <edge source="N3065" target="N798">
   <data key="startline">5044</data>
   <data key="startoffset">147825</data>
  </edge>
  <node id="N875"/>
  <edge source="N3065" target="N875">
   <data key="startline">5139</data>
   <data key="startoffset">149997</data>
  </edge>
  <node id="N898"/>
  <edge source="N3065" target="N898">
   <data key="startline">5164</data>
   <data key="startoffset">150700</data>
  </edge>
  <node id="N899"/>
  <edge source="N898" target="N899">
   <data key="sourcecode">tmp___7 = tmp2;</data>
   <data key="startline">5165</data>
   <data key="startoffset">150735</data>
  </edge>
  <node id="N900"/>
  <edge source="N899" target="N900">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___7-&gt;next;</data>
   <data key="startline">5166</data>
   <data key="startoffset">150754</data>
  </edge>
  <node id="N888"/>
  <edge source="N900" target="N888">
   <data key="sourcecode">[((unsigned long)tmp___7) != ((unsigned long)(&amp;(info-&gt;tx_urbs_free)))]</data>
   <data key="startline">5152</data>
   <data key="startoffset">150301</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N889"/>
  <edge source="N900" target="N889">
   <data key="sourcecode">[!(((unsigned long)tmp___7) != ((unsigned long)(&amp;(info-&gt;tx_urbs_free))))]</data>
   <data key="startline">5152</data>
   <data key="startoffset">150301</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N904"/>
  <edge source="N889" target="N904">
   <data key="sourcecode">kfree((void const *)info);</data>
   <data key="startline">5173</data>
   <data key="startoffset">150849</data>
  </edge>
  <node id="N905"/>
  <edge source="N904" target="N905">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">i = i + 1;</data>
   <data key="startline">5174</data>
   <data key="startoffset">150874</data>
  </edge>
  <node id="N851"/>
  <edge source="N905" target="N851">
   <data key="sourcecode">[i &lt; __CPAchecker_TMP_0]</data>
   <data key="startline">5112</data>
   <data key="startoffset">149226</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N852"/>
  <edge source="N905" target="N852">
   <data key="sourcecode">[!(i &lt; __CPAchecker_TMP_0)]</data>
   <data key="startline">5112</data>
   <data key="startoffset">149226</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N815"/>
  <edge source="N852" target="N815">
   <data key="sourcecode">return;</data>
   <data key="startline">5180</data>
   <data key="startoffset">150943</data>
   <data key="returnFrom">whiteheat_release</data>
  </edge>
  <node id="N2919"/>
  <edge source="N815" target="N2919">
   <data key="startline">7777</data>
   <data key="startoffset">220924</data>
  </edge>
  <node id="N2972">
   <data key="invariant">(ldv_s_whiteheat_fake_device_usb_serial_driver == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (ldv_s_whiteheat_device_usb_serial_driver == 0)</data>
   <data key="invariant.scope">main</data>
  </node>
  <edge source="N2919" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">ldv_s_whiteheat_device_usb_serial_driver = 0;</data>
   <data key="startline">7778</data>
   <data key="startoffset">221008</data>
  </edge>
  <node id="N2787">
   <data key="invariant">(ldv_s_whiteheat_fake_device_usb_serial_driver == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (ldv_s_whiteheat_device_usb_serial_driver == 0)</data>
   <data key="invariant.scope">main</data>
  </node>
  <edge source="N2972" target="N2787">
   <data key="sourcecode">tmp___9 = __VERIFIER_nondet_int();</data>
   <data key="startline">7653</data>
   <data key="startoffset">217948</data>
  </edge>
  <node id="N2790">
   <data key="invariant">(tmp___9 == 0) &amp;&amp; (ldv_s_whiteheat_fake_device_usb_serial_driver == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (ldv_s_whiteheat_device_usb_serial_driver == 0)</data>
   <data key="invariant.scope">main</data>
  </node>
  <edge source="N2787" target="N2790">
   <data key="sourcecode">[!((tmp___9 == 0) == 0)]</data>
   <data key="startline">7655</data>
   <data key="startoffset">217997</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2795"/>
  <edge source="N2787" target="N2795">
   <data key="sourcecode">[(tmp___9 == 0) == 0]</data>
   <data key="startline">7655</data>
   <data key="startoffset">217997</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2798"/>
  <edge source="N2795" target="N2798">
   <data key="sourcecode">tmp___8 = __VERIFIER_nondet_int();</data>
   <data key="startline">7667</data>
   <data key="startoffset">218213</data>
  </edge>
  <node id="N2800"/>
  <edge source="N2798" target="N2800">
   <data key="sourcecode">[tmp___8 == 0]</data>
   <data key="startline">7669</data>
   <data key="startoffset">218262</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2801"/>
  <edge source="N2798" target="N2801">
   <data key="sourcecode">[!(tmp___8 == 0)]</data>
   <data key="startline">7669</data>
   <data key="startoffset">218262</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2804"/>
  <edge source="N2801" target="N2804">
   <data key="sourcecode">[tmp___8 == 1]</data>
   <data key="startline">7672</data>
   <data key="startoffset">218327</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2805"/>
  <edge source="N2801" target="N2805">
   <data key="sourcecode">[!(tmp___8 == 1)]</data>
   <data key="startline">7672</data>
   <data key="startoffset">218327</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2808"/>
  <edge source="N2805" target="N2808">
   <data key="sourcecode">[tmp___8 == 2]</data>
   <data key="startline">7675</data>
   <data key="startoffset">218370</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2809"/>
  <edge source="N2805" target="N2809">
   <data key="sourcecode">[!(tmp___8 == 2)]</data>
   <data key="startline">7675</data>
   <data key="startoffset">218370</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2812"/>
  <edge source="N2809" target="N2812">
   <data key="sourcecode">[tmp___8 == 3]</data>
   <data key="startline">7678</data>
   <data key="startoffset">218424</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2813"/>
  <edge source="N2809" target="N2813">
   <data key="sourcecode">[!(tmp___8 == 3)]</data>
   <data key="startline">7678</data>
   <data key="startoffset">218424</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2816"/>
  <edge source="N2813" target="N2816">
   <data key="sourcecode">[tmp___8 == 4]</data>
   <data key="startline">7681</data>
   <data key="startoffset">218478</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2817"/>
  <edge source="N2813" target="N2817">
   <data key="sourcecode">[!(tmp___8 == 4)]</data>
   <data key="startline">7681</data>
   <data key="startoffset">218478</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2820"/>
  <edge source="N2817" target="N2820">
   <data key="sourcecode">[tmp___8 == 5]</data>
   <data key="startline">7684</data>
   <data key="startoffset">218532</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2821"/>
  <edge source="N2817" target="N2821">
   <data key="sourcecode">[!(tmp___8 == 5)]</data>
   <data key="startline">7684</data>
   <data key="startoffset">218532</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2824"/>
  <edge source="N2821" target="N2824">
   <data key="sourcecode">[tmp___8 == 6]</data>
   <data key="startline">7687</data>
   <data key="startoffset">218597</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2825"/>
  <edge source="N2821" target="N2825">
   <data key="sourcecode">[!(tmp___8 == 6)]</data>
   <data key="startline">7687</data>
   <data key="startoffset">218597</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2828"/>
  <edge source="N2825" target="N2828">
   <data key="sourcecode">[tmp___8 == 7]</data>
   <data key="startline">7690</data>
   <data key="startoffset">218651</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2829"/>
  <edge source="N2825" target="N2829">
   <data key="sourcecode">[!(tmp___8 == 7)]</data>
   <data key="startline">7690</data>
   <data key="startoffset">218651</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2832"/>
  <edge source="N2829" target="N2832">
   <data key="sourcecode">[tmp___8 == 8]</data>
   <data key="startline">7693</data>
   <data key="startoffset">218694</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2833"/>
  <edge source="N2829" target="N2833">
   <data key="sourcecode">[!(tmp___8 == 8)]</data>
   <data key="startline">7693</data>
   <data key="startoffset">218694</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2836"/>
  <edge source="N2833" target="N2836">
   <data key="sourcecode">[tmp___8 == 9]</data>
   <data key="startline">7696</data>
   <data key="startoffset">218748</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2837"/>
  <edge source="N2833" target="N2837">
   <data key="sourcecode">[!(tmp___8 == 9)]</data>
   <data key="startline">7696</data>
   <data key="startoffset">218748</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2840"/>
  <edge source="N2837" target="N2840">
   <data key="sourcecode">[tmp___8 == 10]</data>
   <data key="startline">7699</data>
   <data key="startoffset">218802</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2841"/>
  <edge source="N2837" target="N2841">
   <data key="sourcecode">[!(tmp___8 == 10)]</data>
   <data key="startline">7699</data>
   <data key="startoffset">218802</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2844"/>
  <edge source="N2841" target="N2844">
   <data key="sourcecode">[tmp___8 == 11]</data>
   <data key="startline">7702</data>
   <data key="startoffset">218858</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2845"/>
  <edge source="N2841" target="N2845">
   <data key="sourcecode">[!(tmp___8 == 11)]</data>
   <data key="startline">7702</data>
   <data key="startoffset">218858</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2848"/>
  <edge source="N2845" target="N2848">
   <data key="sourcecode">[tmp___8 == 12]</data>
   <data key="startline">7705</data>
   <data key="startoffset">218914</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2849"/>
  <edge source="N2845" target="N2849">
   <data key="sourcecode">[!(tmp___8 == 12)]</data>
   <data key="startline">7705</data>
   <data key="startoffset">218914</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2852"/>
  <edge source="N2849" target="N2852">
   <data key="sourcecode">[tmp___8 == 13]</data>
   <data key="startline">7708</data>
   <data key="startoffset">218970</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2853"/>
  <edge source="N2849" target="N2853">
   <data key="sourcecode">[!(tmp___8 == 13)]</data>
   <data key="startline">7708</data>
   <data key="startoffset">218970</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2856"/>
  <edge source="N2853" target="N2856">
   <data key="sourcecode">[tmp___8 == 14]</data>
   <data key="startline">7711</data>
   <data key="startoffset">219026</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2857"/>
  <edge source="N2853" target="N2857">
   <data key="sourcecode">[!(tmp___8 == 14)]</data>
   <data key="startline">7711</data>
   <data key="startoffset">219026</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2860"/>
  <edge source="N2857" target="N2860">
   <data key="sourcecode">[tmp___8 == 15]</data>
   <data key="startline">7714</data>
   <data key="startoffset">219082</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2861"/>
  <edge source="N2857" target="N2861">
   <data key="sourcecode">[!(tmp___8 == 15)]</data>
   <data key="startline">7714</data>
   <data key="startoffset">219082</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2864"/>
  <edge source="N2861" target="N2864">
   <data key="sourcecode">[tmp___8 == 16]</data>
   <data key="startline">7717</data>
   <data key="startoffset">219138</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2865"/>
  <edge source="N2861" target="N2865">
   <data key="sourcecode">[!(tmp___8 == 16)]</data>
   <data key="startline">7717</data>
   <data key="startoffset">219138</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2868"/>
  <edge source="N2865" target="N2868">
   <data key="sourcecode">[tmp___8 == 17]</data>
   <data key="startline">7720</data>
   <data key="startoffset">219194</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2865" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(tmp___8 == 17)]</data>
   <data key="startline">7720</data>
   <data key="startoffset">219194</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1845"/>
  <edge source="N2868" target="N1845">
   <data key="sourcecode">whiteheat_write_callback(var_group4);</data>
   <data key="startline">7846</data>
   <data key="startoffset">222645</data>
   <data key="enterFunction">whiteheat_write_callback</data>
  </edge>
  <node id="N1847"/>
  <edge source="N1845" target="N1847">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">6352</data>
   <data key="startoffset">179783</data>
  </edge>
  <node id="N1848"/>
  <edge source="N1847" target="N1848">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">6353</data>
   <data key="startoffset">179816</data>
  </edge>
  <node id="N1849"/>
  <edge source="N1848" target="N1849">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">6354</data>
   <data key="startoffset">179851</data>
  </edge>
  <node id="N1850"/>
  <edge source="N1849" target="N1850">
   <data key="sourcecode">struct whiteheat_urb_wrap *wrap ;</data>
   <data key="startline">6355</data>
   <data key="startoffset">179869</data>
  </edge>
  <node id="N1851"/>
  <edge source="N1850" target="N1851">
   <data key="sourcecode">int status ;</data>
   <data key="startline">6356</data>
   <data key="startoffset">179905</data>
  </edge>
  <node id="N1853"/>
  <edge source="N1851" target="N1853">
   <data key="sourcecode">port = (struct usb_serial_port *)urb-&gt;context;</data>
   <data key="startline">6360</data>
   <data key="startoffset">179929</data>
  </edge>
  <node id="N198"/>
  <edge source="N1853" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">6361</data>
   <data key="startoffset">179978</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N200"/>
  <edge source="N198" target="N200">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">4100</data>
   <data key="startoffset">115680</data>
  </edge>
  <node id="N152"/>
  <edge source="N200" target="N152">
   <data key="sourcecode">tmp___7 = dev_get_drvdata((struct device const *)(&amp; port-&gt;dev));</data>
   <data key="startline">4104</data>
   <data key="startoffset">115717</data>
   <data key="enterFunction">dev_get_drvdata</data>
  </edge>
  <node id="N154"/>
  <edge source="N152" target="N154">
   <data key="sourcecode">[!((dev == 0) == 0)]</data>
   <data key="startline">4016</data>
   <data key="startoffset">112437</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N156"/>
  <edge source="N152" target="N156">
   <data key="sourcecode">[(dev == 0) == 0]</data>
   <data key="startline">4016</data>
   <data key="startoffset">112437</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N156" target="N154">
   <data key="sourcecode">[!(((dev-&gt;p) == 0) == 0)]</data>
   <data key="startline">4016</data>
   <data key="startoffset">112444</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N155"/>
  <edge source="N156" target="N155">
   <data key="sourcecode">[((dev-&gt;p) == 0) == 0]</data>
   <data key="startline">4016</data>
   <data key="startoffset">112444</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N151"/>
  <edge source="N155" target="N151">
   <data key="sourcecode">return dev-&gt;p-&gt;driver_data;</data>
   <data key="startline">4017</data>
   <data key="startoffset">112464</data>
   <data key="returnFrom">dev_get_drvdata</data>
  </edge>
  <node id="N201"/>
  <edge source="N151" target="N201">
   <data key="startline">4104</data>
   <data key="startoffset">115707</data>
  </edge>
  <node id="N197"/>
  <edge source="N201" target="N197">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">4106</data>
   <data key="startoffset">115778</data>
   <data key="returnFrom">usb_get_serial_port_data</data>
  </edge>
  <node id="N1097"/>
  <edge source="N197" target="N1097">
   <data key="startline">5422</data>
   <data key="startoffset">156456</data>
  </edge>
  <node id="N1243"/>
  <edge source="N197" target="N1243">
   <data key="startline">5604</data>
   <data key="startoffset">160891</data>
  </edge>
  <node id="N1315"/>
  <edge source="N197" target="N1315">
   <data key="startline">5692</data>
   <data key="startoffset">162929</data>
  </edge>
  <node id="N1351"/>
  <edge source="N197" target="N1351">
   <data key="startline">5736</data>
   <data key="startoffset">163982</data>
  </edge>
  <node id="N1479"/>
  <edge source="N197" target="N1479">
   <data key="startline">5879</data>
   <data key="startoffset">167504</data>
  </edge>
  <node id="N1551"/>
  <edge source="N197" target="N1551">
   <data key="startline">5967</data>
   <data key="startoffset">169714</data>
  </edge>
  <node id="N1580"/>
  <edge source="N197" target="N1580">
   <data key="startline">6003</data>
   <data key="startoffset">170629</data>
  </edge>
  <node id="N1668"/>
  <edge source="N197" target="N1668">
   <data key="startline">6114</data>
   <data key="startoffset">173347</data>
  </edge>
  <node id="N1784"/>
  <edge source="N197" target="N1784">
   <data key="startline">6266</data>
   <data key="startoffset">177655</data>
  </edge>
  <node id="N1854"/>
  <edge source="N197" target="N1854">
   <data key="startline">6361</data>
   <data key="startoffset">179978</data>
  </edge>
  <node id="N1930"/>
  <edge source="N197" target="N1930">
   <data key="startline">6463</data>
   <data key="startoffset">182553</data>
  </edge>
  <node id="N2062"/>
  <edge source="N197" target="N2062">
   <data key="startline">6618</data>
   <data key="startoffset">186674</data>
  </edge>
  <node id="N2360"/>
  <edge source="N197" target="N2360">
   <data key="startline">6973</data>
   <data key="startoffset">196462</data>
  </edge>
  <node id="N2387"/>
  <edge source="N197" target="N2387">
   <data key="startline">7011</data>
   <data key="startoffset">197464</data>
  </edge>
  <node id="N2415"/>
  <edge source="N197" target="N2415">
   <data key="startline">7047</data>
   <data key="startoffset">198338</data>
  </edge>
  <node id="N765"/>
  <edge source="N197" target="N765">
   <data key="startline">5001</data>
   <data key="startoffset">146660</data>
  </edge>
  <node id="N843"/>
  <edge source="N197" target="N843">
   <data key="startline">5105</data>
   <data key="startoffset">149075</data>
  </edge>
  <node id="N856"/>
  <edge source="N197" target="N856">
   <data key="startline">5119</data>
   <data key="startoffset">149339</data>
  </edge>
  <node id="N991"/>
  <edge source="N197" target="N991">
   <data key="startline">5295</data>
   <data key="startoffset">153293</data>
  </edge>
  <node id="N992"/>
  <edge source="N991" target="N992">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">5296</data>
   <data key="startoffset">153337</data>
  </edge>
  <node id="N998"/>
  <edge source="N992" target="N998">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5301</data>
   <data key="startoffset">153433</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N999"/>
  <edge source="N992" target="N999">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5301</data>
   <data key="startoffset">153433</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2342"/>
  <edge source="N999" target="N2342">
   <data key="sourcecode">firm_report_tx_done(port);</data>
   <data key="startline">5315</data>
   <data key="startoffset">153842</data>
   <data key="enterFunction">firm_report_tx_done</data>
  </edge>
  <node id="N2344"/>
  <edge source="N2342" target="N2344">
   <data key="sourcecode">struct whiteheat_simple close_command ;</data>
   <data key="startline">6952</data>
   <data key="startoffset">195934</data>
  </edge>
  <node id="N2345"/>
  <edge source="N2344" target="N2345">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">6953</data>
   <data key="startoffset">195976</data>
  </edge>
  <node id="N2348"/>
  <edge source="N2345" target="N2348">
   <data key="sourcecode">close_command.port = (__u8 )(((int )port-&gt;number - (int )(port-&gt;serial)-&gt;minor) + 1);</data>
   <data key="startline">6957</data>
   <data key="startoffset">196001</data>
  </edge>
  <node id="N1899"/>
  <edge source="N2348" target="N1899">
   <data key="sourcecode">tmp___7 = firm_send_command(port, (__u8 )12, (__u8 *)(&amp; close_command), (__u8 )sizeof(close_command));</data>
   <data key="startline">6958</data>
   <data key="startoffset">196161</data>
   <data key="enterFunction">firm_send_command</data>
  </edge>
  <node id="N1901"/>
  <edge source="N1899" target="N1901">
   <data key="sourcecode">struct usb_serial_port *command_port ;</data>
   <data key="startline">6427</data>
   <data key="startoffset">181674</data>
  </edge>
  <node id="N1902"/>
  <edge source="N1901" target="N1902">
   <data key="sourcecode">struct whiteheat_command_private *command_info ;</data>
   <data key="startline">6428</data>
   <data key="startoffset">181715</data>
  </edge>
  <node id="N1903"/>
  <edge source="N1902" target="N1903">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">6429</data>
   <data key="startoffset">181766</data>
  </edge>
  <node id="N1904"/>
  <edge source="N1903" target="N1904">
   <data key="sourcecode">__u8 *transfer_buffer ;</data>
   <data key="startline">6430</data>
   <data key="startoffset">181801</data>
  </edge>
  <node id="N1905"/>
  <edge source="N1904" target="N1905">
   <data key="sourcecode">int retval ;</data>
   <data key="startline">6431</data>
   <data key="startoffset">181827</data>
  </edge>
  <node id="N1906"/>
  <edge source="N1905" target="N1906">
   <data key="sourcecode">int t ;</data>
   <data key="startline">6432</data>
   <data key="startoffset">181842</data>
  </edge>
  <node id="N1907"/>
  <edge source="N1906" target="N1907">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">6433</data>
   <data key="startoffset">181852</data>
  </edge>
  <node id="N1908"/>
  <edge source="N1907" target="N1908">
   <data key="sourcecode">size_t __len ;</data>
   <data key="startline">6434</data>
   <data key="startoffset">181870</data>
  </edge>
  <node id="N1909"/>
  <edge source="N1908" target="N1909">
   <data key="sourcecode">void *__ret ;</data>
   <data key="startline">6435</data>
   <data key="startoffset">181887</data>
  </edge>
  <node id="N1910"/>
  <edge source="N1909" target="N1910">
   <data key="sourcecode">long __ret___0 ;</data>
   <data key="startline">6436</data>
   <data key="startoffset">181903</data>
  </edge>
  <node id="N1911"/>
  <edge source="N1910" target="N1911">
   <data key="sourcecode">wait_queue_t __wait ;</data>
   <data key="startline">6437</data>
   <data key="startoffset">181922</data>
  </edge>
  <node id="N1912"/>
  <edge source="N1911" target="N1912">
   <data key="sourcecode">struct task_struct *tmp___8 ;</data>
   <data key="startline">6438</data>
   <data key="startoffset">181946</data>
  </edge>
  <node id="N1913"/>
  <edge source="N1912" target="N1913">
   <data key="sourcecode">void *tmp___9 ;</data>
   <data key="startline">6439</data>
   <data key="startoffset">181978</data>
  </edge>
  <node id="N1914"/>
  <edge source="N1913" target="N1914">
   <data key="sourcecode">size_t __len___0 ;</data>
   <data key="startline">6440</data>
   <data key="startoffset">181996</data>
  </edge>
  <node id="N1915"/>
  <edge source="N1914" target="N1915">
   <data key="sourcecode">void *__ret___1 ;</data>
   <data key="startline">6441</data>
   <data key="startoffset">182017</data>
  </edge>
  <node id="N1916">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (retval == 0) &amp;&amp; (((datasize == 2U) &amp;&amp; (command == 6U)) || ((datasize == 16U) &amp;&amp; (command == 3U)) || ((datasize == 2U) &amp;&amp; (command == 4U)) || ((datasize == 1U) &amp;&amp; (command == 10U)) || ((datasize == 1U) &amp;&amp; (command == 1U)) || ((datasize == 2U) &amp;&amp; (command == 5U)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N1915" target="N1916">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">retval = 0;</data>
   <data key="startline">6444</data>
   <data key="startoffset">182042</data>
  </edge>
  <node id="N1922"/>
  <edge source="N1916" target="N1922">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6448</data>
   <data key="startoffset">182102</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1924"/>
  <edge source="N1916" target="N1924">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6448</data>
   <data key="startoffset">182102</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1929"/>
  <edge source="N1924" target="N1929">
   <data key="sourcecode">command_port = (port-&gt;serial)-&gt;port[4];</data>
   <data key="startline">6462</data>
   <data key="startoffset">182547</data>
  </edge>
  <edge source="N1929" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(command_port);</data>
   <data key="startline">6463</data>
   <data key="startoffset">182553</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <edge source="N1922" target="N1924">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - command %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "firm_send_command", (int )command);</data>
   <data key="startline">6451</data>
   <data key="startoffset">182374</data>
  </edge>
  <edge source="N998" target="N999">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_close", (int )port-&gt;number);</data>
   <data key="startline">5303</data>
   <data key="startoffset">153456</data>
  </edge>
  <node id="N857"/>
  <edge source="N856" target="N857">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___9;</data>
   <data key="startline">5120</data>
   <data key="startoffset">149385</data>
  </edge>
  <node id="N858"/>
  <edge source="N857" target="N858">
   <data key="sourcecode">tmp___7 = info-&gt;rx_urbs_free.next;</data>
   <data key="startline">5121</data>
   <data key="startoffset">149433</data>
  </edge>
  <node id="N877"/>
  <edge source="N858" target="N877">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___7-&gt;next;</data>
   <data key="startline">5122</data>
   <data key="startoffset">149472</data>
  </edge>
  <node id="N865"/>
  <edge source="N877" target="N865">
   <data key="sourcecode">[((unsigned long)tmp___7) != ((unsigned long)(&amp;(info-&gt;rx_urbs_free)))]</data>
   <data key="startline">5127</data>
   <data key="startoffset">149587</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N866"/>
  <edge source="N877" target="N866">
   <data key="sourcecode">[!(((unsigned long)tmp___7) != ((unsigned long)(&amp;(info-&gt;rx_urbs_free))))]</data>
   <data key="startline">5127</data>
   <data key="startoffset">149587</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N881"/>
  <edge source="N866" target="N881">
   <data key="sourcecode">tmp___7 = info-&gt;tx_urbs_free.next;</data>
   <data key="startline">5147</data>
   <data key="startoffset">150144</data>
  </edge>
  <edge source="N881" target="N900">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___7-&gt;next;</data>
   <data key="startline">5148</data>
   <data key="startoffset">150180</data>
  </edge>
  <node id="N868"/>
  <edge source="N865" target="N868">
   <data key="sourcecode">list_del(tmp___7);</data>
   <data key="startline">5133</data>
   <data key="startoffset">149706</data>
  </edge>
  <node id="N869"/>
  <edge source="N868" target="N869">
   <data key="sourcecode">__mptr = (struct list_head const *)tmp___7;</data>
   <data key="startline">5134</data>
   <data key="startoffset">149757</data>
  </edge>
  <node id="N870"/>
  <edge source="N869" target="N870">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">5135</data>
   <data key="startoffset">149779</data>
  </edge>
  <node id="N871"/>
  <edge source="N870" target="N871">
   <data key="sourcecode">urb = wrap-&gt;urb;</data>
   <data key="startline">5136</data>
   <data key="startoffset">149892</data>
  </edge>
  <node id="N872"/>
  <edge source="N871" target="N872">
   <data key="sourcecode">kfree((void const *)wrap);</data>
   <data key="startline">5137</data>
   <data key="startoffset">149915</data>
  </edge>
  <node id="N874"/>
  <edge source="N872" target="N874">
   <data key="sourcecode">kfree((void const *)urb-&gt;transfer_buffer);</data>
   <data key="startline">5138</data>
   <data key="startoffset">149948</data>
  </edge>
  <node id="N3066"/>
  <edge source="N874" target="N3066">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">usb_free_urb(urb);</data>
   <data key="startline">5139</data>
   <data key="startoffset">149997</data>
   <data key="enterFunction">usb_free_urb</data>
  </edge>
  <node id="N3073"/>
  <edge source="N3066" target="N3073">
   <data key="sourcecode">[(((unsigned long)urb) != ((unsigned long)((struct urb *)0))) == 0]</data>
   <data key="startline">7991</data>
   <data key="startoffset">225504</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N3075"/>
  <edge source="N3066" target="N3075">
   <data key="sourcecode">[!((((unsigned long)urb) != ((unsigned long)((struct urb *)0))) == 0)]</data>
   <data key="startline">7991</data>
   <data key="startoffset">225504</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N3077"/>
  <edge source="N3075" target="N3077">
   <data key="sourcecode">[(urb == 0) == 0]</data>
   <data key="startline">7998</data>
   <data key="startoffset">225594</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N3075" target="N3083">
   <data key="sourcecode">[!((urb == 0) == 0)]</data>
   <data key="startline">7998</data>
   <data key="startoffset">225594</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N3081"/>
  <edge source="N3077" target="N3081">
   <data key="sourcecode">[!(ldv_urb_state &gt;= 1)]</data>
   <data key="startline">7999</data>
   <data key="startoffset">225611</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N3077" target="N3082">
   <data key="sourcecode">[ldv_urb_state &gt;= 1]</data>
   <data key="startline">7999</data>
   <data key="startoffset">225611</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N3081" target="N2988">
   <data key="sourcecode">ldv_blast_assert();</data>
   <data key="startline">8003</data>
   <data key="startoffset">225667</data>
   <data key="enterFunction">ldv_blast_assert</data>
  </edge>
  <node id="N2993"/>
  <edge source="N3073" target="N2993">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">ldv_assume_stop();</data>
   <data key="startline">7993</data>
   <data key="startoffset">225539</data>
   <data key="enterFunction">ldv_assume_stop</data>
  </edge>
  <node id="N844"/>
  <edge source="N843" target="N844">
   <data key="sourcecode">kfree((void const *)tmp___8);</data>
   <data key="startline">5106</data>
   <data key="startoffset">149127</data>
  </edge>
  <edge source="N844" target="N905">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">i = 0;</data>
   <data key="startline">5107</data>
   <data key="startoffset">149163</data>
  </edge>
  <node id="N766"/>
  <edge source="N765" target="N766">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___18;</data>
   <data key="startline">5002</data>
   <data key="startoffset">146742</data>
  </edge>
  <node id="N800"/>
  <edge source="N766" target="N800">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">j = urb_pool_size - 1;</data>
   <data key="startline">5003</data>
   <data key="startoffset">146776</data>
  </edge>
  <node id="N773"/>
  <edge source="N800" target="N773">
   <data key="sourcecode">[j &gt;= 0]</data>
   <data key="startline">5008</data>
   <data key="startoffset">146846</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N774"/>
  <edge source="N800" target="N774">
   <data key="sourcecode">[!(j &gt;= 0)]</data>
   <data key="startline">5008</data>
   <data key="startoffset">146846</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N804"/>
  <edge source="N774" target="N804">
   <data key="sourcecode">kfree((void const *)info);</data>
   <data key="startline">5053</data>
   <data key="startoffset">147954</data>
  </edge>
  <node id="N806"/>
  <edge source="N804" target="N806">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">i = i - 1;</data>
   <data key="startline">5056</data>
   <data key="startoffset">148007</data>
  </edge>
  <node id="N761"/>
  <edge source="N806" target="N761">
   <data key="sourcecode">[i &gt;= 0]</data>
   <data key="startline">4994</data>
   <data key="startoffset">146569</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N762"/>
  <edge source="N806" target="N762">
   <data key="sourcecode">[!(i &gt;= 0)]</data>
   <data key="startline">4994</data>
   <data key="startoffset">146569</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N810"/>
  <edge source="N762" target="N810">
   <data key="sourcecode">kfree((void const *)result);</data>
   <data key="startline">5062</data>
   <data key="startoffset">148073</data>
  </edge>
  <node id="N812"/>
  <edge source="N810" target="N812">
   <data key="sourcecode">kfree((void const *)command);</data>
   <data key="startline">5066</data>
   <data key="startoffset">148132</data>
  </edge>
  <node id="N473">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (command == tmp___9) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_attach</data>
  </node>
  <edge source="N812" target="N473">
   <data key="sourcecode">return (-12);</data>
   <data key="startline">5069</data>
   <data key="startoffset">148197</data>
   <data key="returnFrom">whiteheat_attach</data>
  </edge>
  <node id="N2918"/>
  <edge source="N473" target="N2918">
   <data key="startline">7776</data>
   <data key="startoffset">220884</data>
  </edge>
  <edge source="N473" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7786</data>
   <data key="startoffset">221112</data>
  </edge>
  <node id="N816"/>
  <edge source="N2918" target="N816">
   <data key="sourcecode">whiteheat_release(var_group1);</data>
   <data key="startline">7777</data>
   <data key="startoffset">220924</data>
   <data key="enterFunction">whiteheat_release</data>
  </edge>
  <node id="N818"/>
  <edge source="N816" target="N818">
   <data key="sourcecode">struct usb_serial_port *command_port ;</data>
   <data key="startline">5073</data>
   <data key="startoffset">148267</data>
  </edge>
  <node id="N819"/>
  <edge source="N818" target="N819">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">5074</data>
   <data key="startoffset">148308</data>
  </edge>
  <node id="N820"/>
  <edge source="N819" target="N820">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">5075</data>
   <data key="startoffset">148341</data>
  </edge>
  <node id="N821"/>
  <edge source="N820" target="N821">
   <data key="sourcecode">struct whiteheat_urb_wrap *wrap ;</data>
   <data key="startline">5076</data>
   <data key="startoffset">148376</data>
  </edge>
  <node id="N822"/>
  <edge source="N821" target="N822">
   <data key="sourcecode">struct urb *urb ;</data>
   <data key="startline">5077</data>
   <data key="startoffset">148412</data>
  </edge>
  <node id="N823"/>
  <edge source="N822" target="N823">
   <data key="sourcecode">struct list_head *tmp___7 ;</data>
   <data key="startline">5078</data>
   <data key="startoffset">148432</data>
  </edge>
  <node id="N824"/>
  <edge source="N823" target="N824">
   <data key="sourcecode">struct list_head *tmp2 ;</data>
   <data key="startline">5079</data>
   <data key="startoffset">148462</data>
  </edge>
  <node id="N825"/>
  <edge source="N824" target="N825">
   <data key="sourcecode">int i ;</data>
   <data key="startline">5080</data>
   <data key="startoffset">148489</data>
  </edge>
  <node id="N826"/>
  <edge source="N825" target="N826">
   <data key="sourcecode">void *tmp___8 ;</data>
   <data key="startline">5081</data>
   <data key="startoffset">148499</data>
  </edge>
  <node id="N827"/>
  <edge source="N826" target="N827">
   <data key="sourcecode">void *tmp___9 ;</data>
   <data key="startline">5082</data>
   <data key="startoffset">148517</data>
  </edge>
  <node id="N828"/>
  <edge source="N827" target="N828">
   <data key="sourcecode">struct list_head const *__mptr ;</data>
   <data key="startline">5083</data>
   <data key="startoffset">148535</data>
  </edge>
  <node id="N829"/>
  <edge source="N828" target="N829">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">struct list_head const *__mptr___0 ;</data>
   <data key="startline">5084</data>
   <data key="startoffset">148570</data>
  </edge>
  <node id="N835"/>
  <edge source="N829" target="N835">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5090</data>
   <data key="startoffset">148660</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N837"/>
  <edge source="N829" target="N837">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5090</data>
   <data key="startoffset">148660</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N842"/>
  <edge source="N837" target="N842">
   <data key="sourcecode">command_port = serial-&gt;port[4];</data>
   <data key="startline">5104</data>
   <data key="startoffset">149041</data>
  </edge>
  <edge source="N842" target="N198">
   <data key="sourcecode">tmp___8 = usb_get_serial_port_data(command_port);</data>
   <data key="startline">5105</data>
   <data key="startoffset">149085</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <edge source="N835" target="N837">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_release");</data>
   <data key="startline">5093</data>
   <data key="startoffset">148919</data>
  </edge>
  <node id="N764"/>
  <edge source="N761" target="N764">
   <data key="sourcecode">port = serial-&gt;port[i];</data>
   <data key="startline">5000</data>
   <data key="startoffset">146639</data>
  </edge>
  <edge source="N764" target="N198">
   <data key="sourcecode">tmp___18 = usb_get_serial_port_data(port);</data>
   <data key="startline">5001</data>
   <data key="startoffset">146671</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N2570"/>
  <edge source="N773" target="N2570">
   <data key="sourcecode">tmp___7 = list_first(&amp; info-&gt;tx_urbs_free);</data>
   <data key="startline">5014</data>
   <data key="startoffset">146925</data>
   <data key="enterFunction">list_first</data>
  </edge>
  <node id="N2569"/>
  <edge source="N2570" target="N2569">
   <data key="sourcecode">return (head-&gt;next);</data>
   <data key="startline">7238</data>
   <data key="startoffset">202721</data>
   <data key="returnFrom">list_first</data>
  </edge>
  <node id="N1161"/>
  <edge source="N2569" target="N1161">
   <data key="startline">5504</data>
   <data key="startoffset">158306</data>
  </edge>
  <node id="N776"/>
  <edge source="N2569" target="N776">
   <data key="startline">5014</data>
   <data key="startoffset">146925</data>
  </edge>
  <node id="N788"/>
  <edge source="N2569" target="N788">
   <data key="startline">5031</data>
   <data key="startoffset">147400</data>
  </edge>
  <node id="N789"/>
  <edge source="N788" target="N789">
   <data key="sourcecode">list_del(tmp___7);</data>
   <data key="startline">5032</data>
   <data key="startoffset">147450</data>
  </edge>
  <node id="N790"/>
  <edge source="N789" target="N790">
   <data key="sourcecode">__mptr___0 = (struct list_head const *)tmp___7;</data>
   <data key="startline">5033</data>
   <data key="startoffset">147488</data>
  </edge>
  <node id="N791"/>
  <edge source="N790" target="N791">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr___0 - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">5034</data>
   <data key="startoffset">147635</data>
  </edge>
  <node id="N792"/>
  <edge source="N791" target="N792">
   <data key="sourcecode">urb = wrap-&gt;urb;</data>
   <data key="startline">5035</data>
   <data key="startoffset">147653</data>
  </edge>
  <node id="N793"/>
  <edge source="N792" target="N793">
   <data key="sourcecode">kfree((void const *)wrap);</data>
   <data key="startline">5036</data>
   <data key="startoffset">147696</data>
  </edge>
  <node id="N796"/>
  <edge source="N793" target="N796">
   <data key="sourcecode">kfree((void const *)urb-&gt;transfer_buffer);</data>
   <data key="startline">5040</data>
   <data key="startoffset">147743</data>
  </edge>
  <edge source="N796" target="N3066">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">usb_free_urb(urb);</data>
   <data key="startline">5044</data>
   <data key="startoffset">147825</data>
   <data key="enterFunction">usb_free_urb</data>
  </edge>
  <node id="N777"/>
  <edge source="N776" target="N777">
   <data key="sourcecode">list_del(tmp___7);</data>
   <data key="startline">5015</data>
   <data key="startoffset">146975</data>
  </edge>
  <node id="N778"/>
  <edge source="N777" target="N778">
   <data key="sourcecode">__mptr = (struct list_head const *)tmp___7;</data>
   <data key="startline">5016</data>
   <data key="startoffset">147009</data>
  </edge>
  <node id="N779"/>
  <edge source="N778" target="N779">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">5017</data>
   <data key="startoffset">147152</data>
  </edge>
  <node id="N780"/>
  <edge source="N779" target="N780">
   <data key="sourcecode">urb = wrap-&gt;urb;</data>
   <data key="startline">5018</data>
   <data key="startoffset">147170</data>
  </edge>
  <node id="N781"/>
  <edge source="N780" target="N781">
   <data key="sourcecode">kfree((void const *)wrap);</data>
   <data key="startline">5019</data>
   <data key="startoffset">147213</data>
  </edge>
  <node id="N784"/>
  <edge source="N781" target="N784">
   <data key="sourcecode">kfree((void const *)urb-&gt;transfer_buffer);</data>
   <data key="startline">5023</data>
   <data key="startoffset">147260</data>
  </edge>
  <edge source="N784" target="N3066">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">usb_free_urb(urb);</data>
   <data key="startline">5027</data>
   <data key="startoffset">147342</data>
   <data key="enterFunction">usb_free_urb</data>
  </edge>
  <node id="N1162"/>
  <edge source="N1161" target="N1162">
   <data key="sourcecode">list_del(tmp___8);</data>
   <data key="startline">5505</data>
   <data key="startoffset">158354</data>
  </edge>
  <node id="N113">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">spin_unlock_irqrestore</data>
  </node>
  <edge source="N1162" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">5506</data>
   <data key="startoffset">158377</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N119">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">spin_unlock_irqrestore</data>
  </node>
  <edge source="N113" target="N119">
   <data key="sourcecode">_raw_spin_unlock_irqrestore(&amp; lock-&gt;__annonCompField18.rlock, flags);</data>
   <data key="startline">3947</data>
   <data key="startoffset">109751</data>
  </edge>
  <node id="N112">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">spin_unlock_irqrestore</data>
  </node>
  <edge source="N119" target="N112">
   <data key="sourcecode">return;</data>
   <data key="startline">3954</data>
   <data key="startoffset">109897</data>
   <data key="returnFrom">spin_unlock_irqrestore</data>
  </edge>
  <node id="N1163">
   <data key="invariant">!(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N112" target="N1163">
   <data key="startline">5506</data>
   <data key="startoffset">158377</data>
  </edge>
  <node id="N1203">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; ((count == 0) || ((tmp___10 == 1) &amp;&amp; !(count == 0)) || (!(result == 0) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (__len == (unsigned long int) bytes) &amp;&amp; !(0 == result) &amp;&amp; ((!(0 == count) &amp;&amp; !(count == 0)) || ((count &gt;= -2147483647) &amp;&amp; (count &lt;= -1)) || ((count &gt;= 1) &amp;&amp; (count &lt;= 2147483647)))))</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N112" target="N1203">
   <data key="startline">5497</data>
   <data key="startoffset">158195</data>
  </edge>
  <edge source="N112" target="N1203">
   <data key="startline">5553</data>
   <data key="startoffset">159794</data>
  </edge>
  <node id="N1226">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; ((!(count == 0) &amp;&amp; (sent == 0)) || ((__mptr == tmp___8) &amp;&amp; (result == 0) &amp;&amp; (__len == (unsigned long int) bytes)))</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N112" target="N1226">
   <data key="enterLoopHead">true</data>
   <data key="startline">5582</data>
   <data key="startoffset">160458</data>
  </edge>
  <node id="N1291">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_room</data>
  </node>
  <edge source="N112" target="N1291">
   <data key="startline">5661</data>
   <data key="startoffset">162127</data>
  </edge>
  <node id="N1529">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_chars_in_buffer</data>
  </node>
  <edge source="N112" target="N1529">
   <data key="enterLoopHead">true</data>
   <data key="startline">5938</data>
   <data key="startoffset">168972</data>
  </edge>
  <node id="N2451"/>
  <edge source="N112" target="N2451">
   <data key="startline">7088</data>
   <data key="startoffset">199283</data>
  </edge>
  <node id="N2489"/>
  <edge source="N112" target="N2489">
   <data key="startline">7131</data>
   <data key="startoffset">200431</data>
  </edge>
  <node id="N2540"/>
  <edge source="N112" target="N2540">
   <data key="startline">7199</data>
   <data key="startoffset">201810</data>
  </edge>
  <node id="N2634">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N112" target="N2634">
   <data key="startline">7310</data>
   <data key="startoffset">204263</data>
  </edge>
  <node id="N2699">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N112" target="N2699">
   <data key="startline">7397</data>
   <data key="startoffset">206211</data>
  </edge>
  <node id="N2703"/>
  <edge source="N112" target="N2703">
   <data key="startline">7292</data>
   <data key="startoffset">203927</data>
  </edge>
  <node id="N2705">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2703" target="N2705">
   <data key="sourcecode">tty_kref_put(tty);</data>
   <data key="startline">7408</data>
   <data key="startoffset">206359</data>
  </edge>
  <node id="N2573">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2705" target="N2573">
   <data key="sourcecode">return;</data>
   <data key="startline">7410</data>
   <data key="startoffset">206371</data>
   <data key="returnFrom">rx_data_softint</data>
  </edge>
  <node id="N1604"/>
  <edge source="N2573" target="N1604">
   <data key="startline">6030</data>
   <data key="startoffset">171382</data>
  </edge>
  <node id="N1571">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_unthrottle</data>
  </node>
  <edge source="N1604" target="N1571">
   <data key="sourcecode">return;</data>
   <data key="startline">6035</data>
   <data key="startoffset">171440</data>
   <data key="returnFrom">whiteheat_unthrottle</data>
  </edge>
  <edge source="N1571" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7836</data>
   <data key="startoffset">222405</data>
  </edge>
  <node id="N2701">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; !(sent == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2699" target="N2701">
   <data key="sourcecode">[(sent == 0) == 0]</data>
   <data key="startline">7399</data>
   <data key="startoffset">206266</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2699" target="N2703">
   <data key="sourcecode">[!((sent == 0) == 0)]</data>
   <data key="startline">7399</data>
   <data key="startoffset">206266</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2701" target="N2703">
   <data key="sourcecode">tty_flip_buffer_push(tty);</data>
   <data key="startline">7401</data>
   <data key="startoffset">206284</data>
  </edge>
  <node id="N2635">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2634" target="N2635">
   <data key="sourcecode">__mptr___0 = (struct list_head const *)tmp___8;</data>
   <data key="startline">7311</data>
   <data key="startoffset">204312</data>
  </edge>
  <node id="N2636">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2635" target="N2636">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr___0 - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">7312</data>
   <data key="startoffset">204422</data>
  </edge>
  <node id="N2637">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2636" target="N2637">
   <data key="sourcecode">urb = wrap-&gt;urb;</data>
   <data key="startline">7313</data>
   <data key="startoffset">204486</data>
  </edge>
  <node id="N2639">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2637" target="N2639">
   <data key="sourcecode">[(tty == 0) == 0]</data>
   <data key="startline">7315</data>
   <data key="startoffset">204517</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2647"/>
  <edge source="N2637" target="N2647">
   <data key="sourcecode">[!((tty == 0) == 0)]</data>
   <data key="startline">7315</data>
   <data key="startoffset">204517</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2648"/>
  <edge source="N2647" target="N2648">
   <data key="sourcecode">urb-&gt;dev = (port-&gt;serial)-&gt;dev;</data>
   <data key="startline">7329</data>
   <data key="startoffset">204826</data>
  </edge>
  <node id="N2649"/>
  <edge source="N2648" target="N2649">
   <data key="sourcecode">result = usb_submit_urb(urb, 32U);</data>
   <data key="startline">7330</data>
   <data key="startoffset">204886</data>
  </edge>
  <node id="N2651"/>
  <edge source="N2649" target="N2651">
   <data key="sourcecode">[(result == 0) == 0]</data>
   <data key="startline">7332</data>
   <data key="startoffset">204911</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2652">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (result == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2649" target="N2652">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!((result == 0) == 0)]</data>
   <data key="startline">7332</data>
   <data key="startoffset">204911</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N89">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">spinlock_check</data>
  </node>
  <edge source="N2652" target="N89">
   <data key="sourcecode">tmp___12 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">7373</data>
   <data key="startoffset">205782</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <node id="N88">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">spinlock_check</data>
  </node>
  <edge source="N89" target="N88">
   <data key="sourcecode">return (&amp; lock-&gt;__annonCompField18.rlock);</data>
   <data key="startline">3896</data>
   <data key="startoffset">109024</data>
   <data key="returnFrom">spinlock_check</data>
  </edge>
  <node id="N1145">
   <data key="invariant">!(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N88" target="N1145">
   <data key="startline">5479</data>
   <data key="startoffset">157791</data>
  </edge>
  <node id="N1192">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; !(result == 0) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__len == (unsigned long int) bytes) &amp;&amp; !(0 == result) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; ((!(0 == count) &amp;&amp; !(count == 0)) || ((count &gt;= -2147483647) &amp;&amp; (count &lt;= -1)) || ((count &gt;= 1) &amp;&amp; (count &lt;= 2147483647)))</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N88" target="N1192">
   <data key="startline">5538</data>
   <data key="startoffset">159426</data>
  </edge>
  <node id="N1215">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (result == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__len == (unsigned long int) bytes) &amp;&amp; (ldv_coherent_state == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N88" target="N1215">
   <data key="startline">5567</data>
   <data key="startoffset">160085</data>
  </edge>
  <node id="N1267">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_room</data>
  </node>
  <edge source="N88" target="N1267">
   <data key="startline">5632</data>
   <data key="startoffset">161562</data>
  </edge>
  <node id="N1503">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_chars_in_buffer</data>
  </node>
  <edge source="N88" target="N1503">
   <data key="startline">5907</data>
   <data key="startoffset">168181</data>
  </edge>
  <node id="N2426"/>
  <edge source="N88" target="N2426">
   <data key="startline">7059</data>
   <data key="startoffset">198549</data>
  </edge>
  <node id="N2464"/>
  <edge source="N88" target="N2464">
   <data key="startline">7100</data>
   <data key="startoffset">199533</data>
  </edge>
  <node id="N2499"/>
  <edge source="N88" target="N2499">
   <data key="startline">7142</data>
   <data key="startoffset">200670</data>
  </edge>
  <node id="N2524"/>
  <edge source="N88" target="N2524">
   <data key="startline">7176</data>
   <data key="startoffset">201364</data>
  </edge>
  <node id="N2607">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (sent == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N88" target="N2607">
   <data key="startline">7277</data>
   <data key="startoffset">203637</data>
  </edge>
  <node id="N2662">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; !(result == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N88" target="N2662">
   <data key="startline">7345</data>
   <data key="startoffset">205221</data>
  </edge>
  <node id="N2682">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (result == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N88" target="N2682">
   <data key="startline">7373</data>
   <data key="startoffset">205754</data>
  </edge>
  <node id="N582"/>
  <edge source="N88" target="N582">
   <data key="enterLoopHead">true</data>
   <data key="startline">4755</data>
   <data key="startoffset">140185</data>
  </edge>
  <node id="N587"/>
  <edge source="N582" target="N587">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">__raw_spin_lock_init(&amp; info-&gt;lock.__annonCompField18.rlock, "&amp;(&amp;info-&gt;lock)-&gt;rlock",
                             &amp; __key___7);</data>
   <data key="startline">4761</data>
   <data key="startoffset">140297</data>
  </edge>
  <node id="N600"/>
  <edge source="N587" target="N600">
   <data key="sourcecode">__mutex_init(&amp; info-&gt;deathwarrant, "&amp;info-&gt;deathwarrant", &amp; __key___8);</data>
   <data key="startline">4778</data>
   <data key="startoffset">140741</data>
  </edge>
  <node id="N605"/>
  <edge source="N600" target="N605">
   <data key="sourcecode">info-&gt;flags = (__u8 )0;</data>
   <data key="startline">4785</data>
   <data key="startoffset">140873</data>
  </edge>
  <node id="N606"/>
  <edge source="N605" target="N606">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">info-&gt;mcr = (__u8 )0;</data>
   <data key="startline">4786</data>
   <data key="startoffset">140880</data>
  </edge>
  <node id="N615"/>
  <edge source="N606" target="N615">
   <data key="sourcecode">__init_work(&amp; info-&gt;rx_work, 0);</data>
   <data key="startline">4795</data>
   <data key="startoffset">141056</data>
  </edge>
  <node id="N616"/>
  <edge source="N615" target="N616">
   <data key="sourcecode">__constr_expr_0.counter = 2097664L;</data>
   <data key="startline">4796</data>
   <data key="startoffset">141068</data>
  </edge>
  <node id="N617"/>
  <edge source="N616" target="N617">
   <data key="sourcecode">info-&gt;rx_work.data = __constr_expr_0;</data>
   <data key="startline">4797</data>
   <data key="startoffset">141112</data>
  </edge>
  <node id="N618"/>
  <edge source="N617" target="N618">
   <data key="sourcecode">lockdep_init_map(&amp; info-&gt;rx_work.lockdep_map, "(&amp;info-&gt;rx_work)", &amp; __key___9,
                         0);</data>
   <data key="startline">4798</data>
   <data key="startoffset">141158</data>
  </edge>
  <node id="N62"/>
  <edge source="N618" target="N62">
   <data key="sourcecode">INIT_LIST_HEAD(&amp; info-&gt;rx_work.entry);</data>
   <data key="startline">4800</data>
   <data key="startoffset">141289</data>
   <data key="enterFunction">INIT_LIST_HEAD</data>
  </edge>
  <node id="N64"/>
  <edge source="N62" target="N64">
   <data key="sourcecode">list-&gt;next = list;</data>
   <data key="startline">3837</data>
   <data key="startoffset">107175</data>
  </edge>
  <node id="N65"/>
  <edge source="N64" target="N65">
   <data key="sourcecode">list-&gt;prev = list;</data>
   <data key="startline">3838</data>
   <data key="startoffset">107196</data>
  </edge>
  <node id="N61"/>
  <edge source="N65" target="N61">
   <data key="sourcecode">return;</data>
   <data key="startline">3839</data>
   <data key="startoffset">107217</data>
   <data key="returnFrom">INIT_LIST_HEAD</data>
  </edge>
  <node id="N619"/>
  <edge source="N61" target="N619">
   <data key="enterLoopHead">true</data>
   <data key="startline">4800</data>
   <data key="startoffset">141274</data>
  </edge>
  <node id="N638"/>
  <edge source="N61" target="N638">
   <data key="startline">4823</data>
   <data key="startoffset">141757</data>
  </edge>
  <node id="N639"/>
  <edge source="N61" target="N639">
   <data key="startline">4824</data>
   <data key="startoffset">141799</data>
  </edge>
  <node id="N640"/>
  <edge source="N61" target="N640">
   <data key="startline">4825</data>
   <data key="startoffset">141846</data>
  </edge>
  <node id="N641"/>
  <edge source="N61" target="N641">
   <data key="startline">4826</data>
   <data key="startoffset">141884</data>
  </edge>
  <node id="N642"/>
  <edge source="N61" target="N642">
   <data key="startline">4827</data>
   <data key="startoffset">141926</data>
  </edge>
  <node id="N704"/>
  <edge source="N642" target="N704">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">j = 0;</data>
   <data key="startline">4828</data>
   <data key="startoffset">141973</data>
  </edge>
  <node id="N649"/>
  <edge source="N704" target="N649">
   <data key="sourcecode">[j &lt; urb_pool_size]</data>
   <data key="startline">4833</data>
   <data key="startoffset">142046</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N650"/>
  <edge source="N704" target="N650">
   <data key="sourcecode">[!(j &lt; urb_pool_size)]</data>
   <data key="startline">4833</data>
   <data key="startoffset">142046</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N204"/>
  <edge source="N650" target="N204">
   <data key="sourcecode">usb_set_serial_port_data(port, (void *)info);</data>
   <data key="startline">4927</data>
   <data key="startoffset">144653</data>
   <data key="enterFunction">usb_set_serial_port_data</data>
  </edge>
  <node id="N160"/>
  <edge source="N204" target="N160">
   <data key="sourcecode">dev_set_drvdata(&amp; port-&gt;dev, data);</data>
   <data key="startline">4114</data>
   <data key="startoffset">115921</data>
   <data key="enterFunction">dev_set_drvdata</data>
  </edge>
  <node id="N162"/>
  <edge source="N160" target="N162">
   <data key="sourcecode">int error;</data>
   <data key="startline">4021</data>
   <data key="startoffset">112566</data>
  </edge>
  <node id="N164"/>
  <edge source="N162" target="N164">
   <data key="sourcecode">[(dev-&gt;p) == 0]</data>
   <data key="startline">4023</data>
   <data key="startoffset">112587</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N166"/>
  <edge source="N162" target="N166">
   <data key="sourcecode">[!((dev-&gt;p) == 0)]</data>
   <data key="startline">4023</data>
   <data key="startoffset">112587</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N169"/>
  <edge source="N166" target="N169">
   <data key="sourcecode">dev-&gt;p-&gt;driver_data = data;</data>
   <data key="startline">4028</data>
   <data key="startoffset">112681</data>
  </edge>
  <node id="N159"/>
  <edge source="N169" target="N159">
   <data key="sourcecode">return 0;</data>
   <data key="startline">4029</data>
   <data key="startoffset">112712</data>
   <data key="returnFrom">dev_set_drvdata</data>
  </edge>
  <node id="N206"/>
  <edge source="N159" target="N206">
   <data key="startline">4114</data>
   <data key="startoffset">115903</data>
  </edge>
  <node id="N203"/>
  <edge source="N206" target="N203">
   <data key="sourcecode">return;</data>
   <data key="startline">4116</data>
   <data key="startoffset">115945</data>
   <data key="returnFrom">usb_set_serial_port_data</data>
  </edge>
  <node id="N708"/>
  <edge source="N203" target="N708">
   <data key="startline">4927</data>
   <data key="startoffset">144653</data>
  </edge>
  <node id="N739"/>
  <edge source="N203" target="N739">
   <data key="startline">4971</data>
   <data key="startoffset">145636</data>
  </edge>
  <node id="N740"/>
  <edge source="N739" target="N740">
   <data key="sourcecode">(command_port-&gt;write_urb)-&gt;complete = &amp; command_port_write_callback;</data>
   <data key="startline">4972</data>
   <data key="startoffset">145700</data>
  </edge>
  <node id="N741"/>
  <edge source="N740" target="N741">
   <data key="sourcecode">(command_port-&gt;read_urb)-&gt;complete = &amp; command_port_read_callback;</data>
   <data key="startline">4973</data>
   <data key="startoffset">145808</data>
  </edge>
  <node id="N742"/>
  <edge source="N741" target="N742">
   <data key="sourcecode">kfree((void const *)result);</data>
   <data key="startline">4974</data>
   <data key="startoffset">145840</data>
  </edge>
  <node id="N743"/>
  <edge source="N742" target="N743">
   <data key="sourcecode">kfree((void const *)command);</data>
   <data key="startline">4975</data>
   <data key="startoffset">145891</data>
  </edge>
  <edge source="N743" target="N473">
   <data key="sourcecode">return (0);</data>
   <data key="startline">4977</data>
   <data key="startoffset">145907</data>
   <data key="returnFrom">whiteheat_attach</data>
  </edge>
  <node id="N709"/>
  <edge source="N708" target="N709">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">i = i + 1;</data>
   <data key="startline">4928</data>
   <data key="startoffset">144711</data>
  </edge>
  <node id="N566"/>
  <edge source="N709" target="N566">
   <data key="sourcecode">[i &lt; __CPAchecker_TMP_4]</data>
   <data key="startline">4732</data>
   <data key="startoffset">139635</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N567"/>
  <edge source="N709" target="N567">
   <data key="sourcecode">[!(i &lt; __CPAchecker_TMP_4)]</data>
   <data key="startline">4732</data>
   <data key="startoffset">139635</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N126"/>
  <edge source="N567" target="N126">
   <data key="sourcecode">tmp___17 = kmalloc(sizeof(struct whiteheat_command_private ), 208U);</data>
   <data key="startline">4935</data>
   <data key="startoffset">144771</data>
   <data key="enterFunction">kmalloc</data>
  </edge>
  <node id="N128"/>
  <edge source="N126" target="N128">
   <data key="sourcecode">void *tmp___2 ;</data>
   <data key="startline">3973</data>
   <data key="startoffset">111023</data>
  </edge>
  <node id="N129"/>
  <edge source="N128" target="N129">
   <data key="sourcecode">tmp___2 = __kmalloc(size, flags);</data>
   <data key="startline">3977</data>
   <data key="startoffset">111076</data>
  </edge>
  <node id="N125"/>
  <edge source="N129" target="N125">
   <data key="sourcecode">return (tmp___2);</data>
   <data key="startline">3979</data>
   <data key="startoffset">111090</data>
   <data key="returnFrom">kmalloc</data>
  </edge>
  <node id="N510"/>
  <edge source="N125" target="N510">
   <data key="startline">4653</data>
   <data key="startoffset">137359</data>
  </edge>
  <node id="N518"/>
  <edge source="N125" target="N518">
   <data key="startline">4664</data>
   <data key="startoffset">137557</data>
  </edge>
  <node id="N571"/>
  <edge source="N125" target="N571">
   <data key="startline">4739</data>
   <data key="startoffset">139744</data>
  </edge>
  <node id="N660"/>
  <edge source="N125" target="N660">
   <data key="startline">4851</data>
   <data key="startoffset">142422</data>
  </edge>
  <node id="N666"/>
  <edge source="N125" target="N666">
   <data key="startline">4862</data>
   <data key="startoffset">142695</data>
  </edge>
  <node id="N686"/>
  <edge source="N125" target="N686">
   <data key="startline">4892</data>
   <data key="startoffset">143654</data>
  </edge>
  <node id="N692"/>
  <edge source="N125" target="N692">
   <data key="startline">4903</data>
   <data key="startoffset">143927</data>
  </edge>
  <node id="N713"/>
  <edge source="N125" target="N713">
   <data key="startline">4935</data>
   <data key="startoffset">144771</data>
  </edge>
  <node id="N714"/>
  <edge source="N713" target="N714">
   <data key="sourcecode">command_info = (struct whiteheat_command_private *)tmp___17;</data>
   <data key="startline">4936</data>
   <data key="startoffset">144893</data>
  </edge>
  <node id="N716"/>
  <edge source="N714" target="N716">
   <data key="sourcecode">[((unsigned long)command_info) == ((unsigned long)((void *)0))]</data>
   <data key="startline">4938</data>
   <data key="startoffset">144962</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N717"/>
  <edge source="N714" target="N717">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(((unsigned long)command_info) == ((unsigned long)((void *)0)))]</data>
   <data key="startline">4938</data>
   <data key="startoffset">144962</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N724"/>
  <edge source="N717" target="N724">
   <data key="sourcecode">__mutex_init(&amp; command_info-&gt;mutex, "&amp;command_info-&gt;mutex", &amp; __key___10);</data>
   <data key="startline">4951</data>
   <data key="startoffset">145267</data>
  </edge>
  <node id="N729"/>
  <edge source="N724" target="N729">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">command_info-&gt;port_running = (__u8 )0;</data>
   <data key="startline">4958</data>
   <data key="startoffset">145389</data>
  </edge>
  <node id="N734"/>
  <edge source="N729" target="N734">
   <data key="sourcecode">__init_waitqueue_head(&amp; command_info-&gt;wait_command, &amp; __key___11);</data>
   <data key="startline">4963</data>
   <data key="startoffset">145482</data>
  </edge>
  <edge source="N734" target="N204">
   <data key="sourcecode">usb_set_serial_port_data(command_port, (void *)command_info);</data>
   <data key="startline">4971</data>
   <data key="startoffset">145636</data>
   <data key="enterFunction">usb_set_serial_port_data</data>
  </edge>
  <node id="N718"/>
  <edge source="N716" target="N718">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s: Out of memory for port structures\n",
            (serial-&gt;type)-&gt;description);</data>
   <data key="startline">4940</data>
   <data key="startoffset">144986</data>
  </edge>
  <edge source="N718" target="N806">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">i = (int )serial-&gt;num_ports - 1;</data>
   <data key="startline">4990</data>
   <data key="startoffset">146483</data>
  </edge>
  <node id="N693"/>
  <edge source="N692" target="N693">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)tmp___15;</data>
   <data key="startline">4904</data>
   <data key="startoffset">143981</data>
  </edge>
  <node id="N695"/>
  <edge source="N693" target="N695">
   <data key="sourcecode">[wrap == 0]</data>
   <data key="startline">4906</data>
   <data key="startoffset">144040</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N696"/>
  <edge source="N693" target="N696">
   <data key="sourcecode">[!(wrap == 0)]</data>
   <data key="startline">4906</data>
   <data key="startoffset">144040</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N194"/>
  <edge source="N696" target="N194">
   <data key="sourcecode">tmp___16 = __create_pipe(serial-&gt;dev, (unsigned int )port-&gt;bulk_out_endpointAddress);</data>
   <data key="startline">4915</data>
   <data key="startoffset">144247</data>
   <data key="enterFunction">__create_pipe</data>
  </edge>
  <node id="N193"/>
  <edge source="N194" target="N193">
   <data key="sourcecode">return ((unsigned int )(dev-&gt;devnum &lt;&lt; 8) | (endpoint &lt;&lt; 15));</data>
   <data key="startline">4096</data>
   <data key="startoffset">115533</data>
   <data key="returnFrom">__create_pipe</data>
  </edge>
  <node id="N508"/>
  <edge source="N193" target="N508">
   <data key="startline">4651</data>
   <data key="startoffset">137211</data>
  </edge>
  <node id="N537"/>
  <edge source="N193" target="N537">
   <data key="startline">4694</data>
   <data key="startoffset">138276</data>
  </edge>
  <node id="N674"/>
  <edge source="N193" target="N674">
   <data key="startline">4874</data>
   <data key="startoffset">142990</data>
  </edge>
  <node id="N700"/>
  <edge source="N193" target="N700">
   <data key="startline">4915</data>
   <data key="startoffset">144222</data>
  </edge>
  <node id="N184"/>
  <edge source="N700" target="N184">
   <data key="sourcecode">usb_fill_bulk_urb(urb, serial-&gt;dev, (unsigned int )(3 &lt;&lt; 30) | tmp___16, urb-&gt;transfer_buffer,
                        buf_size, &amp; whiteheat_write_callback, (void *)port);</data>
   <data key="startline">4917</data>
   <data key="startoffset">144433</data>
   <data key="enterFunction">usb_fill_bulk_urb</data>
  </edge>
  <node id="N186"/>
  <edge source="N184" target="N186">
   <data key="sourcecode">urb-&gt;dev = dev;</data>
   <data key="startline">4073</data>
   <data key="startoffset">114453</data>
  </edge>
  <node id="N187"/>
  <edge source="N186" target="N187">
   <data key="sourcecode">urb-&gt;pipe = pipe;</data>
   <data key="startline">4074</data>
   <data key="startoffset">114471</data>
  </edge>
  <node id="N188"/>
  <edge source="N187" target="N188">
   <data key="sourcecode">urb-&gt;transfer_buffer = transfer_buffer;</data>
   <data key="startline">4075</data>
   <data key="startoffset">114491</data>
  </edge>
  <node id="N189"/>
  <edge source="N188" target="N189">
   <data key="sourcecode">urb-&gt;transfer_buffer_length = (u32 )buffer_length;</data>
   <data key="startline">4076</data>
   <data key="startoffset">114533</data>
  </edge>
  <node id="N190"/>
  <edge source="N189" target="N190">
   <data key="sourcecode">urb-&gt;complete = complete_fn;</data>
   <data key="startline">4077</data>
   <data key="startoffset">114586</data>
  </edge>
  <node id="N191"/>
  <edge source="N190" target="N191">
   <data key="sourcecode">urb-&gt;context = context;</data>
   <data key="startline">4078</data>
   <data key="startoffset">114617</data>
  </edge>
  <node id="N183"/>
  <edge source="N191" target="N183">
   <data key="sourcecode">return;</data>
   <data key="startline">4079</data>
   <data key="startoffset">114643</data>
   <data key="returnFrom">usb_fill_bulk_urb</data>
  </edge>
  <node id="N675"/>
  <edge source="N183" target="N675">
   <data key="startline">4875</data>
   <data key="startoffset">143081</data>
  </edge>
  <node id="N701"/>
  <edge source="N183" target="N701">
   <data key="startline">4916</data>
   <data key="startoffset">144314</data>
  </edge>
  <node id="N702"/>
  <edge source="N701" target="N702">
   <data key="sourcecode">wrap-&gt;urb = urb;</data>
   <data key="startline">4918</data>
   <data key="startoffset">144492</data>
  </edge>
  <node id="N68">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">list_add</data>
  </node>
  <edge source="N702" target="N68">
   <data key="sourcecode">list_add(&amp; wrap-&gt;list, &amp; info-&gt;tx_urbs_free);</data>
   <data key="startline">4919</data>
   <data key="startoffset">144524</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <node id="N70">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">list_add</data>
  </node>
  <edge source="N68" target="N70">
   <data key="sourcecode">__list_add(new, head, head-&gt;next);</data>
   <data key="startline">3848</data>
   <data key="startoffset">107420</data>
  </edge>
  <node id="N67">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">list_add</data>
  </node>
  <edge source="N70" target="N67">
   <data key="sourcecode">return;</data>
   <data key="startline">3850</data>
   <data key="startoffset">107461</data>
   <data key="returnFrom">list_add</data>
  </edge>
  <node id="N1027"/>
  <edge source="N67" target="N1027">
   <data key="startline">5338</data>
   <data key="startoffset">154522</data>
  </edge>
  <node id="N1066"/>
  <edge source="N67" target="N1066">
   <data key="startline">5383</data>
   <data key="startoffset">155596</data>
  </edge>
  <node id="N1202">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; !(result == 0) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__len == (unsigned long int) bytes) &amp;&amp; !(0 == result) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; ((!(0 == count) &amp;&amp; !(count == 0)) || ((count &gt;= -2147483647) &amp;&amp; (count &lt;= -1)) || ((count &gt;= 1) &amp;&amp; (count &lt;= 2147483647)))</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N67" target="N1202">
   <data key="startline">5552</data>
   <data key="startoffset">159747</data>
  </edge>
  <node id="N1225">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (result == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__len == (unsigned long int) bytes) &amp;&amp; (ldv_coherent_state == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N67" target="N1225">
   <data key="startline">5581</data>
   <data key="startoffset">160406</data>
  </edge>
  <node id="N1826">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N67" target="N1826">
   <data key="startline">6322</data>
   <data key="startoffset">179143</data>
  </edge>
  <node id="N2474"/>
  <edge source="N67" target="N2474">
   <data key="startline">7114</data>
   <data key="startoffset">199854</data>
  </edge>
  <node id="N2509"/>
  <edge source="N67" target="N2509">
   <data key="startline">7156</data>
   <data key="startoffset">201019</data>
  </edge>
  <node id="N2534"/>
  <edge source="N67" target="N2534">
   <data key="startline">7190</data>
   <data key="startoffset">201657</data>
  </edge>
  <node id="N2692">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N67" target="N2692">
   <data key="startline">7359</data>
   <data key="startoffset">205541</data>
  </edge>
  <edge source="N67" target="N2692">
   <data key="startline">7387</data>
   <data key="startoffset">206047</data>
  </edge>
  <node id="N677"/>
  <edge source="N67" target="N677">
   <data key="startline">4879</data>
   <data key="startoffset">143314</data>
  </edge>
  <node id="N703"/>
  <edge source="N67" target="N703">
   <data key="startline">4919</data>
   <data key="startoffset">144515</data>
  </edge>
  <node id="N81">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">list_move</data>
  </node>
  <edge source="N67" target="N81">
   <data key="startline">3871</data>
   <data key="startoffset">107849</data>
  </edge>
  <node id="N77">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">list_move</data>
  </node>
  <edge source="N81" target="N77">
   <data key="sourcecode">return;</data>
   <data key="startline">3873</data>
   <data key="startoffset">107877</data>
   <data key="returnFrom">list_move</data>
  </edge>
  <node id="N1043"/>
  <edge source="N77" target="N1043">
   <data key="startline">5357</data>
   <data key="startoffset">154895</data>
  </edge>
  <node id="N1878">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_callback</data>
  </node>
  <edge source="N77" target="N1878">
   <data key="startline">6395</data>
   <data key="startoffset">180837</data>
  </edge>
  <node id="N103">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">spin_unlock</data>
  </node>
  <edge source="N1878" target="N103">
   <data key="sourcecode">spin_unlock(&amp; info-&gt;lock);</data>
   <data key="startline">6396</data>
   <data key="startoffset">180886</data>
   <data key="enterFunction">spin_unlock</data>
  </edge>
  <node id="N105">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">spin_unlock</data>
  </node>
  <edge source="N103" target="N105">
   <data key="sourcecode">_raw_spin_unlock(&amp; lock-&gt;__annonCompField18.rlock);</data>
   <data key="startline">3924</data>
   <data key="startoffset">109396</data>
  </edge>
  <node id="N102">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">spin_unlock</data>
  </node>
  <edge source="N105" target="N102">
   <data key="sourcecode">return;</data>
   <data key="startline">3926</data>
   <data key="startoffset">109454</data>
   <data key="returnFrom">spin_unlock</data>
  </edge>
  <node id="N1805">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N102" target="N1805">
   <data key="startline">6292</data>
   <data key="startoffset">178345</data>
  </edge>
  <node id="N1809">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N102" target="N1809">
   <data key="startline">6301</data>
   <data key="startoffset">178538</data>
  </edge>
  <node id="N1827">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N102" target="N1827">
   <data key="startline">6323</data>
   <data key="startoffset">179193</data>
  </edge>
  <node id="N1839">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N102" target="N1839">
   <data key="startline">6338</data>
   <data key="startoffset">179580</data>
  </edge>
  <node id="N1841">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N102" target="N1841">
   <data key="startline">6345</data>
   <data key="startoffset">179647</data>
  </edge>
  <node id="N1875">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_callback</data>
  </node>
  <edge source="N102" target="N1875">
   <data key="startline">6387</data>
   <data key="startoffset">180669</data>
  </edge>
  <node id="N1879">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_callback</data>
  </node>
  <edge source="N102" target="N1879">
   <data key="startline">6396</data>
   <data key="startoffset">180886</data>
  </edge>
  <node id="N1881">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_callback</data>
  </node>
  <edge source="N1879" target="N1881">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[(status == 0) == 0]</data>
   <data key="startline">6398</data>
   <data key="startoffset">180923</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1882">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_callback</data>
  </node>
  <edge source="N1879" target="N1882">
   <data key="sourcecode">[!((status == 0) == 0)]</data>
   <data key="startline">6398</data>
   <data key="startoffset">180923</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1896"/>
  <edge source="N1882" target="N1896">
   <data key="sourcecode">usb_serial_port_softint(port);</data>
   <data key="startline">6420</data>
   <data key="startoffset">181490</data>
  </edge>
  <node id="N1844">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_callback</data>
  </node>
  <edge source="N1896" target="N1844">
   <data key="sourcecode">return;</data>
   <data key="startline">6422</data>
   <data key="startoffset">181527</data>
   <data key="returnFrom">whiteheat_write_callback</data>
  </edge>
  <edge source="N1844" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7846</data>
   <data key="startoffset">222620</data>
  </edge>
  <node id="N1888"/>
  <edge source="N1881" target="N1888">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6402</data>
   <data key="startoffset">180993</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1890"/>
  <edge source="N1881" target="N1890">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6402</data>
   <data key="startoffset">180993</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1890" target="N1844">
   <data key="sourcecode">return;</data>
   <data key="startline">6415</data>
   <data key="startoffset">181460</data>
   <data key="returnFrom">whiteheat_write_callback</data>
  </edge>
  <edge source="N1888" target="N1890">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - nonzero write bulk status received: %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "whiteheat_write_callback", status);</data>
   <data key="startline">6404</data>
   <data key="startoffset">181027</data>
  </edge>
  <node id="N1876">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_callback</data>
  </node>
  <edge source="N1875" target="N1876">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "%s - Not my urb!\n", "whiteheat_write_callback");</data>
   <data key="startline">6388</data>
   <data key="startoffset">180700</data>
  </edge>
  <edge source="N1876" target="N1844">
   <data key="sourcecode">return;</data>
   <data key="startline">6390</data>
   <data key="startoffset">180807</data>
   <data key="returnFrom">whiteheat_write_callback</data>
  </edge>
  <node id="N1842">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N1841" target="N1842">
   <data key="sourcecode">schedule_work(&amp; info-&gt;rx_work);</data>
   <data key="startline">6346</data>
   <data key="startoffset">179690</data>
  </edge>
  <node id="N1771">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N1842" target="N1771">
   <data key="sourcecode">return;</data>
   <data key="startline">6348</data>
   <data key="startoffset">179714</data>
   <data key="returnFrom">whiteheat_read_callback</data>
  </edge>
  <edge source="N1771" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7841</data>
   <data key="startoffset">222511</data>
  </edge>
  <edge source="N1839" target="N1771">
   <data key="sourcecode">return;</data>
   <data key="startline">6340</data>
   <data key="startoffset">179617</data>
   <data key="returnFrom">whiteheat_read_callback</data>
  </edge>
  <edge source="N1827" target="N1771">
   <data key="sourcecode">return;</data>
   <data key="startline">6325</data>
   <data key="startoffset">179230</data>
   <data key="returnFrom">whiteheat_read_callback</data>
  </edge>
  <node id="N1811">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N1809" target="N1811">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[(status == 0) == 0]</data>
   <data key="startline">6303</data>
   <data key="startoffset">178575</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1812">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N1809" target="N1812">
   <data key="sourcecode">[!((status == 0) == 0)]</data>
   <data key="startline">6303</data>
   <data key="startoffset">178575</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N209"/>
  <edge source="N1812" target="N209">
   <data key="sourcecode">usb_serial_debug_data(debug, &amp; port-&gt;dev, "whiteheat_read_callback", (int )urb-&gt;actual_length,
                        (unsigned char const *)data);</data>
   <data key="startline">6330</data>
   <data key="startoffset">179329</data>
   <data key="enterFunction">usb_serial_debug_data</data>
  </edge>
  <node id="N211"/>
  <edge source="N209" target="N211">
   <data key="sourcecode">int i ;</data>
   <data key="startline">4129</data>
   <data key="startoffset">116743</data>
  </edge>
  <node id="N213"/>
  <edge source="N211" target="N213">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">4132</data>
   <data key="startoffset">116762</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N230"/>
  <edge source="N211" target="N230">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">4132</data>
   <data key="startoffset">116762</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N208"/>
  <edge source="N230" target="N208">
   <data key="sourcecode">return;</data>
   <data key="startline">4160</data>
   <data key="startoffset">117204</data>
   <data key="returnFrom">usb_serial_debug_data</data>
  </edge>
  <node id="N1175"/>
  <edge source="N208" target="N1175">
   <data key="startline">5519</data>
   <data key="startoffset">158854</data>
  </edge>
  <node id="N1708"/>
  <edge source="N208" target="N1708">
   <data key="startline">6168</data>
   <data key="startoffset">174752</data>
  </edge>
  <node id="N1830"/>
  <edge source="N208" target="N1830">
   <data key="startline">6330</data>
   <data key="startoffset">179260</data>
  </edge>
  <node id="N93"/>
  <edge source="N1830" target="N93">
   <data key="sourcecode">spin_lock(&amp; info-&gt;lock);</data>
   <data key="startline">6332</data>
   <data key="startoffset">179421</data>
   <data key="enterFunction">spin_lock</data>
  </edge>
  <node id="N95"/>
  <edge source="N93" target="N95">
   <data key="sourcecode">_raw_spin_lock(&amp; lock-&gt;__annonCompField18.rlock);</data>
   <data key="startline">3904</data>
   <data key="startoffset">109139</data>
  </edge>
  <node id="N92"/>
  <edge source="N95" target="N92">
   <data key="sourcecode">return;</data>
   <data key="startline">3906</data>
   <data key="startoffset">109180</data>
   <data key="returnFrom">spin_lock</data>
  </edge>
  <node id="N1800"/>
  <edge source="N92" target="N1800">
   <data key="startline">6287</data>
   <data key="startoffset">178236</data>
  </edge>
  <node id="N1825"/>
  <edge source="N92" target="N1825">
   <data key="startline">6321</data>
   <data key="startoffset">179114</data>
  </edge>
  <node id="N1831"/>
  <edge source="N92" target="N1831">
   <data key="startline">6332</data>
   <data key="startoffset">179411</data>
  </edge>
  <node id="N1870"/>
  <edge source="N92" target="N1870">
   <data key="startline">6382</data>
   <data key="startoffset">180560</data>
  </edge>
  <node id="N2543"/>
  <edge source="N1870" target="N2543">
   <data key="sourcecode">wrap = urb_to_wrap(urb, &amp; info-&gt;tx_urbs_submitted);</data>
   <data key="startline">6383</data>
   <data key="startoffset">180587</data>
   <data key="enterFunction">urb_to_wrap</data>
  </edge>
  <node id="N2545"/>
  <edge source="N2543" target="N2545">
   <data key="sourcecode">struct whiteheat_urb_wrap *wrap ;</data>
   <data key="startline">7205</data>
   <data key="startoffset">201973</data>
  </edge>
  <node id="N2546"/>
  <edge source="N2545" target="N2546">
   <data key="sourcecode">struct list_head *tmp___7 ;</data>
   <data key="startline">7206</data>
   <data key="startoffset">202009</data>
  </edge>
  <node id="N2547"/>
  <edge source="N2546" target="N2547">
   <data key="sourcecode">struct list_head const *__mptr ;</data>
   <data key="startline">7207</data>
   <data key="startoffset">202039</data>
  </edge>
  <node id="N2564">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">urb_to_wrap</data>
  </node>
  <edge source="N2547" target="N2564">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp___7 = head-&gt;next;</data>
   <data key="startline">7210</data>
   <data key="startoffset">202089</data>
  </edge>
  <node id="N2554">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; !(tmp___7 == head) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">urb_to_wrap</data>
  </node>
  <edge source="N2564" target="N2554">
   <data key="sourcecode">[((unsigned long)tmp___7) != ((unsigned long)head)]</data>
   <data key="startline">7214</data>
   <data key="startoffset">202149</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2555">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (tmp___7 == head) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">urb_to_wrap</data>
  </node>
  <edge source="N2564" target="N2555">
   <data key="sourcecode">[!(((unsigned long)tmp___7) != ((unsigned long)head))]</data>
   <data key="startline">7214</data>
   <data key="startoffset">202149</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2542"/>
  <edge source="N2555" target="N2542">
   <data key="sourcecode">return ((struct whiteheat_urb_wrap *)((void *)0));</data>
   <data key="startline">7231</data>
   <data key="startoffset">202588</data>
   <data key="returnFrom">urb_to_wrap</data>
  </edge>
  <node id="N1801"/>
  <edge source="N2542" target="N1801">
   <data key="startline">6288</data>
   <data key="startoffset">178263</data>
  </edge>
  <node id="N1871"/>
  <edge source="N2542" target="N1871">
   <data key="startline">6383</data>
   <data key="startoffset">180587</data>
  </edge>
  <node id="N1873"/>
  <edge source="N1871" target="N1873">
   <data key="sourcecode">[wrap == 0]</data>
   <data key="startline">6385</data>
   <data key="startoffset">180651</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1874"/>
  <edge source="N1871" target="N1874">
   <data key="sourcecode">[!(wrap == 0)]</data>
   <data key="startline">6385</data>
   <data key="startoffset">180651</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N78"/>
  <edge source="N1874" target="N78">
   <data key="sourcecode">list_move(&amp; wrap-&gt;list, &amp; info-&gt;tx_urbs_free);</data>
   <data key="startline">6395</data>
   <data key="startoffset">180837</data>
   <data key="enterFunction">list_move</data>
  </edge>
  <node id="N80"/>
  <edge source="N78" target="N80">
   <data key="sourcecode">__list_del_entry(list);</data>
   <data key="startline">3870</data>
   <data key="startoffset">107823</data>
  </edge>
  <edge source="N80" target="N68">
   <data key="sourcecode">list_add(list, head);</data>
   <data key="startline">3871</data>
   <data key="startoffset">107864</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <edge source="N1873" target="N103">
   <data key="sourcecode">spin_unlock(&amp; info-&gt;lock);</data>
   <data key="startline">6387</data>
   <data key="startoffset">180683</data>
   <data key="enterFunction">spin_unlock</data>
  </edge>
  <node id="N1803"/>
  <edge source="N1801" target="N1803">
   <data key="sourcecode">[wrap == 0]</data>
   <data key="startline">6290</data>
   <data key="startoffset">178327</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1804"/>
  <edge source="N1801" target="N1804">
   <data key="sourcecode">[!(wrap == 0)]</data>
   <data key="startline">6290</data>
   <data key="startoffset">178327</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1808"/>
  <edge source="N1804" target="N1808">
   <data key="sourcecode">list_del(&amp; wrap-&gt;list);</data>
   <data key="startline">6300</data>
   <data key="startoffset">178523</data>
  </edge>
  <edge source="N1808" target="N103">
   <data key="sourcecode">spin_unlock(&amp; info-&gt;lock);</data>
   <data key="startline">6301</data>
   <data key="startoffset">178550</data>
   <data key="enterFunction">spin_unlock</data>
  </edge>
  <edge source="N1803" target="N103">
   <data key="sourcecode">spin_unlock(&amp; info-&gt;lock);</data>
   <data key="startline">6292</data>
   <data key="startoffset">178359</data>
   <data key="enterFunction">spin_unlock</data>
  </edge>
  <node id="N2557"/>
  <edge source="N2554" target="N2557">
   <data key="sourcecode">__mptr = (struct list_head const *)tmp___7;</data>
   <data key="startline">7219</data>
   <data key="startoffset">202283</data>
  </edge>
  <node id="N2558"/>
  <edge source="N2557" target="N2558">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">7220</data>
   <data key="startoffset">202366</data>
  </edge>
  <node id="N2560"/>
  <edge source="N2558" target="N2560">
   <data key="sourcecode">[__CPAchecker_TMP_0 == ((unsigned long)urb)]</data>
   <data key="startline">7221</data>
   <data key="startoffset">202418</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2561"/>
  <edge source="N2558" target="N2561">
   <data key="sourcecode">[!(__CPAchecker_TMP_0 == ((unsigned long)urb))]</data>
   <data key="startline">7221</data>
   <data key="startoffset">202418</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2561" target="N2564">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp___7 = tmp___7-&gt;next;</data>
   <data key="startline">7226</data>
   <data key="startoffset">202525</data>
  </edge>
  <edge source="N2560" target="N2542">
   <data key="sourcecode">return (wrap);</data>
   <data key="startline">7222</data>
   <data key="startoffset">202476</data>
   <data key="returnFrom">urb_to_wrap</data>
  </edge>
  <node id="N73"/>
  <edge source="N1831" target="N73">
   <data key="sourcecode">list_add_tail(&amp; wrap-&gt;list, &amp; info-&gt;rx_urb_q);</data>
   <data key="startline">6333</data>
   <data key="startoffset">179468</data>
   <data key="enterFunction">list_add_tail</data>
  </edge>
  <node id="N75"/>
  <edge source="N73" target="N75">
   <data key="sourcecode">__list_add(new, head-&gt;prev, head);</data>
   <data key="startline">3858</data>
   <data key="startoffset">107570</data>
  </edge>
  <node id="N72"/>
  <edge source="N75" target="N72">
   <data key="sourcecode">return;</data>
   <data key="startline">3860</data>
   <data key="startoffset">107611</data>
   <data key="returnFrom">list_add_tail</data>
  </edge>
  <node id="N1832"/>
  <edge source="N72" target="N1832">
   <data key="startline">6333</data>
   <data key="startoffset">179438</data>
  </edge>
  <node id="N1834"/>
  <edge source="N1832" target="N1834">
   <data key="sourcecode">[((__CPAchecker_TMP_4 &amp; 1) == 0) == 0]</data>
   <data key="startline">6335</data>
   <data key="startoffset">179495</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1835"/>
  <edge source="N1832" target="N1835">
   <data key="sourcecode">[!(((__CPAchecker_TMP_4 &amp; 1) == 0) == 0)]</data>
   <data key="startline">6335</data>
   <data key="startoffset">179495</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1835" target="N103">
   <data key="sourcecode">spin_unlock(&amp; info-&gt;lock);</data>
   <data key="startline">6345</data>
   <data key="startoffset">179647</data>
   <data key="enterFunction">spin_unlock</data>
  </edge>
  <node id="N1838"/>
  <edge source="N1834" target="N1838">
   <data key="sourcecode">info-&gt;flags = (__u8 )((int )info-&gt;flags | 2);</data>
   <data key="startline">6337</data>
   <data key="startoffset">179544</data>
  </edge>
  <edge source="N1838" target="N103">
   <data key="sourcecode">spin_unlock(&amp; info-&gt;lock);</data>
   <data key="startline">6338</data>
   <data key="startoffset">179592</data>
   <data key="enterFunction">spin_unlock</data>
  </edge>
  <edge source="N1825" target="N68">
   <data key="sourcecode">list_add(&amp; wrap-&gt;list, &amp; info-&gt;rx_urbs_free);</data>
   <data key="startline">6322</data>
   <data key="startoffset">179168</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <edge source="N1800" target="N2543">
   <data key="sourcecode">wrap = urb_to_wrap(urb, &amp; info-&gt;rx_urbs_submitted);</data>
   <data key="startline">6288</data>
   <data key="startoffset">178282</data>
   <data key="enterFunction">urb_to_wrap</data>
  </edge>
  <node id="N1710"/>
  <edge source="N1708" target="N1710">
   <data key="sourcecode">[((int)(*(data + 0))) == 16]</data>
   <data key="startline">6171</data>
   <data key="startoffset">174922</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1711"/>
  <edge source="N1708" target="N1711">
   <data key="sourcecode">[!(((int)(*(data + 0))) == 16)]</data>
   <data key="startline">6171</data>
   <data key="startoffset">174922</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1715"/>
  <edge source="N1711" target="N1715">
   <data key="sourcecode">[((int)(*(data + 0))) == 17]</data>
   <data key="startline">6177</data>
   <data key="startoffset">175087</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1716"/>
  <edge source="N1711" target="N1716">
   <data key="sourcecode">[!(((int)(*(data + 0))) == 17)]</data>
   <data key="startline">6177</data>
   <data key="startoffset">175087</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1720"/>
  <edge source="N1716" target="N1720">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[((int)(*(data + 0))) == 13]</data>
   <data key="startline">6183</data>
   <data key="startoffset">175258</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1721"/>
  <edge source="N1716" target="N1721">
   <data key="sourcecode">[!(((int)(*(data + 0))) == 13)]</data>
   <data key="startline">6183</data>
   <data key="startoffset">175258</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1735"/>
  <edge source="N1721" target="N1735">
   <data key="sourcecode">[((int)(*(data + 0))) == 10]</data>
   <data key="startline">6201</data>
   <data key="startoffset">175793</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1736"/>
  <edge source="N1721" target="N1736">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(((int)(*(data + 0))) == 10)]</data>
   <data key="startline">6201</data>
   <data key="startoffset">175793</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1746"/>
  <edge source="N1736" target="N1746">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6213</data>
   <data key="startoffset">176187</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1748"/>
  <edge source="N1736" target="N1748">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6213</data>
   <data key="startoffset">176187</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1753"/>
  <edge source="N1748" target="N1753">
   <data key="sourcecode">(command_port-&gt;read_urb)-&gt;dev = (command_port-&gt;serial)-&gt;dev;</data>
   <data key="startline">6228</data>
   <data key="startoffset">176640</data>
  </edge>
  <node id="N1754"/>
  <edge source="N1753" target="N1754">
   <data key="sourcecode">result = usb_submit_urb(command_port-&gt;read_urb, 32U);</data>
   <data key="startline">6229</data>
   <data key="startoffset">176726</data>
  </edge>
  <node id="N1756"/>
  <edge source="N1754" target="N1756">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[(result == 0) == 0]</data>
   <data key="startline">6231</data>
   <data key="startoffset">176766</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1765"/>
  <edge source="N1754" target="N1765">
   <data key="sourcecode">[!((result == 0) == 0)]</data>
   <data key="startline">6231</data>
   <data key="startoffset">176766</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1640"/>
  <edge source="N1765" target="N1640">
   <data key="sourcecode">return;</data>
   <data key="startline">6251</data>
   <data key="startoffset">177320</data>
   <data key="returnFrom">command_port_read_callback</data>
  </edge>
  <node id="N1763"/>
  <edge source="N1756" target="N1763">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6235</data>
   <data key="startoffset">176836</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N1756" target="N1765">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6235</data>
   <data key="startoffset">176836</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1763" target="N1765">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - failed resubmitting read urb, error %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "command_port_read_callback", result);</data>
   <data key="startline">6237</data>
   <data key="startoffset">176870</data>
  </edge>
  <edge source="N1746" target="N1748">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - bad reply from firmware\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "command_port_read_callback");</data>
   <data key="startline">6215</data>
   <data key="startoffset">176262</data>
  </edge>
  <node id="N1737"/>
  <edge source="N1735" target="N1737">
   <data key="sourcecode">__len = (size_t )(urb-&gt;actual_length - 1U);</data>
   <data key="startline">6203</data>
   <data key="startoffset">175824</data>
  </edge>
  <node id="N1738"/>
  <edge source="N1737" target="N1738">
   <data key="sourcecode">__ret = __builtin_memcpy((void *)(command_info-&gt;result_buffer), (void const *)(data + 1),
                             __len);</data>
   <data key="startline">6204</data>
   <data key="startoffset">175872</data>
  </edge>
  <node id="N1739"/>
  <edge source="N1738" target="N1739">
   <data key="sourcecode">command_info-&gt;command_finished = (__u8 )16;</data>
   <data key="startline">6206</data>
   <data key="startoffset">176003</data>
  </edge>
  <edge source="N1739" target="N1748">
   <data key="sourcecode">__wake_up(&amp; command_info-&gt;wait_command, 3U, 1, (void *)0);</data>
   <data key="startline">6207</data>
   <data key="startoffset">176095</data>
  </edge>
  <node id="N1727"/>
  <edge source="N1720" target="N1727">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6187</data>
   <data key="startoffset">175339</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N1720" target="N1748">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6187</data>
   <data key="startoffset">175339</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1727" target="N1748">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - event received\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "command_port_read_callback");</data>
   <data key="startline">6190</data>
   <data key="startoffset">175621</data>
  </edge>
  <node id="N1717"/>
  <edge source="N1715" target="N1717">
   <data key="sourcecode">command_info-&gt;command_finished = (__u8 )17;</data>
   <data key="startline">6179</data>
   <data key="startoffset">175124</data>
  </edge>
  <edge source="N1717" target="N1748">
   <data key="sourcecode">__wake_up(&amp; command_info-&gt;wait_command, 3U, 1, (void *)0);</data>
   <data key="startline">6180</data>
   <data key="startoffset">175184</data>
  </edge>
  <node id="N1712"/>
  <edge source="N1710" target="N1712">
   <data key="sourcecode">command_info-&gt;command_finished = (__u8 )16;</data>
   <data key="startline">6173</data>
   <data key="startoffset">174992</data>
  </edge>
  <edge source="N1712" target="N1748">
   <data key="sourcecode">__wake_up(&amp; command_info-&gt;wait_command, 3U, 1, (void *)0);</data>
   <data key="startline">6174</data>
   <data key="startoffset">175051</data>
  </edge>
  <node id="N1176"/>
  <edge source="N1175" target="N1176">
   <data key="sourcecode">urb-&gt;dev = serial-&gt;dev;</data>
   <data key="startline">5520</data>
   <data key="startoffset">158972</data>
  </edge>
  <node id="N1177"/>
  <edge source="N1176" target="N1177">
   <data key="sourcecode">urb-&gt;transfer_buffer_length = (u32 )bytes;</data>
   <data key="startline">5521</data>
   <data key="startoffset">159030</data>
  </edge>
  <node id="N1178"/>
  <edge source="N1177" target="N1178">
   <data key="sourcecode">result = usb_submit_urb(urb, 32U);</data>
   <data key="startline">5522</data>
   <data key="startoffset">159047</data>
  </edge>
  <node id="N1180"/>
  <edge source="N1178" target="N1180">
   <data key="sourcecode">[(result == 0) == 0]</data>
   <data key="startline">5524</data>
   <data key="startoffset">159096</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1181"/>
  <edge source="N1178" target="N1181">
   <data key="sourcecode">[!((result == 0) == 0)]</data>
   <data key="startline">5524</data>
   <data key="startoffset">159096</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1205"/>
  <edge source="N1181" target="N1205">
   <data key="sourcecode">sent = sent + bytes;</data>
   <data key="startline">5557</data>
   <data key="startoffset">159901</data>
  </edge>
  <node id="N1206">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (result == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__len == (unsigned long int) bytes) &amp;&amp; (ldv_coherent_state == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1205" target="N1206">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">count = count - bytes;</data>
   <data key="startline">5558</data>
   <data key="startoffset">159921</data>
  </edge>
  <edge source="N1206" target="N89">
   <data key="sourcecode">tmp___12 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">5567</data>
   <data key="startoffset">160085</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <node id="N1182"/>
  <edge source="N1180" target="N1182">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "%s - failed submitting write urb, error %d\n",
              "whiteheat_write", result);</data>
   <data key="startline">5526</data>
   <data key="startoffset">159166</data>
  </edge>
  <node id="N1183">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; !(result == 0) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__len == (unsigned long int) bytes) &amp;&amp; !(0 == result) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; ((!(0 == count) &amp;&amp; !(count == 0)) || ((count &gt;= -2147483647) &amp;&amp; (count &lt;= -1)) || ((count &gt;= 1) &amp;&amp; (count &lt;= 2147483647)))</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1182" target="N1183">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">sent = result;</data>
   <data key="startline">5528</data>
   <data key="startoffset">159262</data>
  </edge>
  <edge source="N1183" target="N89">
   <data key="sourcecode">tmp___11 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">5538</data>
   <data key="startoffset">159437</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <node id="N215"/>
  <edge source="N213" target="N215">
   <data key="sourcecode">dev_printk("&lt;7&gt;", (struct device const *)dev, "%s - length = %d, data = ", function,
               size);</data>
   <data key="startline">4134</data>
   <data key="startoffset">116781</data>
  </edge>
  <node id="N226"/>
  <edge source="N215" target="N226">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">i = 0;</data>
   <data key="startline">4136</data>
   <data key="startoffset">116892</data>
  </edge>
  <node id="N222"/>
  <edge source="N226" target="N222">
   <data key="sourcecode">[i &lt; size]</data>
   <data key="startline">4141</data>
   <data key="startoffset">116965</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N223"/>
  <edge source="N226" target="N223">
   <data key="sourcecode">[!(i &lt; size)]</data>
   <data key="startline">4141</data>
   <data key="startoffset">116965</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N223" target="N230">
   <data key="sourcecode">printk("\n");</data>
   <data key="startline">4155</data>
   <data key="startoffset">117173</data>
  </edge>
  <node id="N225"/>
  <edge source="N222" target="N225">
   <data key="sourcecode">printk("%.2x ", (int const )*(data + i));</data>
   <data key="startline">4147</data>
   <data key="startoffset">117037</data>
  </edge>
  <edge source="N225" target="N226">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">i = i + 1;</data>
   <data key="startline">4148</data>
   <data key="startoffset">117085</data>
  </edge>
  <node id="N1818"/>
  <edge source="N1811" target="N1818">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6307</data>
   <data key="startoffset">178645</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1820"/>
  <edge source="N1811" target="N1820">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6307</data>
   <data key="startoffset">178645</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1820" target="N93">
   <data key="sourcecode">spin_lock(&amp; info-&gt;lock);</data>
   <data key="startline">6321</data>
   <data key="startoffset">179124</data>
   <data key="enterFunction">spin_lock</data>
  </edge>
  <edge source="N1818" target="N1820">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - nonzero read bulk status received: %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "whiteheat_read_callback", status);</data>
   <data key="startline">6309</data>
   <data key="startoffset">178672</data>
  </edge>
  <node id="N1806">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N1805" target="N1806">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "%s - Not my urb!\n", "whiteheat_read_callback");</data>
   <data key="startline">6293</data>
   <data key="startoffset">178376</data>
  </edge>
  <edge source="N1806" target="N1771">
   <data key="sourcecode">return;</data>
   <data key="startline">6295</data>
   <data key="startoffset">178482</data>
   <data key="returnFrom">whiteheat_read_callback</data>
  </edge>
  <node id="N1044"/>
  <edge source="N1043" target="N1044">
   <data key="sourcecode">tmp___8 = tmp2;</data>
   <data key="startline">5358</data>
   <data key="startoffset">154941</data>
  </edge>
  <node id="N1045"/>
  <edge source="N1044" target="N1045">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">5359</data>
   <data key="startoffset">154968</data>
  </edge>
  <node id="N1040"/>
  <edge source="N1045" target="N1040">
   <data key="sourcecode">[((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;rx_urb_q)))]</data>
   <data key="startline">5351</data>
   <data key="startoffset">154818</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1041"/>
  <edge source="N1045" target="N1041">
   <data key="sourcecode">[!(((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;rx_urb_q))))]</data>
   <data key="startline">5351</data>
   <data key="startoffset">154818</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1049"/>
  <edge source="N1041" target="N1049">
   <data key="sourcecode">tmp___8 = info-&gt;tx_urbs_submitted.next;</data>
   <data key="startline">5365</data>
   <data key="startoffset">155049</data>
  </edge>
  <node id="N1068"/>
  <edge source="N1049" target="N1068">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">5366</data>
   <data key="startoffset">155088</data>
  </edge>
  <node id="N1056"/>
  <edge source="N1068" target="N1056">
   <data key="sourcecode">[((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;tx_urbs_submitted)))]</data>
   <data key="startline">5370</data>
   <data key="startoffset">155155</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1057"/>
  <edge source="N1068" target="N1057">
   <data key="sourcecode">[!(((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;tx_urbs_submitted))))]</data>
   <data key="startline">5370</data>
   <data key="startoffset">155155</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N108"/>
  <edge source="N1057" target="N108">
   <data key="sourcecode">spin_unlock_irq(&amp; info-&gt;lock);</data>
   <data key="startline">5392</data>
   <data key="startoffset">155743</data>
   <data key="enterFunction">spin_unlock_irq</data>
  </edge>
  <node id="N110"/>
  <edge source="N108" target="N110">
   <data key="sourcecode">_raw_spin_unlock_irq(&amp; lock-&gt;__annonCompField18.rlock);</data>
   <data key="startline">3934</data>
   <data key="startoffset">109558</data>
  </edge>
  <node id="N107"/>
  <edge source="N110" target="N107">
   <data key="sourcecode">return;</data>
   <data key="startline">3936</data>
   <data key="startoffset">109597</data>
   <data key="returnFrom">spin_unlock_irq</data>
  </edge>
  <node id="N1024"/>
  <edge source="N107" target="N1024">
   <data key="startline">5335</data>
   <data key="startoffset">154431</data>
  </edge>
  <node id="N1063"/>
  <edge source="N107" target="N1063">
   <data key="startline">5380</data>
   <data key="startoffset">155505</data>
  </edge>
  <node id="N1072"/>
  <edge source="N107" target="N1072">
   <data key="startline">5392</data>
   <data key="startoffset">155743</data>
  </edge>
  <node id="N1569"/>
  <edge source="N107" target="N1569">
   <data key="startline">5989</data>
   <data key="startoffset">170345</data>
  </edge>
  <node id="N1600"/>
  <edge source="N107" target="N1600">
   <data key="startline">6026</data>
   <data key="startoffset">171309</data>
  </edge>
  <node id="N1602"/>
  <edge source="N1600" target="N1602">
   <data key="sourcecode">[(actually_throttled == 0) == 0]</data>
   <data key="startline">6028</data>
   <data key="startoffset">171350</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N1600" target="N1604">
   <data key="sourcecode">[!((actually_throttled == 0) == 0)]</data>
   <data key="startline">6028</data>
   <data key="startoffset">171350</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2574"/>
  <edge source="N1602" target="N2574">
   <data key="sourcecode">rx_data_softint(&amp; info-&gt;rx_work);</data>
   <data key="startline">6030</data>
   <data key="startoffset">171400</data>
   <data key="enterFunction">rx_data_softint</data>
  </edge>
  <node id="N2576"/>
  <edge source="N2574" target="N2576">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">7242</data>
   <data key="startoffset">202795</data>
  </edge>
  <node id="N2577"/>
  <edge source="N2576" target="N2577">
   <data key="sourcecode">struct work_struct const *__mptr ;</data>
   <data key="startline">7243</data>
   <data key="startoffset">202830</data>
  </edge>
  <node id="N2578"/>
  <edge source="N2577" target="N2578">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">7244</data>
   <data key="startoffset">202867</data>
  </edge>
  <node id="N2579"/>
  <edge source="N2578" target="N2579">
   <data key="sourcecode">struct tty_struct *tty ;</data>
   <data key="startline">7245</data>
   <data key="startoffset">202900</data>
  </edge>
  <node id="N2580"/>
  <edge source="N2579" target="N2580">
   <data key="sourcecode">struct tty_struct *tmp___7 ;</data>
   <data key="startline">7246</data>
   <data key="startoffset">202927</data>
  </edge>
  <node id="N2581"/>
  <edge source="N2580" target="N2581">
   <data key="sourcecode">struct whiteheat_urb_wrap *wrap ;</data>
   <data key="startline">7247</data>
   <data key="startoffset">202958</data>
  </edge>
  <node id="N2582"/>
  <edge source="N2581" target="N2582">
   <data key="sourcecode">struct urb *urb ;</data>
   <data key="startline">7248</data>
   <data key="startoffset">202994</data>
  </edge>
  <node id="N2583"/>
  <edge source="N2582" target="N2583">
   <data key="sourcecode">unsigned long flags ;</data>
   <data key="startline">7249</data>
   <data key="startoffset">203014</data>
  </edge>
  <node id="N2584"/>
  <edge source="N2583" target="N2584">
   <data key="sourcecode">struct list_head *tmp___8 ;</data>
   <data key="startline">7250</data>
   <data key="startoffset">203038</data>
  </edge>
  <node id="N2585"/>
  <edge source="N2584" target="N2585">
   <data key="sourcecode">struct list_head *tmp2 ;</data>
   <data key="startline">7251</data>
   <data key="startoffset">203068</data>
  </edge>
  <node id="N2586"/>
  <edge source="N2585" target="N2586">
   <data key="sourcecode">int result ;</data>
   <data key="startline">7252</data>
   <data key="startoffset">203095</data>
  </edge>
  <node id="N2587"/>
  <edge source="N2586" target="N2587">
   <data key="sourcecode">int sent ;</data>
   <data key="startline">7253</data>
   <data key="startoffset">203110</data>
  </edge>
  <node id="N2588"/>
  <edge source="N2587" target="N2588">
   <data key="sourcecode">raw_spinlock_t *tmp___9 ;</data>
   <data key="startline">7254</data>
   <data key="startoffset">203123</data>
  </edge>
  <node id="N2589"/>
  <edge source="N2588" target="N2589">
   <data key="sourcecode">struct list_head const *__mptr___0 ;</data>
   <data key="startline">7255</data>
   <data key="startoffset">203151</data>
  </edge>
  <node id="N2590"/>
  <edge source="N2589" target="N2590">
   <data key="sourcecode">int tmp___10 ;</data>
   <data key="startline">7256</data>
   <data key="startoffset">203190</data>
  </edge>
  <node id="N2591"/>
  <edge source="N2590" target="N2591">
   <data key="sourcecode">raw_spinlock_t *tmp___11 ;</data>
   <data key="startline">7257</data>
   <data key="startoffset">203207</data>
  </edge>
  <node id="N2592"/>
  <edge source="N2591" target="N2592">
   <data key="sourcecode">raw_spinlock_t *tmp___12 ;</data>
   <data key="startline">7258</data>
   <data key="startoffset">203236</data>
  </edge>
  <node id="N2593"/>
  <edge source="N2592" target="N2593">
   <data key="sourcecode">__mptr = (struct work_struct const *)work;</data>
   <data key="startline">7262</data>
   <data key="startoffset">203311</data>
  </edge>
  <node id="N2594"/>
  <edge source="N2593" target="N2594">
   <data key="sourcecode">info = (struct whiteheat_private *)((char *)__mptr - (unsigned int )(&amp; ((struct whiteheat_private *)0)-&gt;rx_work));</data>
   <data key="startline">7263</data>
   <data key="startoffset">203355</data>
  </edge>
  <node id="N2595"/>
  <edge source="N2594" target="N2595">
   <data key="sourcecode">port = info-&gt;port;</data>
   <data key="startline">7264</data>
   <data key="startoffset">203436</data>
  </edge>
  <node id="N2596"/>
  <edge source="N2595" target="N2596">
   <data key="sourcecode">tmp___7 = tty_port_tty_get(&amp; port-&gt;port);</data>
   <data key="startline">7265</data>
   <data key="startoffset">203486</data>
  </edge>
  <node id="N2597"/>
  <edge source="N2596" target="N2597">
   <data key="sourcecode">tty = tmp___7;</data>
   <data key="startline">7266</data>
   <data key="startoffset">203501</data>
  </edge>
  <node id="N2598">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (sent == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2597" target="N2598">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">sent = 0;</data>
   <data key="startline">7267</data>
   <data key="startoffset">203518</data>
  </edge>
  <edge source="N2598" target="N89">
   <data key="sourcecode">tmp___9 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">7277</data>
   <data key="startoffset">203664</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <node id="N1543"/>
  <edge source="N1569" target="N1543">
   <data key="sourcecode">return;</data>
   <data key="startline">5991</data>
   <data key="startoffset">170382</data>
   <data key="returnFrom">whiteheat_throttle</data>
  </edge>
  <edge source="N1543" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7831</data>
   <data key="startoffset">222301</data>
  </edge>
  <node id="N1073"/>
  <edge source="N1072" target="N1073">
   <data key="sourcecode">mutex_unlock(&amp; info-&gt;deathwarrant);</data>
   <data key="startline">5393</data>
   <data key="startoffset">155789</data>
  </edge>
  <node id="N2381"/>
  <edge source="N1073" target="N2381">
   <data key="sourcecode">stop_command_port(port-&gt;serial);</data>
   <data key="startline">5394</data>
   <data key="startoffset">155832</data>
   <data key="enterFunction">stop_command_port</data>
  </edge>
  <node id="N2383"/>
  <edge source="N2381" target="N2383">
   <data key="sourcecode">struct usb_serial_port *command_port ;</data>
   <data key="startline">7004</data>
   <data key="startoffset">197311</data>
  </edge>
  <node id="N2384"/>
  <edge source="N2383" target="N2384">
   <data key="sourcecode">struct whiteheat_command_private *command_info ;</data>
   <data key="startline">7005</data>
   <data key="startoffset">197352</data>
  </edge>
  <node id="N2385"/>
  <edge source="N2384" target="N2385">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">7006</data>
   <data key="startoffset">197403</data>
  </edge>
  <node id="N2386"/>
  <edge source="N2385" target="N2386">
   <data key="sourcecode">command_port = serial-&gt;port[4];</data>
   <data key="startline">7010</data>
   <data key="startoffset">197458</data>
  </edge>
  <edge source="N2386" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(command_port);</data>
   <data key="startline">7011</data>
   <data key="startoffset">197464</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N1064"/>
  <edge source="N1063" target="N1064">
   <data key="sourcecode">usb_kill_urb(urb);</data>
   <data key="startline">5381</data>
   <data key="startoffset">155540</data>
  </edge>
  <node id="N98"/>
  <edge source="N1064" target="N98">
   <data key="sourcecode">spin_lock_irq(&amp; info-&gt;lock);</data>
   <data key="startline">5382</data>
   <data key="startoffset">155563</data>
   <data key="enterFunction">spin_lock_irq</data>
  </edge>
  <node id="N100"/>
  <edge source="N98" target="N100">
   <data key="sourcecode">_raw_spin_lock_irq(&amp; lock-&gt;__annonCompField18.rlock);</data>
   <data key="startline">3914</data>
   <data key="startoffset">109259</data>
  </edge>
  <node id="N97"/>
  <edge source="N100" target="N97">
   <data key="sourcecode">return;</data>
   <data key="startline">3916</data>
   <data key="startoffset">109319</data>
   <data key="returnFrom">spin_lock_irq</data>
  </edge>
  <node id="N1009"/>
  <edge source="N97" target="N1009">
   <data key="startline">5318</data>
   <data key="startoffset">153938</data>
  </edge>
  <node id="N1026"/>
  <edge source="N97" target="N1026">
   <data key="startline">5337</data>
   <data key="startoffset">154489</data>
  </edge>
  <node id="N1065"/>
  <edge source="N97" target="N1065">
   <data key="startline">5382</data>
   <data key="startoffset">155563</data>
  </edge>
  <node id="N1566"/>
  <edge source="N97" target="N1566">
   <data key="startline">5987</data>
   <data key="startoffset">170266</data>
  </edge>
  <node id="N1595"/>
  <edge source="N97" target="N1595">
   <data key="startline">6023</data>
   <data key="startoffset">171183</data>
  </edge>
  <node id="N1597"/>
  <edge source="N1595" target="N1597">
   <data key="sourcecode">actually_throttled = (int )info-&gt;flags &amp; 2;</data>
   <data key="startline">6024</data>
   <data key="startoffset">171214</data>
  </edge>
  <node id="N1599"/>
  <edge source="N1597" target="N1599">
   <data key="sourcecode">info-&gt;flags = (__u8 )((int )info-&gt;flags &amp; -4);</data>
   <data key="startline">6025</data>
   <data key="startoffset">171260</data>
  </edge>
  <edge source="N1599" target="N108">
   <data key="sourcecode">spin_unlock_irq(&amp; info-&gt;lock);</data>
   <data key="startline">6026</data>
   <data key="startoffset">171327</data>
   <data key="enterFunction">spin_unlock_irq</data>
  </edge>
  <node id="N1568"/>
  <edge source="N1566" target="N1568">
   <data key="sourcecode">info-&gt;flags = (__u8 )((int )info-&gt;flags | 1);</data>
   <data key="startline">5988</data>
   <data key="startoffset">170297</data>
  </edge>
  <edge source="N1568" target="N108">
   <data key="sourcecode">spin_unlock_irq(&amp; info-&gt;lock);</data>
   <data key="startline">5989</data>
   <data key="startoffset">170345</data>
   <data key="enterFunction">spin_unlock_irq</data>
  </edge>
  <edge source="N1065" target="N68">
   <data key="sourcecode">list_add(tmp___8, &amp; info-&gt;tx_urbs_free);</data>
   <data key="startline">5383</data>
   <data key="startoffset">155596</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <edge source="N1026" target="N68">
   <data key="sourcecode">list_add(tmp___8, &amp; info-&gt;rx_urbs_free);</data>
   <data key="startline">5338</data>
   <data key="startoffset">154522</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <node id="N1010"/>
  <edge source="N1009" target="N1010">
   <data key="sourcecode">tmp___8 = info-&gt;rx_urbs_submitted.next;</data>
   <data key="startline">5319</data>
   <data key="startoffset">153979</data>
  </edge>
  <node id="N1029"/>
  <edge source="N1010" target="N1029">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">5320</data>
   <data key="startoffset">154018</data>
  </edge>
  <node id="N1017"/>
  <edge source="N1029" target="N1017">
   <data key="sourcecode">[((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;rx_urbs_submitted)))]</data>
   <data key="startline">5325</data>
   <data key="startoffset">154135</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1018"/>
  <edge source="N1029" target="N1018">
   <data key="sourcecode">[!(((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;rx_urbs_submitted))))]</data>
   <data key="startline">5325</data>
   <data key="startoffset">154135</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1033"/>
  <edge source="N1018" target="N1033">
   <data key="sourcecode">tmp___8 = info-&gt;rx_urb_q.next;</data>
   <data key="startline">5346</data>
   <data key="startoffset">154665</data>
  </edge>
  <edge source="N1033" target="N1045">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">5347</data>
   <data key="startoffset">154698</data>
  </edge>
  <node id="N1020"/>
  <edge source="N1017" target="N1020">
   <data key="sourcecode">__mptr = (struct list_head const *)tmp___8;</data>
   <data key="startline">5331</data>
   <data key="startoffset">154221</data>
  </edge>
  <node id="N1021"/>
  <edge source="N1020" target="N1021">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">5332</data>
   <data key="startoffset">154323</data>
  </edge>
  <node id="N1022"/>
  <edge source="N1021" target="N1022">
   <data key="sourcecode">urb = wrap-&gt;urb;</data>
   <data key="startline">5333</data>
   <data key="startoffset">154387</data>
  </edge>
  <node id="N1023"/>
  <edge source="N1022" target="N1023">
   <data key="sourcecode">list_del(tmp___8);</data>
   <data key="startline">5334</data>
   <data key="startoffset">154408</data>
  </edge>
  <edge source="N1023" target="N108">
   <data key="sourcecode">spin_unlock_irq(&amp; info-&gt;lock);</data>
   <data key="startline">5335</data>
   <data key="startoffset">154447</data>
   <data key="enterFunction">spin_unlock_irq</data>
  </edge>
  <node id="N1025"/>
  <edge source="N1024" target="N1025">
   <data key="sourcecode">usb_kill_urb(urb);</data>
   <data key="startline">5336</data>
   <data key="startoffset">154479</data>
  </edge>
  <edge source="N1025" target="N98">
   <data key="sourcecode">spin_lock_irq(&amp; info-&gt;lock);</data>
   <data key="startline">5337</data>
   <data key="startoffset">154489</data>
   <data key="enterFunction">spin_lock_irq</data>
  </edge>
  <node id="N1059"/>
  <edge source="N1056" target="N1059">
   <data key="sourcecode">__mptr___0 = (struct list_head const *)tmp___8;</data>
   <data key="startline">5376</data>
   <data key="startoffset">155287</data>
  </edge>
  <node id="N1060"/>
  <edge source="N1059" target="N1060">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr___0 - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">5377</data>
   <data key="startoffset">155416</data>
  </edge>
  <node id="N1061"/>
  <edge source="N1060" target="N1061">
   <data key="sourcecode">urb = wrap-&gt;urb;</data>
   <data key="startline">5378</data>
   <data key="startoffset">155461</data>
  </edge>
  <node id="N1062"/>
  <edge source="N1061" target="N1062">
   <data key="sourcecode">list_del(tmp___8);</data>
   <data key="startline">5379</data>
   <data key="startoffset">155482</data>
  </edge>
  <edge source="N1062" target="N108">
   <data key="sourcecode">spin_unlock_irq(&amp; info-&gt;lock);</data>
   <data key="startline">5380</data>
   <data key="startoffset">155521</data>
   <data key="enterFunction">spin_unlock_irq</data>
  </edge>
  <edge source="N1040" target="N78">
   <data key="sourcecode">list_move(tmp___8, &amp; info-&gt;rx_urbs_free);</data>
   <data key="startline">5357</data>
   <data key="startoffset">154914</data>
   <data key="enterFunction">list_move</data>
  </edge>
  <edge source="N703" target="N704">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">j = j + 1;</data>
   <data key="startline">4920</data>
   <data key="startoffset">144567</data>
  </edge>
  <node id="N3044"/>
  <edge source="N677" target="N3044">
   <data key="sourcecode">urb = usb_alloc_urb(0, 208U);</data>
   <data key="startline">4880</data>
   <data key="startoffset">143366</data>
   <data key="enterFunction">usb_alloc_urb</data>
  </edge>
  <node id="N3046"/>
  <edge source="N3044" target="N3046">
   <data key="sourcecode">void *arbitrary_memory ;</data>
   <data key="startline">7957</data>
   <data key="startoffset">224854</data>
  </edge>
  <node id="N3047"/>
  <edge source="N3046" target="N3047">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">7958</data>
   <data key="startoffset">224881</data>
  </edge>
  <node id="N3052"/>
  <edge source="N3047" target="N3052">
   <data key="sourcecode">tmp___7 = ldv_undefined_pointer();</data>
   <data key="startline">7965</data>
   <data key="startoffset">224962</data>
  </edge>
  <node id="N3053"/>
  <edge source="N3052" target="N3053">
   <data key="sourcecode">arbitrary_memory = tmp___7;</data>
   <data key="startline">7966</data>
   <data key="startoffset">224991</data>
  </edge>
  <node id="N3055"/>
  <edge source="N3053" target="N3055">
   <data key="sourcecode">[arbitrary_memory == 0]</data>
   <data key="startline">7968</data>
   <data key="startoffset">225035</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N3056"/>
  <edge source="N3053" target="N3056">
   <data key="sourcecode">[!(arbitrary_memory == 0)]</data>
   <data key="startline">7968</data>
   <data key="startoffset">225035</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N3058"/>
  <edge source="N3056" target="N3058">
   <data key="sourcecode">ldv_urb_state = ldv_urb_state + 1;</data>
   <data key="startline">7973</data>
   <data key="startoffset">225153</data>
  </edge>
  <node id="N3043"/>
  <edge source="N3058" target="N3043">
   <data key="sourcecode">return ((struct urb *)arbitrary_memory);</data>
   <data key="startline">7974</data>
   <data key="startoffset">225160</data>
   <data key="returnFrom">usb_alloc_urb</data>
  </edge>
  <node id="N652"/>
  <edge source="N3043" target="N652">
   <data key="startline">4839</data>
   <data key="startoffset">142135</data>
  </edge>
  <node id="N678"/>
  <edge source="N3043" target="N678">
   <data key="startline">4880</data>
   <data key="startoffset">143366</data>
  </edge>
  <node id="N680"/>
  <edge source="N678" target="N680">
   <data key="sourcecode">[urb == 0]</data>
   <data key="startline">4882</data>
   <data key="startoffset">143416</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N681"/>
  <edge source="N678" target="N681">
   <data key="sourcecode">[!(urb == 0)]</data>
   <data key="startline">4882</data>
   <data key="startoffset">143416</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N685"/>
  <edge source="N681" target="N685">
   <data key="sourcecode">buf_size = (int )(port-&gt;write_urb)-&gt;transfer_buffer_length;</data>
   <data key="startline">4891</data>
   <data key="startoffset">143599</data>
  </edge>
  <edge source="N685" target="N126">
   <data key="sourcecode">urb-&gt;transfer_buffer = kmalloc((size_t )buf_size, 208U);</data>
   <data key="startline">4892</data>
   <data key="startoffset">143677</data>
   <data key="enterFunction">kmalloc</data>
  </edge>
  <edge source="N680" target="N786">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "No free urbs available\n");</data>
   <data key="startline">4884</data>
   <data key="startoffset">143441</data>
  </edge>
  <node id="N654"/>
  <edge source="N652" target="N654">
   <data key="sourcecode">[urb == 0]</data>
   <data key="startline">4841</data>
   <data key="startoffset">142185</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N655"/>
  <edge source="N652" target="N655">
   <data key="sourcecode">[!(urb == 0)]</data>
   <data key="startline">4841</data>
   <data key="startoffset">142185</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N659"/>
  <edge source="N655" target="N659">
   <data key="sourcecode">buf_size = (int )(port-&gt;read_urb)-&gt;transfer_buffer_length;</data>
   <data key="startline">4850</data>
   <data key="startoffset">142368</data>
  </edge>
  <edge source="N659" target="N126">
   <data key="sourcecode">urb-&gt;transfer_buffer = kmalloc((size_t )buf_size, 208U);</data>
   <data key="startline">4851</data>
   <data key="startoffset">142422</data>
   <data key="enterFunction">kmalloc</data>
  </edge>
  <edge source="N654" target="N798">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "No free urbs available\n");</data>
   <data key="startline">4843</data>
   <data key="startoffset">142210</data>
  </edge>
  <edge source="N3055" target="N3043">
   <data key="sourcecode">return ((struct urb *)((void *)0));</data>
   <data key="startline">7969</data>
   <data key="startoffset">225061</data>
   <data key="returnFrom">usb_alloc_urb</data>
  </edge>
  <node id="N2694">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (tmp___8 == tmp2) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (tmp2 == tmp___8) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ldv_coherent_state == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2692" target="N2694">
   <data key="sourcecode">tmp___8 = tmp2;</data>
   <data key="startline">7390</data>
   <data key="startoffset">206115</data>
  </edge>
  <node id="N2695">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; ((sent == 0) || ((tmp___8 == tmp2) &amp;&amp; (tmp2 == tmp___8)))</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2694" target="N2695">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">7391</data>
   <data key="startoffset">206142</data>
  </edge>
  <node id="N2630">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2695" target="N2630">
   <data key="sourcecode">[((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;rx_urb_q)))]</data>
   <data key="startline">7303</data>
   <data key="startoffset">204117</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2631">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2695" target="N2631">
   <data key="sourcecode">[!(((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;rx_urb_q))))]</data>
   <data key="startline">7303</data>
   <data key="startoffset">204117</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2631" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">7397</data>
   <data key="startoffset">206211</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N2633"/>
  <edge source="N2630" target="N2633">
   <data key="sourcecode">list_del(tmp___8);</data>
   <data key="startline">7309</data>
   <data key="startoffset">204249</data>
  </edge>
  <edge source="N2633" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">7310</data>
   <data key="startoffset">204288</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N2535"/>
  <edge source="N2534" target="N2535">
   <data key="sourcecode">tmp___8 = tmp2;</data>
   <data key="startline">7191</data>
   <data key="startoffset">201707</data>
  </edge>
  <node id="N2536"/>
  <edge source="N2535" target="N2536">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">7192</data>
   <data key="startoffset">201734</data>
  </edge>
  <node id="N2443"/>
  <edge source="N2536" target="N2443">
   <data key="sourcecode">[((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;rx_urbs_free)))]</data>
   <data key="startline">7077</data>
   <data key="startoffset">198956</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2483"/>
  <edge source="N2536" target="N2483">
   <data key="sourcecode">[!(((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;rx_urbs_free))))]</data>
   <data key="startline">7077</data>
   <data key="startoffset">198956</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2483" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">7199</data>
   <data key="startoffset">201810</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N2446"/>
  <edge source="N2443" target="N2446">
   <data key="sourcecode">list_del(tmp___8);</data>
   <data key="startline">7083</data>
   <data key="startoffset">199046</data>
  </edge>
  <node id="N2447"/>
  <edge source="N2446" target="N2447">
   <data key="sourcecode">__mptr = (struct list_head const *)tmp___8;</data>
   <data key="startline">7084</data>
   <data key="startoffset">199069</data>
  </edge>
  <node id="N2448"/>
  <edge source="N2447" target="N2448">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">7085</data>
   <data key="startoffset">199210</data>
  </edge>
  <node id="N2449"/>
  <edge source="N2448" target="N2449">
   <data key="sourcecode">urb = wrap-&gt;urb;</data>
   <data key="startline">7086</data>
   <data key="startoffset">199226</data>
  </edge>
  <node id="N2450"/>
  <edge source="N2449" target="N2450">
   <data key="sourcecode">urb-&gt;dev = (port-&gt;serial)-&gt;dev;</data>
   <data key="startline">7087</data>
   <data key="startoffset">199247</data>
  </edge>
  <edge source="N2450" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">7088</data>
   <data key="startoffset">199320</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N2510"/>
  <edge source="N2509" target="N2510">
   <data key="sourcecode">tmp___8 = tmp2;</data>
   <data key="startline">7157</data>
   <data key="startoffset">201078</data>
  </edge>
  <node id="N2511"/>
  <edge source="N2510" target="N2511">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">7158</data>
   <data key="startoffset">201099</data>
  </edge>
  <node id="N2482"/>
  <edge source="N2511" target="N2482">
   <data key="sourcecode">[((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;rx_urbs_submitted)))]</data>
   <data key="startline">7121</data>
   <data key="startoffset">200045</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2511" target="N2483">
   <data key="sourcecode">[!(((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;rx_urbs_submitted))))]</data>
   <data key="startline">7121</data>
   <data key="startoffset">200045</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2485"/>
  <edge source="N2482" target="N2485">
   <data key="sourcecode">__mptr___0 = (struct list_head const *)tmp___8;</data>
   <data key="startline">7127</data>
   <data key="startoffset">200197</data>
  </edge>
  <node id="N2486"/>
  <edge source="N2485" target="N2486">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr___0 - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">7128</data>
   <data key="startoffset">200290</data>
  </edge>
  <node id="N2487"/>
  <edge source="N2486" target="N2487">
   <data key="sourcecode">urb = wrap-&gt;urb;</data>
   <data key="startline">7129</data>
   <data key="startoffset">200379</data>
  </edge>
  <node id="N2488"/>
  <edge source="N2487" target="N2488">
   <data key="sourcecode">list_del(tmp___8);</data>
   <data key="startline">7130</data>
   <data key="startoffset">200413</data>
  </edge>
  <edge source="N2488" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">7131</data>
   <data key="startoffset">200456</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N2475"/>
  <edge source="N2474" target="N2475">
   <data key="sourcecode">tmp___8 = info-&gt;rx_urbs_submitted.next;</data>
   <data key="startline">7115</data>
   <data key="startoffset">199911</data>
  </edge>
  <edge source="N2475" target="N2511">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">7116</data>
   <data key="startoffset">199954</data>
  </edge>
  <edge source="N1826" target="N103">
   <data key="sourcecode">spin_unlock(&amp; info-&gt;lock);</data>
   <data key="startline">6323</data>
   <data key="startoffset">179193</data>
   <data key="enterFunction">spin_unlock</data>
  </edge>
  <edge source="N1225" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">5582</data>
   <data key="startoffset">160483</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <edge source="N1202" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">5553</data>
   <data key="startoffset">159794</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N1067"/>
  <edge source="N1066" target="N1067">
   <data key="sourcecode">tmp___8 = tmp2;</data>
   <data key="startline">5384</data>
   <data key="startoffset">155641</data>
  </edge>
  <edge source="N1067" target="N1068">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">5385</data>
   <data key="startoffset">155661</data>
  </edge>
  <node id="N1028"/>
  <edge source="N1027" target="N1028">
   <data key="sourcecode">tmp___8 = tmp2;</data>
   <data key="startline">5339</data>
   <data key="startoffset">154567</data>
  </edge>
  <edge source="N1028" target="N1029">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">5340</data>
   <data key="startoffset">154594</data>
  </edge>
  <node id="N676"/>
  <edge source="N675" target="N676">
   <data key="sourcecode">wrap-&gt;urb = urb;</data>
   <data key="startline">4878</data>
   <data key="startoffset">143291</data>
  </edge>
  <edge source="N676" target="N68">
   <data key="sourcecode">list_add(&amp; wrap-&gt;list, &amp; info-&gt;rx_urbs_free);</data>
   <data key="startline">4879</data>
   <data key="startoffset">143337</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <edge source="N674" target="N184">
   <data key="sourcecode">usb_fill_bulk_urb(urb, serial-&gt;dev, ((unsigned int )(3 &lt;&lt; 30) | tmp___14) | 128U,
                        urb-&gt;transfer_buffer, buf_size, &amp; whiteheat_read_callback,
                        (void *)port);</data>
   <data key="startline">4876</data>
   <data key="startoffset">143219</data>
   <data key="enterFunction">usb_fill_bulk_urb</data>
  </edge>
  <node id="N538"/>
  <edge source="N537" target="N538">
   <data key="sourcecode">pipe = (int )(((unsigned int )(3 &lt;&lt; 30) | tmp___11) | 128U);</data>
   <data key="startline">4695</data>
   <data key="startoffset">138371</data>
  </edge>
  <node id="N539"/>
  <edge source="N538" target="N539">
   <data key="sourcecode">usb_clear_halt(serial-&gt;dev, pipe);</data>
   <data key="startline">4696</data>
   <data key="startoffset">138434</data>
  </edge>
  <node id="N540"/>
  <edge source="N539" target="N540">
   <data key="sourcecode">ret = usb_bulk_msg(serial-&gt;dev, (unsigned int )pipe, (void *)result, (int )(sizeof(*hw_info) + 1UL),
                     &amp; alen, 2000);</data>
   <data key="startline">4698</data>
   <data key="startoffset">138601</data>
  </edge>
  <node id="N542"/>
  <edge source="N540" target="N542">
   <data key="sourcecode">[(ret == 0) == 0]</data>
   <data key="startline">4700</data>
   <data key="startoffset">138618</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N543"/>
  <edge source="N540" target="N543">
   <data key="sourcecode">[!((ret == 0) == 0)]</data>
   <data key="startline">4700</data>
   <data key="startoffset">138618</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N547"/>
  <edge source="N543" target="N547">
   <data key="sourcecode">[((unsigned long)alen) != 20UL]</data>
   <data key="startline">4707</data>
   <data key="startoffset">138840</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N548"/>
  <edge source="N543" target="N548">
   <data key="sourcecode">[!(((unsigned long)alen) != 20UL)]</data>
   <data key="startline">4707</data>
   <data key="startoffset">138840</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N552"/>
  <edge source="N548" target="N552">
   <data key="sourcecode">[((int)(*(result + 0))) != ((int)(*(command + 0)))]</data>
   <data key="startline">4714</data>
   <data key="startoffset">139076</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N553"/>
  <edge source="N548" target="N553">
   <data key="sourcecode">[!(((int)(*(result + 0))) != ((int)(*(command + 0))))]</data>
   <data key="startline">4714</data>
   <data key="startoffset">139076</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N556"/>
  <edge source="N553" target="N556">
   <data key="sourcecode">hw_info = (struct whiteheat_hw_info *)(result + 1);</data>
   <data key="startline">4724</data>
   <data key="startoffset">139313</data>
  </edge>
  <node id="N559"/>
  <edge source="N556" target="N559">
   <data key="sourcecode">_dev_info((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s: Driver %s: Firmware v%d.%02d\n",
            (serial-&gt;type)-&gt;description, "v2.0", (int )hw_info-&gt;sw_major_rev, (int )hw_info-&gt;sw_minor_rev);</data>
   <data key="startline">4725</data>
   <data key="startoffset">139367</data>
  </edge>
  <edge source="N559" target="N709">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">i = 0;</data>
   <data key="startline">4727</data>
   <data key="startoffset">139572</data>
  </edge>
  <node id="N554"/>
  <edge source="N552" target="N554">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s: Command failed [%d]\n",
            (serial-&gt;type)-&gt;description, (int )*(result + 0));</data>
   <data key="startline">4716</data>
   <data key="startoffset">139151</data>
  </edge>
  <node id="N747"/>
  <edge source="N554" target="N747">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s: Unable to retrieve firmware version, try replugging\n",
          (serial-&gt;type)-&gt;description);</data>
   <data key="startline">4980</data>
   <data key="startoffset">145948</data>
  </edge>
  <node id="N748"/>
  <edge source="N747" target="N748">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s: If the firmware is not running (status led not blinking)\n",
          (serial-&gt;type)-&gt;description);</data>
   <data key="startline">4983</data>
   <data key="startoffset">146229</data>
  </edge>
  <node id="N749"/>
  <edge source="N748" target="N749">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s: please contact support@connecttech.com\n",
          (serial-&gt;type)-&gt;description);</data>
   <data key="startline">4984</data>
   <data key="startoffset">146316</data>
  </edge>
  <node id="N750"/>
  <edge source="N749" target="N750">
   <data key="sourcecode">kfree((void const *)result);</data>
   <data key="startline">4986</data>
   <data key="startoffset">146412</data>
  </edge>
  <edge source="N750" target="N473">
   <data key="sourcecode">return (-19);</data>
   <data key="startline">4988</data>
   <data key="startoffset">146449</data>
   <data key="returnFrom">whiteheat_attach</data>
  </edge>
  <edge source="N547" target="N554">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s: Get results incomplete [%d]\n",
            (serial-&gt;type)-&gt;description, alen);</data>
   <data key="startline">4709</data>
   <data key="startoffset">138876</data>
  </edge>
  <edge source="N542" target="N554">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s: Couldn\'t get results [%d]\n",
            (serial-&gt;type)-&gt;description, ret);</data>
   <data key="startline">4703</data>
   <data key="startoffset">138739</data>
  </edge>
  <node id="N509"/>
  <edge source="N508" target="N509">
   <data key="sourcecode">pipe = (int )((unsigned int )(3 &lt;&lt; 30) | tmp___8);</data>
   <data key="startline">4652</data>
   <data key="startoffset">137306</data>
  </edge>
  <edge source="N509" target="N126">
   <data key="sourcecode">tmp___9 = kmalloc((size_t )2, 208U);</data>
   <data key="startline">4653</data>
   <data key="startoffset">137386</data>
   <data key="enterFunction">kmalloc</data>
  </edge>
  <edge source="N695" target="N781">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "Couldn\'t allocate urb wrapper\n");</data>
   <data key="startline">4908</data>
   <data key="startoffset">144074</data>
  </edge>
  <node id="N688"/>
  <edge source="N686" target="N688">
   <data key="sourcecode">[(urb-&gt;transfer_buffer) == 0]</data>
   <data key="startline">4894</data>
   <data key="startoffset">143731</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N689"/>
  <edge source="N686" target="N689">
   <data key="sourcecode">[!((urb-&gt;transfer_buffer) == 0)]</data>
   <data key="startline">4894</data>
   <data key="startoffset">143731</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N689" target="N126">
   <data key="sourcecode">tmp___15 = kmalloc(sizeof(*wrap), 208U);</data>
   <data key="startline">4903</data>
   <data key="startoffset">143961</data>
   <data key="enterFunction">kmalloc</data>
  </edge>
  <edge source="N688" target="N784">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "Couldn\'t allocate urb buffer\n");</data>
   <data key="startline">4896</data>
   <data key="startoffset">143773</data>
  </edge>
  <node id="N667"/>
  <edge source="N666" target="N667">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)tmp___13;</data>
   <data key="startline">4863</data>
   <data key="startoffset">142749</data>
  </edge>
  <node id="N669"/>
  <edge source="N667" target="N669">
   <data key="sourcecode">[wrap == 0]</data>
   <data key="startline">4865</data>
   <data key="startoffset">142808</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N670"/>
  <edge source="N667" target="N670">
   <data key="sourcecode">[!(wrap == 0)]</data>
   <data key="startline">4865</data>
   <data key="startoffset">142808</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N670" target="N194">
   <data key="sourcecode">tmp___14 = __create_pipe(serial-&gt;dev, (unsigned int )port-&gt;bulk_in_endpointAddress);</data>
   <data key="startline">4874</data>
   <data key="startoffset">143001</data>
   <data key="enterFunction">__create_pipe</data>
  </edge>
  <edge source="N669" target="N793">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "Couldn\'t allocate urb wrapper\n");</data>
   <data key="startline">4867</data>
   <data key="startoffset">142866</data>
  </edge>
  <node id="N662"/>
  <edge source="N660" target="N662">
   <data key="sourcecode">[(urb-&gt;transfer_buffer) == 0]</data>
   <data key="startline">4853</data>
   <data key="startoffset">142499</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N663"/>
  <edge source="N660" target="N663">
   <data key="sourcecode">[!((urb-&gt;transfer_buffer) == 0)]</data>
   <data key="startline">4853</data>
   <data key="startoffset">142499</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N663" target="N126">
   <data key="sourcecode">tmp___13 = kmalloc(sizeof(*wrap), 208U);</data>
   <data key="startline">4862</data>
   <data key="startoffset">142695</data>
   <data key="enterFunction">kmalloc</data>
  </edge>
  <edge source="N662" target="N796">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "Couldn\'t allocate urb buffer\n");</data>
   <data key="startline">4855</data>
   <data key="startoffset">142587</data>
  </edge>
  <node id="N572"/>
  <edge source="N571" target="N572">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___12;</data>
   <data key="startline">4740</data>
   <data key="startoffset">139809</data>
  </edge>
  <node id="N574"/>
  <edge source="N572" target="N574">
   <data key="sourcecode">[((unsigned long)info) == ((unsigned long)((void *)0))]</data>
   <data key="startline">4742</data>
   <data key="startoffset">139868</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N575"/>
  <edge source="N572" target="N575">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(((unsigned long)info) == ((unsigned long)((void *)0)))]</data>
   <data key="startline">4742</data>
   <data key="startoffset">139868</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N575" target="N89">
   <data key="sourcecode">spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">4755</data>
   <data key="startoffset">140202</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <edge source="N574" target="N804">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "%s: Out of memory for port structures\n",
              (serial-&gt;type)-&gt;description);</data>
   <data key="startline">4744</data>
   <data key="startoffset">139945</data>
  </edge>
  <node id="N519"/>
  <edge source="N518" target="N519">
   <data key="sourcecode">result = (__u8 *)tmp___10;</data>
   <data key="startline">4665</data>
   <data key="startoffset">137609</data>
  </edge>
  <node id="N522"/>
  <edge source="N519" target="N522">
   <data key="sourcecode">[!(result == 0)]</data>
   <data key="startline">4667</data>
   <data key="startoffset">137648</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N519" target="N810">
   <data key="sourcecode">[result == 0]</data>
   <data key="startline">4667</data>
   <data key="startoffset">137648</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N524"/>
  <edge source="N522" target="N524">
   <data key="sourcecode">usb_clear_halt(serial-&gt;dev, pipe);</data>
   <data key="startline">4673</data>
   <data key="startoffset">137735</data>
  </edge>
  <node id="N525"/>
  <edge source="N524" target="N525">
   <data key="sourcecode">ret = usb_bulk_msg(serial-&gt;dev, (unsigned int )pipe, (void *)command, 2, &amp; alen,
                     2000);</data>
   <data key="startline">4674</data>
   <data key="startoffset">137805</data>
  </edge>
  <node id="N527"/>
  <edge source="N525" target="N527">
   <data key="sourcecode">[(ret == 0) == 0]</data>
   <data key="startline">4677</data>
   <data key="startoffset">137863</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N528"/>
  <edge source="N525" target="N528">
   <data key="sourcecode">[!((ret == 0) == 0)]</data>
   <data key="startline">4677</data>
   <data key="startoffset">137863</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N532"/>
  <edge source="N528" target="N532">
   <data key="sourcecode">[alen != 2]</data>
   <data key="startline">4684</data>
   <data key="startoffset">138062</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N533"/>
  <edge source="N528" target="N533">
   <data key="sourcecode">[!(alen != 2)]</data>
   <data key="startline">4684</data>
   <data key="startoffset">138062</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N533" target="N194">
   <data key="sourcecode">tmp___11 = __create_pipe(serial-&gt;dev, (unsigned int )command_port-&gt;bulk_in_endpointAddress);</data>
   <data key="startline">4694</data>
   <data key="startoffset">138301</data>
   <data key="enterFunction">__create_pipe</data>
  </edge>
  <edge source="N532" target="N554">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s: Send command incomplete [%d]\n",
            (serial-&gt;type)-&gt;description, alen);</data>
   <data key="startline">4686</data>
   <data key="startoffset">138119</data>
  </edge>
  <edge source="N527" target="N554">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s: Couldn\'t send command [%d]\n",
            (serial-&gt;type)-&gt;description, ret);</data>
   <data key="startline">4679</data>
   <data key="startoffset">137914</data>
  </edge>
  <node id="N511"/>
  <edge source="N510" target="N511">
   <data key="sourcecode">command = (__u8 *)tmp___9;</data>
   <data key="startline">4654</data>
   <data key="startoffset">137398</data>
  </edge>
  <node id="N514"/>
  <edge source="N511" target="N514">
   <data key="sourcecode">[!(command == 0)]</data>
   <data key="startline">4656</data>
   <data key="startoffset">137437</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N511" target="N812">
   <data key="sourcecode">[command == 0]</data>
   <data key="startline">4656</data>
   <data key="startoffset">137437</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N516"/>
  <edge source="N514" target="N516">
   <data key="sourcecode">*(command + 0) = (__u8 )11;</data>
   <data key="startline">4662</data>
   <data key="startoffset">137500</data>
  </edge>
  <node id="N517"/>
  <edge source="N516" target="N517">
   <data key="sourcecode">*(command + 1) = (__u8 )0;</data>
   <data key="startline">4663</data>
   <data key="startoffset">137528</data>
  </edge>
  <edge source="N517" target="N126">
   <data key="sourcecode">tmp___10 = kmalloc(sizeof(*hw_info) + 1UL, 208U);</data>
   <data key="startline">4664</data>
   <data key="startoffset">137557</data>
   <data key="enterFunction">kmalloc</data>
  </edge>
  <node id="N570"/>
  <edge source="N566" target="N570">
   <data key="sourcecode">port = serial-&gt;port[i];</data>
   <data key="startline">4738</data>
   <data key="startoffset">139716</data>
  </edge>
  <edge source="N570" target="N126">
   <data key="sourcecode">tmp___12 = kmalloc(sizeof(struct whiteheat_private ), 208U);</data>
   <data key="startline">4739</data>
   <data key="startoffset">139755</data>
   <data key="enterFunction">kmalloc</data>
  </edge>
  <node id="N143"/>
  <edge source="N164" target="N143">
   <data key="sourcecode">error = device_private_init(dev);</data>
   <data key="startline">4024</data>
   <data key="startoffset">112602</data>
   <data key="enterFunction">device_private_init</data>
  </edge>
  <node id="N145"/>
  <edge source="N143" target="N145">
   <data key="sourcecode">dev-&gt;p = kzalloc(sizeof(*dev-&gt;p), 208U);</data>
   <data key="startline">4007</data>
   <data key="startoffset">112187</data>
  </edge>
  <node id="N146"/>
  <edge source="N145" target="N146">
   <data key="sourcecode">[!((dev-&gt;p) == 0)]</data>
   <data key="startline">4008</data>
   <data key="startoffset">112235</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N147"/>
  <edge source="N145" target="N147">
   <data key="sourcecode">[(dev-&gt;p) == 0]</data>
   <data key="startline">4008</data>
   <data key="startoffset">112235</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N142"/>
  <edge source="N147" target="N142">
   <data key="sourcecode">return -12;</data>
   <data key="startline">4009</data>
   <data key="startoffset">112247</data>
   <data key="returnFrom">device_private_init</data>
  </edge>
  <node id="N165"/>
  <edge source="N142" target="N165">
   <data key="startline">4024</data>
   <data key="startoffset">112602</data>
  </edge>
  <edge source="N165" target="N166">
   <data key="sourcecode">[!((error == 0) == 0)]</data>
   <data key="startline">4025</data>
   <data key="startoffset">112645</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N167"/>
  <edge source="N165" target="N167">
   <data key="sourcecode">[(error == 0) == 0]</data>
   <data key="startline">4025</data>
   <data key="startoffset">112645</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N167" target="N159">
   <data key="sourcecode">return error;</data>
   <data key="startline">4026</data>
   <data key="startoffset">112659</data>
   <data key="returnFrom">dev_set_drvdata</data>
  </edge>
  <node id="N149"/>
  <edge source="N146" target="N149">
   <data key="sourcecode">dev-&gt;p-&gt;device = dev;</data>
   <data key="startline">4010</data>
   <data key="startoffset">112261</data>
  </edge>
  <edge source="N149" target="N142">
   <data key="sourcecode">return 0;</data>
   <data key="startline">4011</data>
   <data key="startoffset">112285</data>
   <data key="returnFrom">device_private_init</data>
  </edge>
  <edge source="N649" target="N3044">
   <data key="sourcecode">urb = usb_alloc_urb(0, 208U);</data>
   <data key="startline">4839</data>
   <data key="startoffset">142155</data>
   <data key="enterFunction">usb_alloc_urb</data>
  </edge>
  <edge source="N641" target="N62">
   <data key="sourcecode">INIT_LIST_HEAD(&amp; info-&gt;tx_urbs_submitted);</data>
   <data key="startline">4827</data>
   <data key="startoffset">141941</data>
   <data key="enterFunction">INIT_LIST_HEAD</data>
  </edge>
  <edge source="N640" target="N62">
   <data key="sourcecode">INIT_LIST_HEAD(&amp; info-&gt;tx_urbs_free);</data>
   <data key="startline">4826</data>
   <data key="startoffset">141899</data>
   <data key="enterFunction">INIT_LIST_HEAD</data>
  </edge>
  <edge source="N639" target="N62">
   <data key="sourcecode">INIT_LIST_HEAD(&amp; info-&gt;rx_urb_q);</data>
   <data key="startline">4825</data>
   <data key="startoffset">141863</data>
   <data key="enterFunction">INIT_LIST_HEAD</data>
  </edge>
  <edge source="N638" target="N62">
   <data key="sourcecode">INIT_LIST_HEAD(&amp; info-&gt;rx_urbs_submitted);</data>
   <data key="startline">4824</data>
   <data key="startoffset">141814</data>
   <data key="enterFunction">INIT_LIST_HEAD</data>
  </edge>
  <node id="N624"/>
  <edge source="N619" target="N624">
   <data key="sourcecode">info-&gt;rx_work.func = &amp; rx_data_softint;</data>
   <data key="startline">4805</data>
   <data key="startoffset">141395</data>
  </edge>
  <node id="N637"/>
  <edge source="N624" target="N637">
   <data key="sourcecode">info-&gt;port = port;</data>
   <data key="startline">4822</data>
   <data key="startoffset">141734</data>
  </edge>
  <edge source="N637" target="N62">
   <data key="sourcecode">INIT_LIST_HEAD(&amp; info-&gt;rx_urbs_free);</data>
   <data key="startline">4823</data>
   <data key="startoffset">141774</data>
   <data key="enterFunction">INIT_LIST_HEAD</data>
  </edge>
  <node id="N2683">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (result == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2682" target="N2683">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___12);</data>
   <data key="startline">7374</data>
   <data key="startoffset">205811</data>
  </edge>
  <edge source="N2683" target="N68">
   <data key="sourcecode">list_add(tmp___8, &amp; info-&gt;rx_urbs_submitted);</data>
   <data key="startline">7387</data>
   <data key="startoffset">206056</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <node id="N2663">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; !(result == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2662" target="N2663">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___11);</data>
   <data key="startline">7346</data>
   <data key="startoffset">205272</data>
  </edge>
  <edge source="N2663" target="N68">
   <data key="sourcecode">list_add(tmp___8, &amp; info-&gt;rx_urbs_free);</data>
   <data key="startline">7359</data>
   <data key="startoffset">205561</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <node id="N2608">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (sent == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2607" target="N2608">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___9);</data>
   <data key="startline">7278</data>
   <data key="startoffset">203714</data>
  </edge>
  <node id="N2618">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (sent == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2608" target="N2618">
   <data key="sourcecode">[((__CPAchecker_TMP_0 &amp; 1) == 0) == 0]</data>
   <data key="startline">7290</data>
   <data key="startoffset">203912</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2619">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; (sent == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2608" target="N2619">
   <data key="sourcecode">[!(((__CPAchecker_TMP_0 &amp; 1) == 0) == 0)]</data>
   <data key="startline">7290</data>
   <data key="startoffset">203912</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2623"/>
  <edge source="N2619" target="N2623">
   <data key="sourcecode">tmp___8 = info-&gt;rx_urb_q.next;</data>
   <data key="startline">7298</data>
   <data key="startoffset">204020</data>
  </edge>
  <edge source="N2623" target="N2695">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">7299</data>
   <data key="startoffset">204050</data>
  </edge>
  <edge source="N2618" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">7292</data>
   <data key="startoffset">203927</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N2525"/>
  <edge source="N2524" target="N2525">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___12);</data>
   <data key="startline">7177</data>
   <data key="startoffset">201413</data>
  </edge>
  <edge source="N2525" target="N68">
   <data key="sourcecode">list_add(tmp___8, &amp; info-&gt;rx_urbs_submitted);</data>
   <data key="startline">7190</data>
   <data key="startoffset">201675</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <node id="N2500"/>
  <edge source="N2499" target="N2500">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___11);</data>
   <data key="startline">7143</data>
   <data key="startoffset">200723</data>
  </edge>
  <edge source="N2500" target="N68">
   <data key="sourcecode">list_add(tmp___8, &amp; info-&gt;rx_urbs_free);</data>
   <data key="startline">7156</data>
   <data key="startoffset">201028</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <node id="N2465"/>
  <edge source="N2464" target="N2465">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___10);</data>
   <data key="startline">7101</data>
   <data key="startoffset">199615</data>
  </edge>
  <edge source="N2465" target="N68">
   <data key="sourcecode">list_add(tmp___8, &amp; info-&gt;rx_urbs_free);</data>
   <data key="startline">7114</data>
   <data key="startoffset">199872</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <node id="N2427"/>
  <edge source="N2426" target="N2427">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___9);</data>
   <data key="startline">7060</data>
   <data key="startoffset">198603</data>
  </edge>
  <node id="N2436"/>
  <edge source="N2427" target="N2436">
   <data key="sourcecode">tmp___8 = info-&gt;rx_urbs_free.next;</data>
   <data key="startline">7072</data>
   <data key="startoffset">198809</data>
  </edge>
  <edge source="N2436" target="N2536">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___8-&gt;next;</data>
   <data key="startline">7073</data>
   <data key="startoffset">198843</data>
  </edge>
  <node id="N1504">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_chars_in_buffer</data>
  </node>
  <edge source="N1503" target="N1504">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___9);</data>
   <data key="startline">5908</data>
   <data key="startoffset">168227</data>
  </edge>
  <node id="N1525">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_chars_in_buffer</data>
  </node>
  <edge source="N1504" target="N1525">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp___8 = info-&gt;tx_urbs_submitted.next;</data>
   <data key="startline">5920</data>
   <data key="startoffset">168438</data>
  </edge>
  <node id="N1519">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_chars_in_buffer</data>
  </node>
  <edge source="N1525" target="N1519">
   <data key="sourcecode">[((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;tx_urbs_submitted)))]</data>
   <data key="startline">5924</data>
   <data key="startoffset">168576</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1520">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_chars_in_buffer</data>
  </node>
  <edge source="N1525" target="N1520">
   <data key="sourcecode">[!(((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;tx_urbs_submitted))))]</data>
   <data key="startline">5924</data>
   <data key="startoffset">168576</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1520" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">5938</data>
   <data key="startoffset">168972</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N1522"/>
  <edge source="N1519" target="N1522">
   <data key="sourcecode">__mptr = (struct list_head const *)tmp___8;</data>
   <data key="startline">5929</data>
   <data key="startoffset">168691</data>
  </edge>
  <node id="N1523"/>
  <edge source="N1522" target="N1523">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">5930</data>
   <data key="startoffset">168806</data>
  </edge>
  <node id="N1524"/>
  <edge source="N1523" target="N1524">
   <data key="sourcecode">chars = (int )((u32 )chars + (wrap-&gt;urb)-&gt;transfer_buffer_length);</data>
   <data key="startline">5931</data>
   <data key="startoffset">168837</data>
  </edge>
  <edge source="N1524" target="N1525">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp___8 = tmp___8-&gt;next;</data>
   <data key="startline">5932</data>
   <data key="startoffset">168903</data>
  </edge>
  <node id="N1268">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_room</data>
  </node>
  <edge source="N1267" target="N1268">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___9);</data>
   <data key="startline">5633</data>
   <data key="startoffset">161639</data>
  </edge>
  <node id="N1287">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_room</data>
  </node>
  <edge source="N1268" target="N1287">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp___8 = info-&gt;tx_urbs_free.next;</data>
   <data key="startline">5645</data>
   <data key="startoffset">161829</data>
  </edge>
  <node id="N1283">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_room</data>
  </node>
  <edge source="N1287" target="N1283">
   <data key="sourcecode">[((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;tx_urbs_free)))]</data>
   <data key="startline">5649</data>
   <data key="startoffset">161952</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1284">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_room</data>
  </node>
  <edge source="N1287" target="N1284">
   <data key="sourcecode">[!(((unsigned long)tmp___8) != ((unsigned long)(&amp;(info-&gt;tx_urbs_free))))]</data>
   <data key="startline">5649</data>
   <data key="startoffset">161952</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1284" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">5661</data>
   <data key="startoffset">162152</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N1286"/>
  <edge source="N1283" target="N1286">
   <data key="sourcecode">room = room + 1;</data>
   <data key="startline">5654</data>
   <data key="startoffset">162034</data>
  </edge>
  <edge source="N1286" target="N1287">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp___8 = tmp___8-&gt;next;</data>
   <data key="startline">5655</data>
   <data key="startoffset">162058</data>
  </edge>
  <node id="N1216">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (result == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__len == (unsigned long int) bytes) &amp;&amp; (ldv_coherent_state == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1215" target="N1216">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___12);</data>
   <data key="startline">5568</data>
   <data key="startoffset">160136</data>
  </edge>
  <edge source="N1216" target="N68">
   <data key="sourcecode">list_add(tmp___8, &amp; info-&gt;tx_urbs_submitted);</data>
   <data key="startline">5581</data>
   <data key="startoffset">160426</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <node id="N1193">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; !(result == 0) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__len == (unsigned long int) bytes) &amp;&amp; !(0 == result) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; ((!(0 == count) &amp;&amp; !(count == 0)) || ((count &gt;= -2147483647) &amp;&amp; (count &lt;= -1)) || ((count &gt;= 1) &amp;&amp; (count &lt;= 2147483647)))</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1192" target="N1193">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___11);</data>
   <data key="startline">5539</data>
   <data key="startoffset">159477</data>
  </edge>
  <edge source="N1193" target="N68">
   <data key="sourcecode">list_add(tmp___8, &amp; info-&gt;tx_urbs_free);</data>
   <data key="startline">5552</data>
   <data key="startoffset">159767</data>
   <data key="enterFunction">list_add</data>
  </edge>
  <node id="N1146">
   <data key="invariant">!(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1145" target="N1146">
   <data key="sourcecode">flags = _raw_spin_lock_irqsave(tmp___9);</data>
   <data key="startline">5480</data>
   <data key="startoffset">157839</data>
  </edge>
  <node id="N84">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">list_empty</data>
  </node>
  <edge source="N1146" target="N84">
   <data key="sourcecode">tmp___10 = list_empty((struct list_head const *)(&amp; info-&gt;tx_urbs_free));</data>
   <data key="startline">5493</data>
   <data key="startoffset">158082</data>
   <data key="enterFunction">list_empty</data>
  </edge>
  <node id="N83">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">list_empty</data>
  </node>
  <edge source="N84" target="N83">
   <data key="sourcecode">return ((unsigned long )head-&gt;next == (unsigned long )head);</data>
   <data key="startline">3880</data>
   <data key="startoffset">107968</data>
   <data key="returnFrom">list_empty</data>
  </edge>
  <node id="N1155">
   <data key="invariant">!(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N83" target="N1155">
   <data key="startline">5493</data>
   <data key="startoffset">158082</data>
  </edge>
  <node id="N1157">
   <data key="invariant">(tmp___10 == 1) &amp;&amp; !(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1155" target="N1157">
   <data key="sourcecode">[(tmp___10 == 0) == 0]</data>
   <data key="startline">5495</data>
   <data key="startoffset">158169</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1158">
   <data key="invariant">!(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1155" target="N1158">
   <data key="sourcecode">[!((tmp___10 == 0) == 0)]</data>
   <data key="startline">5495</data>
   <data key="startoffset">158169</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1158" target="N2570">
   <data key="sourcecode">tmp___8 = list_first(&amp; info-&gt;tx_urbs_free);</data>
   <data key="startline">5504</data>
   <data key="startoffset">158306</data>
   <data key="enterFunction">list_first</data>
  </edge>
  <edge source="N1157" target="N113">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">spin_unlock_irqrestore(&amp; info-&gt;lock, flags);</data>
   <data key="startline">5497</data>
   <data key="startoffset">158218</data>
   <data key="enterFunction">spin_unlock_irqrestore</data>
  </edge>
  <node id="N2653">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (tty == tmp___7) &amp;&amp; !(result == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__mptr___0 == tmp___8)</data>
   <data key="invariant.scope">rx_data_softint</data>
  </node>
  <edge source="N2651" target="N2653">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "%s - failed resubmitting read urb, error %d\n",
              "rx_data_softint", result);</data>
   <data key="startline">7334</data>
   <data key="startoffset">204935</data>
  </edge>
  <edge source="N2653" target="N89">
   <data key="sourcecode">tmp___11 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">7345</data>
   <data key="startoffset">205221</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <node id="N2642"/>
  <edge source="N2639" target="N2642">
   <data key="sourcecode">[((urb-&gt;actual_length) == 0) == 0]</data>
   <data key="startline">7316</data>
   <data key="startoffset">204534</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2639" target="N2647">
   <data key="sourcecode">[!(((urb-&gt;actual_length) == 0) == 0)]</data>
   <data key="startline">7316</data>
   <data key="startoffset">204534</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N172"/>
  <edge source="N2642" target="N172">
   <data key="sourcecode">tmp___10 = tty_insert_flip_string(tty, (unsigned char const *)urb-&gt;transfer_buffer,
                                          (size_t )urb-&gt;actual_length);</data>
   <data key="startline">7318</data>
   <data key="startoffset">204574</data>
   <data key="enterFunction">tty_insert_flip_string</data>
  </edge>
  <node id="N174"/>
  <edge source="N172" target="N174">
   <data key="sourcecode">int tmp ;</data>
   <data key="startline">4044</data>
   <data key="startoffset">113645</data>
  </edge>
  <node id="N175"/>
  <edge source="N174" target="N175">
   <data key="sourcecode">tmp = tty_insert_flip_string_fixed_flag(tty, chars, (char)0, size);</data>
   <data key="startline">4048</data>
   <data key="startoffset">113672</data>
  </edge>
  <node id="N171"/>
  <edge source="N175" target="N171">
   <data key="sourcecode">return (tmp);</data>
   <data key="startline">4050</data>
   <data key="startoffset">113748</data>
   <data key="returnFrom">tty_insert_flip_string</data>
  </edge>
  <node id="N2646"/>
  <edge source="N171" target="N2646">
   <data key="startline">7318</data>
   <data key="startoffset">204574</data>
  </edge>
  <edge source="N2646" target="N2647">
   <data key="sourcecode">sent = sent + tmp___10;</data>
   <data key="startline">7320</data>
   <data key="startoffset">204738</data>
  </edge>
  <node id="N2398"/>
  <edge source="N2540" target="N2398">
   <data key="sourcecode">return (retval);</data>
   <data key="startline">7201</data>
   <data key="startoffset">201861</data>
   <data key="returnFrom">start_port_read</data>
  </edge>
  <node id="N958"/>
  <edge source="N2398" target="N958">
   <data key="startline">5250</data>
   <data key="startoffset">152200</data>
  </edge>
  <node id="N960"/>
  <edge source="N958" target="N960">
   <data key="sourcecode">[(retval == 0) == 0]</data>
   <data key="startline">5252</data>
   <data key="startoffset">152242</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N964">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; !(retval == 0) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_open</data>
  </node>
  <edge source="N958" target="N964">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!((retval == 0) == 0)]</data>
   <data key="startline">5252</data>
   <data key="startoffset">152242</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N972"/>
  <edge source="N964" target="N972">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5267</data>
   <data key="startoffset">152550</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N974"/>
  <edge source="N964" target="N974">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5267</data>
   <data key="startoffset">152550</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N910"/>
  <edge source="N974" target="N910">
   <data key="sourcecode">return (retval);</data>
   <data key="startline">5280</data>
   <data key="startoffset">152970</data>
   <data key="returnFrom">whiteheat_open</data>
  </edge>
  <node id="N2897"/>
  <edge source="N910" target="N2897">
   <data key="startline">7750</data>
   <data key="startoffset">220102</data>
  </edge>
  <node id="N2898"/>
  <edge source="N2897" target="N2898">
   <data key="sourcecode">ldv_check_return_value(res_whiteheat_open_4);</data>
   <data key="startline">7751</data>
   <data key="startoffset">220175</data>
  </edge>
  <node id="N2900"/>
  <edge source="N2898" target="N2900">
   <data key="sourcecode">[(res_whiteheat_open_4 == 0) == 0]</data>
   <data key="startline">7753</data>
   <data key="startoffset">220247</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2901"/>
  <edge source="N2898" target="N2901">
   <data key="sourcecode">[!((res_whiteheat_open_4 == 0) == 0)]</data>
   <data key="startline">7753</data>
   <data key="startoffset">220247</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2901" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">ldv_s_whiteheat_device_usb_serial_driver = ldv_s_whiteheat_device_usb_serial_driver + 1;</data>
   <data key="startline">7758</data>
   <data key="startoffset">220347</data>
  </edge>
  <node id="N2736"/>
  <edge source="N2900" target="N2736">
   <data key="sourcecode">whiteheat_exit();</data>
   <data key="startline">7861</data>
   <data key="startoffset">222870</data>
   <data key="enterFunction">whiteheat_exit</data>
  </edge>
  <node id="N2738"/>
  <edge source="N2736" target="N2738">
   <data key="sourcecode">usb_deregister(&amp; whiteheat_driver);</data>
   <data key="startline">7466</data>
   <data key="startoffset">207582</data>
  </edge>
  <node id="N2739"/>
  <edge source="N2738" target="N2739">
   <data key="sourcecode">usb_serial_deregister(&amp; whiteheat_fake_device);</data>
   <data key="startline">7467</data>
   <data key="startoffset">207605</data>
  </edge>
  <node id="N2740"/>
  <edge source="N2739" target="N2740">
   <data key="sourcecode">usb_serial_deregister(&amp; whiteheat_device);</data>
   <data key="startline">7468</data>
   <data key="startoffset">207655</data>
  </edge>
  <node id="N2735"/>
  <edge source="N2740" target="N2735">
   <data key="sourcecode">return;</data>
   <data key="startline">7470</data>
   <data key="startoffset">207704</data>
   <data key="returnFrom">whiteheat_exit</data>
  </edge>
  <node id="N2751"/>
  <edge source="N2735" target="N2751">
   <data key="startline">7488</data>
   <data key="startoffset">207860</data>
  </edge>
  <edge source="N2735" target="N2983">
   <data key="startline">7861</data>
   <data key="startoffset">222870</data>
  </edge>
  <node id="N2748"/>
  <edge source="N2751" target="N2748">
   <data key="sourcecode">return;</data>
   <data key="startline">7490</data>
   <data key="startoffset">207884</data>
   <data key="returnFrom">cleanup_module</data>
  </edge>
  <edge source="N972" target="N974">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - exit, retval = %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_open", retval);</data>
   <data key="startline">5269</data>
   <data key="startoffset">152573</data>
  </edge>
  <node id="N962"/>
  <edge source="N960" target="N962">
   <data key="sourcecode">dev_err((struct device const *)(&amp; port-&gt;dev), "%s - failed submitting read urb, error %d\n",
            "whiteheat_open", retval);</data>
   <data key="startline">5254</data>
   <data key="startoffset">152294</data>
  </edge>
  <node id="N2086"/>
  <edge source="N962" target="N2086">
   <data key="sourcecode">firm_close(port);</data>
   <data key="startline">5256</data>
   <data key="startoffset">152398</data>
   <data key="enterFunction">firm_close</data>
  </edge>
  <node id="N2088"/>
  <edge source="N2086" target="N2088">
   <data key="sourcecode">struct whiteheat_simple close_command ;</data>
   <data key="startline">6660</data>
   <data key="startoffset">187763</data>
  </edge>
  <node id="N2089"/>
  <edge source="N2088" target="N2089">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">6661</data>
   <data key="startoffset">187805</data>
  </edge>
  <node id="N2092"/>
  <edge source="N2089" target="N2092">
   <data key="sourcecode">close_command.port = (__u8 )(((int )port-&gt;number - (int )(port-&gt;serial)-&gt;minor) + 1);</data>
   <data key="startline">6665</data>
   <data key="startoffset">187830</data>
  </edge>
  <edge source="N2092" target="N1899">
   <data key="sourcecode">tmp___7 = firm_send_command(port, (__u8 )2, (__u8 *)(&amp; close_command), (__u8 )sizeof(close_command));</data>
   <data key="startline">6666</data>
   <data key="startoffset">187973</data>
   <data key="enterFunction">firm_send_command</data>
  </edge>
  <node id="N2490"/>
  <edge source="N2489" target="N2490">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">usb_kill_urb(urb);</data>
   <data key="startline">7132</data>
   <data key="startoffset">200497</data>
  </edge>
  <edge source="N2490" target="N89">
   <data key="sourcecode">tmp___11 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">7142</data>
   <data key="startoffset">200670</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <node id="N2452"/>
  <edge source="N2451" target="N2452">
   <data key="sourcecode">retval = usb_submit_urb(urb, 208U);</data>
   <data key="startline">7089</data>
   <data key="startoffset">199356</data>
  </edge>
  <node id="N2454"/>
  <edge source="N2452" target="N2454">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[(retval == 0) == 0]</data>
   <data key="startline">7091</data>
   <data key="startoffset">199382</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2455"/>
  <edge source="N2452" target="N2455">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!((retval == 0) == 0)]</data>
   <data key="startline">7091</data>
   <data key="startoffset">199382</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2455" target="N89">
   <data key="sourcecode">tmp___12 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">7176</data>
   <data key="startoffset">201364</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <edge source="N2454" target="N89">
   <data key="sourcecode">tmp___10 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">7100</data>
   <data key="startoffset">199533</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <node id="N1535"/>
  <edge source="N1529" target="N1535">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5943</data>
   <data key="startoffset">169073</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1537"/>
  <edge source="N1529" target="N1537">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5943</data>
   <data key="startoffset">169073</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1465"/>
  <edge source="N1537" target="N1465">
   <data key="sourcecode">return (chars);</data>
   <data key="startline">5956</data>
   <data key="startoffset">169488</data>
   <data key="returnFrom">whiteheat_chars_in_buffer</data>
  </edge>
  <edge source="N1465" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7826</data>
   <data key="startoffset">222190</data>
  </edge>
  <edge source="N1535" target="N1537">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - returns %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_chars_in_buffer", chars);</data>
   <data key="startline">5945</data>
   <data key="startoffset">169096</data>
  </edge>
  <node id="N1292">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_room</data>
  </node>
  <edge source="N1291" target="N1292">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">room = room * port-&gt;bulk_out_size;</data>
   <data key="startline">5662</data>
   <data key="startoffset">162181</data>
  </edge>
  <node id="N1298"/>
  <edge source="N1292" target="N1298">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5667</data>
   <data key="startoffset">162265</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1300"/>
  <edge source="N1292" target="N1300">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5667</data>
   <data key="startoffset">162265</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1231"/>
  <edge source="N1300" target="N1231">
   <data key="sourcecode">return (room);</data>
   <data key="startline">5680</data>
   <data key="startoffset">162682</data>
   <data key="returnFrom">whiteheat_write_room</data>
  </edge>
  <edge source="N1231" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7796</data>
   <data key="startoffset">221377</data>
  </edge>
  <edge source="N1298" target="N1300">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - returns %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_write_room", room);</data>
   <data key="startline">5669</data>
   <data key="startoffset">162288</data>
  </edge>
  <node id="N1134">
   <data key="invariant">!(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1226" target="N1134">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[(count == 0) == 0]</data>
   <data key="startline">5466</data>
   <data key="startoffset">157609</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N1226" target="N1203">
   <data key="sourcecode">[!((count == 0) == 0)]</data>
   <data key="startline">5466</data>
   <data key="startoffset">157609</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1134" target="N89">
   <data key="sourcecode">tmp___9 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">5479</data>
   <data key="startoffset">157791</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <node id="N1076">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1203" target="N1076">
   <data key="sourcecode">return (sent);</data>
   <data key="startline">5589</data>
   <data key="startoffset">160570</data>
   <data key="returnFrom">whiteheat_write</data>
  </edge>
  <edge source="N1076" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7791</data>
   <data key="startoffset">221213</data>
  </edge>
  <node id="N1164">
   <data key="invariant">!(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1163" target="N1164">
   <data key="sourcecode">__mptr = (struct list_head const *)tmp___8;</data>
   <data key="startline">5507</data>
   <data key="startoffset">158461</data>
  </edge>
  <node id="N1165">
   <data key="invariant">!(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1164" target="N1165">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">5508</data>
   <data key="startoffset">158544</data>
  </edge>
  <node id="N1166">
   <data key="invariant">!(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1165" target="N1166">
   <data key="sourcecode">urb = wrap-&gt;urb;</data>
   <data key="startline">5509</data>
   <data key="startoffset">158592</data>
  </edge>
  <node id="N1168">
   <data key="invariant">(((count &gt;= -2147483647) &amp;&amp; (count &lt;= -1)) || ((count &gt;= 1) &amp;&amp; (count &lt;= 2147483647))) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1166" target="N1168">
   <data key="sourcecode">[count &gt; (port-&gt;bulk_out_size)]</data>
   <data key="startline">5511</data>
   <data key="startoffset">158631</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1169">
   <data key="invariant">!(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (__mptr == tmp___8) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1166" target="N1169">
   <data key="sourcecode">[!(count &gt; (port-&gt;bulk_out_size))]</data>
   <data key="startline">5511</data>
   <data key="startoffset">158631</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1171"/>
  <edge source="N1169" target="N1171">
   <data key="sourcecode">bytes = count;</data>
   <data key="startline">5514</data>
   <data key="startoffset">158708</data>
  </edge>
  <node id="N1172"/>
  <edge source="N1171" target="N1172">
   <data key="sourcecode">__len = (size_t )bytes;</data>
   <data key="startline">5517</data>
   <data key="startoffset">158739</data>
  </edge>
  <node id="N1173"/>
  <edge source="N1172" target="N1173">
   <data key="sourcecode">__ret = __builtin_memcpy(urb-&gt;transfer_buffer, (void const *)(buf + sent), __len);</data>
   <data key="startline">5518</data>
   <data key="startoffset">158835</data>
  </edge>
  <edge source="N1173" target="N209">
   <data key="sourcecode">usb_serial_debug_data(debug, &amp; port-&gt;dev, "whiteheat_write", bytes, (unsigned char const *)urb-&gt;transfer_buffer);</data>
   <data key="startline">5519</data>
   <data key="startoffset">158854</data>
   <data key="enterFunction">usb_serial_debug_data</data>
  </edge>
  <edge source="N1168" target="N1171">
   <data key="sourcecode">bytes = port-&gt;bulk_out_size;</data>
   <data key="startline">5512</data>
   <data key="startoffset">158668</data>
  </edge>
  <node id="N2416"/>
  <edge source="N2415" target="N2416">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">7048</data>
   <data key="startoffset">198382</data>
  </edge>
  <node id="N2417"/>
  <edge source="N2416" target="N2417">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">retval = 0;</data>
   <data key="startline">7049</data>
   <data key="startoffset">198428</data>
  </edge>
  <edge source="N2417" target="N89">
   <data key="sourcecode">tmp___9 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">7059</data>
   <data key="startoffset">198559</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <node id="N2388"/>
  <edge source="N2387" target="N2388">
   <data key="sourcecode">command_info = (struct whiteheat_command_private *)tmp___7;</data>
   <data key="startline">7012</data>
   <data key="startoffset">197516</data>
  </edge>
  <node id="N2389"/>
  <edge source="N2388" target="N2389">
   <data key="sourcecode">mutex_lock_nested(&amp; command_info-&gt;mutex, 0U);</data>
   <data key="startline">7013</data>
   <data key="startoffset">197598</data>
  </edge>
  <node id="N2391"/>
  <edge source="N2389" target="N2391">
   <data key="sourcecode">command_info-&gt;port_running = (__u8 )((int )command_info-&gt;port_running - 1);</data>
   <data key="startline">7014</data>
   <data key="startoffset">197698</data>
  </edge>
  <node id="N2393"/>
  <edge source="N2391" target="N2393">
   <data key="sourcecode">[(command_info-&gt;port_running) == 0]</data>
   <data key="startline">7016</data>
   <data key="startoffset">197714</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2395"/>
  <edge source="N2391" target="N2395">
   <data key="sourcecode">[!((command_info-&gt;port_running) == 0)]</data>
   <data key="startline">7016</data>
   <data key="startoffset">197714</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2396"/>
  <edge source="N2395" target="N2396">
   <data key="sourcecode">mutex_unlock(&amp; command_info-&gt;mutex);</data>
   <data key="startline">7024</data>
   <data key="startoffset">197820</data>
  </edge>
  <node id="N2380"/>
  <edge source="N2396" target="N2380">
   <data key="sourcecode">return;</data>
   <data key="startline">7026</data>
   <data key="startoffset">197863</data>
   <data key="returnFrom">stop_command_port</data>
  </edge>
  <node id="N1074"/>
  <edge source="N2380" target="N1074">
   <data key="startline">5394</data>
   <data key="startoffset">155814</data>
  </edge>
  <edge source="N2380" target="N964">
   <data key="enterLoopHead">true</data>
   <data key="startline">5222</data>
   <data key="startoffset">151753</data>
  </edge>
  <edge source="N2380" target="N964">
   <data key="enterLoopHead">true</data>
   <data key="startline">5234</data>
   <data key="startoffset">151918</data>
  </edge>
  <edge source="N2380" target="N964">
   <data key="enterLoopHead">true</data>
   <data key="startline">5257</data>
   <data key="startoffset">152420</data>
  </edge>
  <node id="N980"/>
  <edge source="N1074" target="N980">
   <data key="sourcecode">return;</data>
   <data key="startline">5396</data>
   <data key="startoffset">155853</data>
   <data key="returnFrom">whiteheat_close</data>
  </edge>
  <node id="N2910"/>
  <edge source="N980" target="N2910">
   <data key="startline">7766</data>
   <data key="startoffset">220590</data>
  </edge>
  <edge source="N2910" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">ldv_s_whiteheat_device_usb_serial_driver = ldv_s_whiteheat_device_usb_serial_driver + 1;</data>
   <data key="startline">7767</data>
   <data key="startoffset">220672</data>
  </edge>
  <edge source="N2393" target="N2395">
   <data key="sourcecode">usb_kill_urb(command_port-&gt;read_urb);</data>
   <data key="startline">7018</data>
   <data key="startoffset">197767</data>
  </edge>
  <node id="N2361"/>
  <edge source="N2360" target="N2361">
   <data key="sourcecode">command_info = (struct whiteheat_command_private *)tmp___7;</data>
   <data key="startline">6974</data>
   <data key="startoffset">196514</data>
  </edge>
  <node id="N2362"/>
  <edge source="N2361" target="N2362">
   <data key="sourcecode">mutex_lock_nested(&amp; command_info-&gt;mutex, 0U);</data>
   <data key="startline">6975</data>
   <data key="startoffset">196594</data>
  </edge>
  <node id="N2364"/>
  <edge source="N2362" target="N2364">
   <data key="sourcecode">[(command_info-&gt;port_running) == 0]</data>
   <data key="startline">6977</data>
   <data key="startoffset">196634</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2372"/>
  <edge source="N2362" target="N2372">
   <data key="sourcecode">[!((command_info-&gt;port_running) == 0)]</data>
   <data key="startline">6977</data>
   <data key="startoffset">196634</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2376"/>
  <edge source="N2372" target="N2376">
   <data key="sourcecode">command_info-&gt;port_running = (__u8 )((int )command_info-&gt;port_running + 1);</data>
   <data key="startline">6995</data>
   <data key="startoffset">197126</data>
  </edge>
  <node id="N2378"/>
  <edge source="N2376" target="N2378">
   <data key="sourcecode">mutex_unlock(&amp; command_info-&gt;mutex);</data>
   <data key="startline">6998</data>
   <data key="startoffset">197202</data>
  </edge>
  <node id="N2351"/>
  <edge source="N2378" target="N2351">
   <data key="sourcecode">return (retval);</data>
   <data key="startline">7000</data>
   <data key="startoffset">197230</data>
   <data key="returnFrom">start_command_port</data>
  </edge>
  <node id="N928"/>
  <edge source="N2351" target="N928">
   <data key="startline">5205</data>
   <data key="startoffset">151527</data>
  </edge>
  <node id="N931"/>
  <edge source="N928" target="N931">
   <data key="sourcecode">[!((retval == 0) == 0)]</data>
   <data key="startline">5207</data>
   <data key="startoffset">151580</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N928" target="N964">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[(retval == 0) == 0]</data>
   <data key="startline">5207</data>
   <data key="startoffset">151580</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N934"/>
  <edge source="N931" target="N934">
   <data key="sourcecode">[(tty == 0) == 0]</data>
   <data key="startline">5212</data>
   <data key="startoffset">151627</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N936"/>
  <edge source="N931" target="N936">
   <data key="sourcecode">[!((tty == 0) == 0)]</data>
   <data key="startline">5212</data>
   <data key="startoffset">151627</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2076"/>
  <edge source="N936" target="N2076">
   <data key="sourcecode">retval = firm_open(port);</data>
   <data key="startline">5218</data>
   <data key="startoffset">151716</data>
   <data key="enterFunction">firm_open</data>
  </edge>
  <node id="N2078"/>
  <edge source="N2076" target="N2078">
   <data key="sourcecode">struct whiteheat_simple open_command ;</data>
   <data key="startline">6648</data>
   <data key="startoffset">187427</data>
  </edge>
  <node id="N2079"/>
  <edge source="N2078" target="N2079">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">6649</data>
   <data key="startoffset">187468</data>
  </edge>
  <node id="N2082"/>
  <edge source="N2079" target="N2082">
   <data key="sourcecode">open_command.port = (__u8 )(((int )port-&gt;number - (int )(port-&gt;serial)-&gt;minor) + 1);</data>
   <data key="startline">6653</data>
   <data key="startoffset">187574</data>
  </edge>
  <edge source="N2082" target="N1899">
   <data key="sourcecode">tmp___7 = firm_send_command(port, (__u8 )1, (__u8 *)(&amp; open_command), (__u8 )sizeof(open_command));</data>
   <data key="startline">6654</data>
   <data key="startoffset">187650</data>
   <data key="enterFunction">firm_send_command</data>
  </edge>
  <edge source="N934" target="N936">
   <data key="sourcecode">tty-&gt;low_latency = (unsigned char)1;</data>
   <data key="startline">5213</data>
   <data key="startoffset">151638</data>
  </edge>
  <node id="N2367"/>
  <edge source="N2364" target="N2367">
   <data key="sourcecode">usb_clear_halt(serial-&gt;dev, (int )(command_port-&gt;read_urb)-&gt;pipe);</data>
   <data key="startline">6979</data>
   <data key="startoffset">196689</data>
  </edge>
  <node id="N2368"/>
  <edge source="N2367" target="N2368">
   <data key="sourcecode">(command_port-&gt;read_urb)-&gt;dev = serial-&gt;dev;</data>
   <data key="startline">6980</data>
   <data key="startoffset">196745</data>
  </edge>
  <node id="N2369"/>
  <edge source="N2368" target="N2369">
   <data key="sourcecode">retval = usb_submit_urb(command_port-&gt;read_urb, 208U);</data>
   <data key="startline">6981</data>
   <data key="startoffset">196794</data>
  </edge>
  <node id="N2371"/>
  <edge source="N2369" target="N2371">
   <data key="sourcecode">[(retval == 0) == 0]</data>
   <data key="startline">6983</data>
   <data key="startoffset">196863</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2369" target="N2372">
   <data key="sourcecode">[!((retval == 0) == 0)]</data>
   <data key="startline">6983</data>
   <data key="startoffset">196863</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2371" target="N2376">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s - failed submitting read urb, error %d\n",
              "start_command_port", retval);</data>
   <data key="startline">6985</data>
   <data key="startoffset">196895</data>
  </edge>
  <node id="N2063"/>
  <edge source="N2062" target="N2063">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___9;</data>
   <data key="startline">6619</data>
   <data key="startoffset">186729</data>
  </edge>
  <node id="N2064"/>
  <edge source="N2063" target="N2064">
   <data key="sourcecode">__len___0 = sizeof(struct whiteheat_dr_info );</data>
   <data key="startline">6620</data>
   <data key="startoffset">186772</data>
  </edge>
  <node id="N2066"/>
  <edge source="N2064" target="N2066">
   <data key="sourcecode">[__len___0 &gt;= 64UL]</data>
   <data key="startline">6622</data>
   <data key="startoffset">186850</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2067"/>
  <edge source="N2064" target="N2067">
   <data key="sourcecode">[!(__len___0 &gt;= 64UL)]</data>
   <data key="startline">6622</data>
   <data key="startoffset">186850</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2069"/>
  <edge source="N2067" target="N2069">
   <data key="sourcecode">__ret___1 = __builtin_memcpy((void *)(&amp; info-&gt;mcr), (void const *)(command_info-&gt;result_buffer),
                                     __len___0);</data>
   <data key="startline">6630</data>
   <data key="startoffset">187183</data>
  </edge>
  <node id="N2073"/>
  <edge source="N2069" target="N2073">
   <data key="sourcecode">mutex_unlock(&amp; command_info-&gt;mutex);</data>
   <data key="startline">6642</data>
   <data key="startoffset">187324</data>
  </edge>
  <node id="N1898"/>
  <edge source="N2073" target="N1898">
   <data key="sourcecode">return (retval);</data>
   <data key="startline">6644</data>
   <data key="startoffset">187352</data>
   <data key="returnFrom">firm_send_command</data>
  </edge>
  <node id="N2083"/>
  <edge source="N1898" target="N2083">
   <data key="startline">6654</data>
   <data key="startoffset">187580</data>
  </edge>
  <node id="N2093"/>
  <edge source="N1898" target="N2093">
   <data key="startline">6666</data>
   <data key="startoffset">187918</data>
  </edge>
  <node id="N2285"/>
  <edge source="N1898" target="N2285">
   <data key="startline">6882</data>
   <data key="startoffset">193886</data>
  </edge>
  <node id="N2296"/>
  <edge source="N1898" target="N2296">
   <data key="startline">6895</data>
   <data key="startoffset">194247</data>
  </edge>
  <node id="N2307"/>
  <edge source="N1898" target="N2307">
   <data key="startline">6908</data>
   <data key="startoffset">194624</data>
  </edge>
  <node id="N2318"/>
  <edge source="N1898" target="N2318">
   <data key="startline">6921</data>
   <data key="startoffset">195009</data>
  </edge>
  <node id="N2329"/>
  <edge source="N1898" target="N2329">
   <data key="startline">6934</data>
   <data key="startoffset">195389</data>
  </edge>
  <node id="N2339"/>
  <edge source="N1898" target="N2339">
   <data key="startline">6946</data>
   <data key="startoffset">195737</data>
  </edge>
  <node id="N2349"/>
  <edge source="N1898" target="N2349">
   <data key="startline">6958</data>
   <data key="startoffset">196089</data>
  </edge>
  <node id="N2341"/>
  <edge source="N2349" target="N2341">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">6960</data>
   <data key="startoffset">196198</data>
   <data key="returnFrom">firm_report_tx_done</data>
  </edge>
  <node id="N1006"/>
  <edge source="N2341" target="N1006">
   <data key="startline">5315</data>
   <data key="startoffset">153842</data>
  </edge>
  <edge source="N1006" target="N2086">
   <data key="sourcecode">firm_close(port);</data>
   <data key="startline">5316</data>
   <data key="startoffset">153871</data>
   <data key="enterFunction">firm_close</data>
  </edge>
  <node id="N2331"/>
  <edge source="N2339" target="N2331">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">6948</data>
   <data key="startoffset">195848</data>
   <data key="returnFrom">firm_get_dtr_rts</data>
  </edge>
  <node id="N1331"/>
  <edge source="N2331" target="N1331">
   <data key="startline">5713</data>
   <data key="startoffset">163503</data>
  </edge>
  <node id="N1333"/>
  <edge source="N1331" target="N1333">
   <data key="sourcecode">[((__CPAchecker_TMP_2 &amp; 1) == 0) == 0]</data>
   <data key="startline">5715</data>
   <data key="startoffset">163537</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1336"/>
  <edge source="N1331" target="N1336">
   <data key="sourcecode">[!(((__CPAchecker_TMP_2 &amp; 1) == 0) == 0)]</data>
   <data key="startline">5715</data>
   <data key="startoffset">163537</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1338"/>
  <edge source="N1336" target="N1338">
   <data key="sourcecode">[((__CPAchecker_TMP_3 &amp; 2) == 0) == 0]</data>
   <data key="startline">5720</data>
   <data key="startoffset">163622</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1341"/>
  <edge source="N1336" target="N1341">
   <data key="sourcecode">[!(((__CPAchecker_TMP_3 &amp; 2) == 0) == 0)]</data>
   <data key="startline">5720</data>
   <data key="startoffset">163622</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1306"/>
  <edge source="N1341" target="N1306">
   <data key="sourcecode">return ((int )modem_signals);</data>
   <data key="startline">5725</data>
   <data key="startoffset">163703</data>
   <data key="returnFrom">whiteheat_tiocmget</data>
  </edge>
  <edge source="N1306" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7816</data>
   <data key="startoffset">221924</data>
  </edge>
  <edge source="N1338" target="N1341">
   <data key="sourcecode">modem_signals = modem_signals | 4U;</data>
   <data key="startline">5721</data>
   <data key="startoffset">163649</data>
  </edge>
  <edge source="N1333" target="N1336">
   <data key="sourcecode">modem_signals = modem_signals | 2U;</data>
   <data key="startline">5716</data>
   <data key="startoffset">163564</data>
  </edge>
  <node id="N2320"/>
  <edge source="N2329" target="N2320">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">6936</data>
   <data key="startoffset">195497</data>
   <data key="returnFrom">firm_purge</data>
  </edge>
  <node id="N943"/>
  <edge source="N2320" target="N943">
   <data key="startline">5229</data>
   <data key="startoffset">151829</data>
  </edge>
  <node id="N945"/>
  <edge source="N943" target="N945">
   <data key="sourcecode">[(retval == 0) == 0]</data>
   <data key="startline">5231</data>
   <data key="startoffset">151876</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N946"/>
  <edge source="N943" target="N946">
   <data key="sourcecode">[!((retval == 0) == 0)]</data>
   <data key="startline">5231</data>
   <data key="startoffset">151876</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N951"/>
  <edge source="N946" target="N951">
   <data key="sourcecode">[(tty == 0) == 0]</data>
   <data key="startline">5240</data>
   <data key="startoffset">151994</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N953"/>
  <edge source="N946" target="N953">
   <data key="sourcecode">[!((tty == 0) == 0)]</data>
   <data key="startline">5240</data>
   <data key="startoffset">151994</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N955"/>
  <edge source="N953" target="N955">
   <data key="sourcecode">usb_clear_halt((port-&gt;serial)-&gt;dev, (int )(port-&gt;read_urb)-&gt;pipe);</data>
   <data key="startline">5248</data>
   <data key="startoffset">152077</data>
  </edge>
  <node id="N957"/>
  <edge source="N955" target="N957">
   <data key="sourcecode">usb_clear_halt((port-&gt;serial)-&gt;dev, (int )(port-&gt;write_urb)-&gt;pipe);</data>
   <data key="startline">5249</data>
   <data key="startoffset">152166</data>
  </edge>
  <node id="N2399"/>
  <edge source="N957" target="N2399">
   <data key="sourcecode">retval = start_port_read(port);</data>
   <data key="startline">5250</data>
   <data key="startoffset">152209</data>
   <data key="enterFunction">start_port_read</data>
  </edge>
  <node id="N2401"/>
  <edge source="N2399" target="N2401">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">7030</data>
   <data key="startoffset">197935</data>
  </edge>
  <node id="N2402"/>
  <edge source="N2401" target="N2402">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">7031</data>
   <data key="startoffset">197970</data>
  </edge>
  <node id="N2403"/>
  <edge source="N2402" target="N2403">
   <data key="sourcecode">struct whiteheat_urb_wrap *wrap ;</data>
   <data key="startline">7032</data>
   <data key="startoffset">197988</data>
  </edge>
  <node id="N2404"/>
  <edge source="N2403" target="N2404">
   <data key="sourcecode">struct urb *urb ;</data>
   <data key="startline">7033</data>
   <data key="startoffset">198024</data>
  </edge>
  <node id="N2405"/>
  <edge source="N2404" target="N2405">
   <data key="sourcecode">int retval ;</data>
   <data key="startline">7034</data>
   <data key="startoffset">198044</data>
  </edge>
  <node id="N2406"/>
  <edge source="N2405" target="N2406">
   <data key="sourcecode">unsigned long flags ;</data>
   <data key="startline">7035</data>
   <data key="startoffset">198059</data>
  </edge>
  <node id="N2407"/>
  <edge source="N2406" target="N2407">
   <data key="sourcecode">struct list_head *tmp___8 ;</data>
   <data key="startline">7036</data>
   <data key="startoffset">198083</data>
  </edge>
  <node id="N2408"/>
  <edge source="N2407" target="N2408">
   <data key="sourcecode">struct list_head *tmp2 ;</data>
   <data key="startline">7037</data>
   <data key="startoffset">198113</data>
  </edge>
  <node id="N2409"/>
  <edge source="N2408" target="N2409">
   <data key="sourcecode">raw_spinlock_t *tmp___9 ;</data>
   <data key="startline">7038</data>
   <data key="startoffset">198140</data>
  </edge>
  <node id="N2410"/>
  <edge source="N2409" target="N2410">
   <data key="sourcecode">struct list_head const *__mptr ;</data>
   <data key="startline">7039</data>
   <data key="startoffset">198168</data>
  </edge>
  <node id="N2411"/>
  <edge source="N2410" target="N2411">
   <data key="sourcecode">raw_spinlock_t *tmp___10 ;</data>
   <data key="startline">7040</data>
   <data key="startoffset">198203</data>
  </edge>
  <node id="N2412"/>
  <edge source="N2411" target="N2412">
   <data key="sourcecode">struct list_head const *__mptr___0 ;</data>
   <data key="startline">7041</data>
   <data key="startoffset">198232</data>
  </edge>
  <node id="N2413"/>
  <edge source="N2412" target="N2413">
   <data key="sourcecode">raw_spinlock_t *tmp___11 ;</data>
   <data key="startline">7042</data>
   <data key="startoffset">198271</data>
  </edge>
  <node id="N2414"/>
  <edge source="N2413" target="N2414">
   <data key="sourcecode">raw_spinlock_t *tmp___12 ;</data>
   <data key="startline">7043</data>
   <data key="startoffset">198300</data>
  </edge>
  <edge source="N2414" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">7047</data>
   <data key="startoffset">198348</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N2096"/>
  <edge source="N951" target="N2096">
   <data key="sourcecode">firm_setup_port(tty);</data>
   <data key="startline">5242</data>
   <data key="startoffset">152011</data>
   <data key="enterFunction">firm_setup_port</data>
  </edge>
  <node id="N2098"/>
  <edge source="N2096" target="N2098">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">6672</data>
   <data key="startoffset">188103</data>
  </edge>
  <node id="N2099"/>
  <edge source="N2098" target="N2099">
   <data key="sourcecode">struct whiteheat_port_settings port_settings ;</data>
   <data key="startline">6673</data>
   <data key="startoffset">188136</data>
  </edge>
  <node id="N2100"/>
  <edge source="N2099" target="N2100">
   <data key="sourcecode">unsigned int cflag ;</data>
   <data key="startline">6674</data>
   <data key="startoffset">188185</data>
  </edge>
  <node id="N2101"/>
  <edge source="N2100" target="N2101">
   <data key="sourcecode">char const *tmp___7 ;</data>
   <data key="startline">6675</data>
   <data key="startoffset">188208</data>
  </edge>
  <node id="N2102"/>
  <edge source="N2101" target="N2102">
   <data key="sourcecode">char const *tmp___8 ;</data>
   <data key="startline">6676</data>
   <data key="startoffset">188232</data>
  </edge>
  <node id="N2103"/>
  <edge source="N2102" target="N2103">
   <data key="sourcecode">char const *tmp___9 ;</data>
   <data key="startline">6677</data>
   <data key="startoffset">188256</data>
  </edge>
  <node id="N2104"/>
  <edge source="N2103" target="N2104">
   <data key="sourcecode">char const *tmp___10 ;</data>
   <data key="startline">6678</data>
   <data key="startoffset">188280</data>
  </edge>
  <node id="N2106"/>
  <edge source="N2104" target="N2106">
   <data key="sourcecode">port = (struct usb_serial_port *)tty-&gt;driver_data;</data>
   <data key="startline">6681</data>
   <data key="startoffset">188310</data>
  </edge>
  <node id="N2107"/>
  <edge source="N2106" target="N2107">
   <data key="sourcecode">cflag = (tty-&gt;termios)-&gt;c_cflag;</data>
   <data key="startline">6682</data>
   <data key="startoffset">188372</data>
  </edge>
  <node id="N2109"/>
  <edge source="N2107" target="N2109">
   <data key="sourcecode">port_settings.port = (__u8 )((int )port-&gt;number + 1);</data>
   <data key="startline">6683</data>
   <data key="startoffset">188398</data>
  </edge>
  <node id="N2111"/>
  <edge source="N2109" target="N2111">
   <data key="sourcecode">[((int)(cflag &amp; 48U)) == 0]</data>
   <data key="startline">6684</data>
   <data key="startoffset">188481</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2112"/>
  <edge source="N2109" target="N2112">
   <data key="sourcecode">[!(((int)(cflag &amp; 48U)) == 0)]</data>
   <data key="startline">6684</data>
   <data key="startoffset">188481</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2115"/>
  <edge source="N2112" target="N2115">
   <data key="sourcecode">[((int)(cflag &amp; 48U)) == 16]</data>
   <data key="startline">6687</data>
   <data key="startoffset">188525</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2116"/>
  <edge source="N2112" target="N2116">
   <data key="sourcecode">[!(((int)(cflag &amp; 48U)) == 16)]</data>
   <data key="startline">6687</data>
   <data key="startoffset">188525</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2119"/>
  <edge source="N2116" target="N2119">
   <data key="sourcecode">[((int)(cflag &amp; 48U)) == 32]</data>
   <data key="startline">6690</data>
   <data key="startoffset">188587</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2120"/>
  <edge source="N2116" target="N2120">
   <data key="sourcecode">[!(((int)(cflag &amp; 48U)) == 32)]</data>
   <data key="startline">6690</data>
   <data key="startoffset">188587</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2140">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">firm_setup_port</data>
  </node>
  <edge source="N2120" target="N2140">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.bits = (__u8 )8;</data>
   <data key="startline">6705</data>
   <data key="startoffset">188962</data>
  </edge>
  <node id="N2149"/>
  <edge source="N2140" target="N2149">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6714</data>
   <data key="startoffset">189083</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2151"/>
  <edge source="N2140" target="N2151">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6714</data>
   <data key="startoffset">189083</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2157"/>
  <edge source="N2151" target="N2157">
   <data key="sourcecode">[((cflag &amp; 256U) == 0) == 0]</data>
   <data key="startline">6727</data>
   <data key="startoffset">189507</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2158"/>
  <edge source="N2151" target="N2158">
   <data key="sourcecode">[!(((cflag &amp; 256U) == 0) == 0)]</data>
   <data key="startline">6727</data>
   <data key="startoffset">189507</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2172">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">firm_setup_port</data>
  </node>
  <edge source="N2158" target="N2172">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.parity = (__u8 )'n';</data>
   <data key="startline">6741</data>
   <data key="startoffset">189863</data>
  </edge>
  <node id="N2178"/>
  <edge source="N2172" target="N2178">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6746</data>
   <data key="startoffset">189931</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2180"/>
  <edge source="N2172" target="N2180">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6746</data>
   <data key="startoffset">189931</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2186"/>
  <edge source="N2180" target="N2186">
   <data key="sourcecode">[((cflag &amp; 64U) == 0) == 0]</data>
   <data key="startline">6759</data>
   <data key="startoffset">190362</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2187"/>
  <edge source="N2180" target="N2187">
   <data key="sourcecode">[!(((cflag &amp; 64U) == 0) == 0)]</data>
   <data key="startline">6759</data>
   <data key="startoffset">190362</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2189">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">firm_setup_port</data>
  </node>
  <edge source="N2187" target="N2189">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.stop = (__u8 )1;</data>
   <data key="startline">6762</data>
   <data key="startoffset">190427</data>
  </edge>
  <node id="N2195"/>
  <edge source="N2189" target="N2195">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6767</data>
   <data key="startoffset">190514</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2197"/>
  <edge source="N2189" target="N2197">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6767</data>
   <data key="startoffset">190514</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2203"/>
  <edge source="N2197" target="N2203">
   <data key="sourcecode">[((cflag &amp; 2147483648U) == 0) == 0]</data>
   <data key="startline">6780</data>
   <data key="startoffset">190946</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2204"/>
  <edge source="N2197" target="N2204">
   <data key="sourcecode">[!(((cflag &amp; 2147483648U) == 0) == 0)]</data>
   <data key="startline">6780</data>
   <data key="startoffset">190946</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2206">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">firm_setup_port</data>
  </node>
  <edge source="N2204" target="N2206">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.hflow = (__u8 )0;</data>
   <data key="startline">6783</data>
   <data key="startoffset">191022</data>
  </edge>
  <node id="N2212"/>
  <edge source="N2206" target="N2212">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6788</data>
   <data key="startoffset">191110</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2234"/>
  <edge source="N2206" target="N2234">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6788</data>
   <data key="startoffset">191110</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2240"/>
  <edge source="N2234" target="N2240">
   <data key="sourcecode">[(((tty-&gt;termios-&gt;c_iflag) &amp; 4096U) == 0) == 0]</data>
   <data key="startline">6821</data>
   <data key="startoffset">192032</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2241"/>
  <edge source="N2234" target="N2241">
   <data key="sourcecode">[!((((tty-&gt;termios-&gt;c_iflag) &amp; 4096U) == 0) == 0)]</data>
   <data key="startline">6821</data>
   <data key="startoffset">192032</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2243">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">firm_setup_port</data>
  </node>
  <edge source="N2241" target="N2243">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.sflow = (__u8 )'n';</data>
   <data key="startline">6824</data>
   <data key="startoffset">192119</data>
  </edge>
  <node id="N2249"/>
  <edge source="N2243" target="N2249">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6829</data>
   <data key="startoffset">192209</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2251"/>
  <edge source="N2243" target="N2251">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6829</data>
   <data key="startoffset">192209</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2256"/>
  <edge source="N2251" target="N2256">
   <data key="sourcecode">port_settings.xon = (tty-&gt;termios)-&gt;c_cc[8];</data>
   <data key="startline">6842</data>
   <data key="startoffset">192669</data>
  </edge>
  <node id="N2257">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">firm_setup_port</data>
  </node>
  <edge source="N2256" target="N2257">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.xoff = (tty-&gt;termios)-&gt;c_cc[9];</data>
   <data key="startline">6843</data>
   <data key="startoffset">192717</data>
  </edge>
  <node id="N2263"/>
  <edge source="N2257" target="N2263">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6847</data>
   <data key="startoffset">192794</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2265"/>
  <edge source="N2257" target="N2265">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6847</data>
   <data key="startoffset">192794</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2270">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">firm_setup_port</data>
  </node>
  <edge source="N2265" target="N2270">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.baud = tty_get_baud_rate(tty);</data>
   <data key="startline">6861</data>
   <data key="startoffset">193257</data>
  </edge>
  <node id="N2276"/>
  <edge source="N2270" target="N2276">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6866</data>
   <data key="startoffset">193358</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2278"/>
  <edge source="N2270" target="N2278">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6866</data>
   <data key="startoffset">193358</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2283"/>
  <edge source="N2278" target="N2283">
   <data key="sourcecode">tty_encode_baud_rate(tty, port_settings.baud, port_settings.baud);</data>
   <data key="startline">6880</data>
   <data key="startoffset">193804</data>
  </edge>
  <node id="N2284"/>
  <edge source="N2283" target="N2284">
   <data key="sourcecode">port_settings.lloop = (__u8 )0;</data>
   <data key="startline">6881</data>
   <data key="startoffset">193852</data>
  </edge>
  <edge source="N2284" target="N1899">
   <data key="sourcecode">firm_send_command(port, (__u8 )3, (__u8 *)(&amp; port_settings), (__u8 )sizeof(port_settings));</data>
   <data key="startline">6882</data>
   <data key="startoffset">193886</data>
   <data key="enterFunction">firm_send_command</data>
  </edge>
  <edge source="N2276" target="N2278">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - baud rate = %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "firm_setup_port", port_settings.baud);</data>
   <data key="startline">6869</data>
   <data key="startoffset">193634</data>
  </edge>
  <edge source="N2263" target="N2265">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - XON = %2x, XOFF = %2x\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "firm_setup_port", (int )port_settings.xon, (int )port_settings.xoff);</data>
   <data key="startline">6850</data>
   <data key="startoffset">193127</data>
  </edge>
  <edge source="N2249" target="N2251">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - software flow control = %c\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "firm_setup_port", (int )port_settings.sflow);</data>
   <data key="startline">6832</data>
   <data key="startoffset">192497</data>
  </edge>
  <edge source="N2240" target="N2243">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.sflow = (__u8 )'b';</data>
   <data key="startline">6822</data>
   <data key="startoffset">192070</data>
  </edge>
  <node id="N2215"/>
  <edge source="N2212" target="N2215">
   <data key="sourcecode">[((((int)(port_settings.hflow)) &amp; 2) == 0) == 0]</data>
   <data key="startline">6789</data>
   <data key="startoffset">191157</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2216"/>
  <edge source="N2212" target="N2216">
   <data key="sourcecode">[!(((((int)(port_settings.hflow)) &amp; 2) == 0) == 0)]</data>
   <data key="startline">6789</data>
   <data key="startoffset">191157</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2218"/>
  <edge source="N2216" target="N2218">
   <data key="sourcecode">tmp___7 = "";</data>
   <data key="startline">6792</data>
   <data key="startoffset">191210</data>
  </edge>
  <node id="N2220"/>
  <edge source="N2218" target="N2220">
   <data key="sourcecode">[((((int)(port_settings.hflow)) &amp; 16) == 0) == 0]</data>
   <data key="startline">6794</data>
   <data key="startoffset">191242</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2221"/>
  <edge source="N2218" target="N2221">
   <data key="sourcecode">[!(((((int)(port_settings.hflow)) &amp; 16) == 0) == 0)]</data>
   <data key="startline">6794</data>
   <data key="startoffset">191242</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2223"/>
  <edge source="N2221" target="N2223">
   <data key="sourcecode">tmp___8 = "";</data>
   <data key="startline">6797</data>
   <data key="startoffset">191334</data>
  </edge>
  <node id="N2225"/>
  <edge source="N2223" target="N2225">
   <data key="sourcecode">[((((int)(port_settings.hflow)) &amp; 128) == 0) == 0]</data>
   <data key="startline">6799</data>
   <data key="startoffset">191356</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2226"/>
  <edge source="N2223" target="N2226">
   <data key="sourcecode">[!(((((int)(port_settings.hflow)) &amp; 128) == 0) == 0)]</data>
   <data key="startline">6799</data>
   <data key="startoffset">191356</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2228"/>
  <edge source="N2226" target="N2228">
   <data key="sourcecode">tmp___9 = "";</data>
   <data key="startline">6802</data>
   <data key="startoffset">191439</data>
  </edge>
  <node id="N2230"/>
  <edge source="N2228" target="N2230">
   <data key="sourcecode">[((((int)(port_settings.hflow)) &amp; 8) == 0) == 0]</data>
   <data key="startline">6804</data>
   <data key="startoffset">191477</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2231"/>
  <edge source="N2228" target="N2231">
   <data key="sourcecode">[!(((((int)(port_settings.hflow)) &amp; 8) == 0) == 0)]</data>
   <data key="startline">6804</data>
   <data key="startoffset">191477</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2233"/>
  <edge source="N2231" target="N2233">
   <data key="sourcecode">tmp___10 = "";</data>
   <data key="startline">6807</data>
   <data key="startoffset">191564</data>
  </edge>
  <edge source="N2233" target="N2234">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - hardware flow control = %s %s %s %s\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "firm_setup_port", tmp___10, tmp___9, tmp___8, tmp___7);</data>
   <data key="startline">6810</data>
   <data key="startoffset">191597</data>
  </edge>
  <edge source="N2230" target="N2233">
   <data key="sourcecode">tmp___10 = "CTS";</data>
   <data key="startline">6805</data>
   <data key="startoffset">191512</data>
  </edge>
  <edge source="N2225" target="N2228">
   <data key="sourcecode">tmp___9 = "RTS";</data>
   <data key="startline">6800</data>
   <data key="startoffset">191399</data>
  </edge>
  <edge source="N2220" target="N2223">
   <data key="sourcecode">tmp___8 = "DSR";</data>
   <data key="startline">6795</data>
   <data key="startoffset">191284</data>
  </edge>
  <edge source="N2215" target="N2218">
   <data key="sourcecode">tmp___7 = "DTR";</data>
   <data key="startline">6790</data>
   <data key="startoffset">191170</data>
  </edge>
  <edge source="N2203" target="N2206">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.hflow = (__u8 )136;</data>
   <data key="startline">6781</data>
   <data key="startoffset">190973</data>
  </edge>
  <edge source="N2195" target="N2197">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - stop bits = %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "firm_setup_port", (int )port_settings.stop);</data>
   <data key="startline">6770</data>
   <data key="startoffset">190815</data>
  </edge>
  <edge source="N2186" target="N2189">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.stop = (__u8 )2;</data>
   <data key="startline">6760</data>
   <data key="startoffset">190409</data>
  </edge>
  <edge source="N2178" target="N2180">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - parity = %c\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "firm_setup_port", (int )port_settings.parity);</data>
   <data key="startline">6749</data>
   <data key="startoffset">190204</data>
  </edge>
  <node id="N2160"/>
  <edge source="N2157" target="N2160">
   <data key="sourcecode">[((cflag &amp; 1073741824U) == 0) == 0]</data>
   <data key="startline">6728</data>
   <data key="startoffset">189531</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2161"/>
  <edge source="N2157" target="N2161">
   <data key="sourcecode">[!(((cflag &amp; 1073741824U) == 0) == 0)]</data>
   <data key="startline">6728</data>
   <data key="startoffset">189531</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2168"/>
  <edge source="N2161" target="N2168">
   <data key="sourcecode">[((cflag &amp; 512U) == 0) == 0]</data>
   <data key="startline">6735</data>
   <data key="startoffset">189716</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2169"/>
  <edge source="N2161" target="N2169">
   <data key="sourcecode">[!(((cflag &amp; 512U) == 0) == 0)]</data>
   <data key="startline">6735</data>
   <data key="startoffset">189716</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2169" target="N2172">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.parity = (__u8 )'e';</data>
   <data key="startline">6738</data>
   <data key="startoffset">189814</data>
  </edge>
  <edge source="N2168" target="N2172">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.parity = (__u8 )'o';</data>
   <data key="startline">6736</data>
   <data key="startoffset">189760</data>
  </edge>
  <node id="N2163"/>
  <edge source="N2160" target="N2163">
   <data key="sourcecode">[((cflag &amp; 512U) == 0) == 0]</data>
   <data key="startline">6729</data>
   <data key="startoffset">189572</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2164"/>
  <edge source="N2160" target="N2164">
   <data key="sourcecode">[!(((cflag &amp; 512U) == 0) == 0)]</data>
   <data key="startline">6729</data>
   <data key="startoffset">189572</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2164" target="N2172">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.parity = (__u8 )'0';</data>
   <data key="startline">6732</data>
   <data key="startoffset">189646</data>
  </edge>
  <edge source="N2163" target="N2172">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.parity = (__u8 )'1';</data>
   <data key="startline">6730</data>
   <data key="startoffset">189611</data>
  </edge>
  <edge source="N2149" target="N2151">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - data bits = %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "firm_setup_port", (int )port_settings.bits);</data>
   <data key="startline">6716</data>
   <data key="startoffset">189113</data>
  </edge>
  <edge source="N2119" target="N2140">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.bits = (__u8 )7;</data>
   <data key="startline">6702</data>
   <data key="startoffset">188850</data>
  </edge>
  <edge source="N2115" target="N2140">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.bits = (__u8 )6;</data>
   <data key="startline">6699</data>
   <data key="startoffset">188773</data>
  </edge>
  <edge source="N2111" target="N2140">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">port_settings.bits = (__u8 )5;</data>
   <data key="startline">6696</data>
   <data key="startoffset">188696</data>
  </edge>
  <edge source="N945" target="N2086">
   <data key="sourcecode">firm_close(port);</data>
   <data key="startline">5233</data>
   <data key="startoffset">151896</data>
   <data key="enterFunction">firm_close</data>
  </edge>
  <node id="N2309"/>
  <edge source="N2318" target="N2309">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">6923</data>
   <data key="startoffset">195125</data>
   <data key="returnFrom">firm_set_break</data>
  </edge>
  <node id="N1463"/>
  <edge source="N2309" target="N1463">
   <data key="startline">5860</data>
   <data key="startoffset">167065</data>
  </edge>
  <node id="N1457"/>
  <edge source="N1463" target="N1457">
   <data key="sourcecode">return;</data>
   <data key="startline">5862</data>
   <data key="startoffset">167113</data>
   <data key="returnFrom">whiteheat_break_ctl</data>
  </edge>
  <edge source="N1457" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7811</data>
   <data key="startoffset">221788</data>
  </edge>
  <node id="N2298"/>
  <edge source="N2307" target="N2298">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">6910</data>
   <data key="startoffset">194728</data>
   <data key="returnFrom">firm_set_dtr</data>
  </edge>
  <node id="N1387"/>
  <edge source="N2298" target="N1387">
   <data key="startline">5776</data>
   <data key="startoffset">164862</data>
  </edge>
  <node id="N2288"/>
  <edge source="N1387" target="N2288">
   <data key="sourcecode">firm_set_rts(port, (__u8 )((int )info-&gt;mcr &amp; 2));</data>
   <data key="startline">5777</data>
   <data key="startoffset">164914</data>
   <data key="enterFunction">firm_set_rts</data>
  </edge>
  <node id="N2290"/>
  <edge source="N2288" target="N2290">
   <data key="sourcecode">struct whiteheat_set_rdb rts_command ;</data>
   <data key="startline">6888</data>
   <data key="startoffset">194066</data>
  </edge>
  <node id="N2291"/>
  <edge source="N2290" target="N2291">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">6889</data>
   <data key="startoffset">194107</data>
  </edge>
  <node id="N2294"/>
  <edge source="N2291" target="N2294">
   <data key="sourcecode">rts_command.port = (__u8 )(((int )port-&gt;number - (int )(port-&gt;serial)-&gt;minor) + 1);</data>
   <data key="startline">6893</data>
   <data key="startoffset">194160</data>
  </edge>
  <node id="N2295"/>
  <edge source="N2294" target="N2295">
   <data key="sourcecode">rts_command.state = onoff;</data>
   <data key="startline">6894</data>
   <data key="startoffset">194218</data>
  </edge>
  <edge source="N2295" target="N1899">
   <data key="sourcecode">tmp___7 = firm_send_command(port, (__u8 )4, (__u8 *)(&amp; rts_command), (__u8 )sizeof(rts_command));</data>
   <data key="startline">6895</data>
   <data key="startoffset">194247</data>
   <data key="enterFunction">firm_send_command</data>
  </edge>
  <node id="N2287"/>
  <edge source="N2296" target="N2287">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">6897</data>
   <data key="startoffset">194351</data>
   <data key="returnFrom">firm_set_rts</data>
  </edge>
  <node id="N1389"/>
  <edge source="N2287" target="N1389">
   <data key="startline">5777</data>
   <data key="startoffset">164914</data>
  </edge>
  <node id="N1343"/>
  <edge source="N1389" target="N1343">
   <data key="sourcecode">return (0);</data>
   <data key="startline">5779</data>
   <data key="startoffset">164978</data>
   <data key="returnFrom">whiteheat_tiocmset</data>
  </edge>
  <edge source="N1343" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7821</data>
   <data key="startoffset">222028</data>
  </edge>
  <node id="N2095"/>
  <edge source="N2285" target="N2095">
   <data key="sourcecode">return;</data>
   <data key="startline">6884</data>
   <data key="startoffset">193984</data>
   <data key="returnFrom">firm_setup_port</data>
  </edge>
  <node id="N1455"/>
  <edge source="N2095" target="N1455">
   <data key="startline">5849</data>
   <data key="startoffset">166853</data>
  </edge>
  <edge source="N2095" target="N953">
   <data key="startline">5242</data>
   <data key="startoffset">152011</data>
  </edge>
  <node id="N1452"/>
  <edge source="N1455" target="N1452">
   <data key="sourcecode">return;</data>
   <data key="startline">5851</data>
   <data key="startoffset">166881</data>
   <data key="returnFrom">whiteheat_set_termios</data>
  </edge>
  <edge source="N1452" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7806</data>
   <data key="startoffset">221636</data>
  </edge>
  <node id="N2085"/>
  <edge source="N2093" target="N2085">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">6668</data>
   <data key="startoffset">188034</data>
   <data key="returnFrom">firm_close</data>
  </edge>
  <node id="N1007"/>
  <edge source="N2085" target="N1007">
   <data key="startline">5316</data>
   <data key="startoffset">153871</data>
  </edge>
  <node id="N947"/>
  <edge source="N2085" target="N947">
   <data key="startline">5233</data>
   <data key="startoffset">151896</data>
  </edge>
  <node id="N963"/>
  <edge source="N2085" target="N963">
   <data key="startline">5256</data>
   <data key="startoffset">152398</data>
  </edge>
  <edge source="N963" target="N2381">
   <data key="sourcecode">stop_command_port(port-&gt;serial);</data>
   <data key="startline">5257</data>
   <data key="startoffset">152420</data>
   <data key="enterFunction">stop_command_port</data>
  </edge>
  <edge source="N947" target="N2381">
   <data key="sourcecode">stop_command_port(port-&gt;serial);</data>
   <data key="startline">5234</data>
   <data key="startoffset">151918</data>
   <data key="enterFunction">stop_command_port</data>
  </edge>
  <node id="N1008"/>
  <edge source="N1007" target="N1008">
   <data key="sourcecode">mutex_lock_nested(&amp; info-&gt;deathwarrant, 0U);</data>
   <data key="startline">5317</data>
   <data key="startoffset">153891</data>
  </edge>
  <edge source="N1008" target="N98">
   <data key="sourcecode">spin_lock_irq(&amp; info-&gt;lock);</data>
   <data key="startline">5318</data>
   <data key="startoffset">153952</data>
   <data key="enterFunction">spin_lock_irq</data>
  </edge>
  <node id="N2075"/>
  <edge source="N2083" target="N2075">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">6656</data>
   <data key="startoffset">187686</data>
   <data key="returnFrom">firm_open</data>
  </edge>
  <node id="N937"/>
  <edge source="N2075" target="N937">
   <data key="startline">5218</data>
   <data key="startoffset">151697</data>
  </edge>
  <node id="N939"/>
  <edge source="N937" target="N939">
   <data key="sourcecode">[(retval == 0) == 0]</data>
   <data key="startline">5220</data>
   <data key="startoffset">151733</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N940"/>
  <edge source="N937" target="N940">
   <data key="sourcecode">[!((retval == 0) == 0)]</data>
   <data key="startline">5220</data>
   <data key="startoffset">151733</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2321"/>
  <edge source="N940" target="N2321">
   <data key="sourcecode">retval = firm_purge(port, (__u8 )3);</data>
   <data key="startline">5229</data>
   <data key="startoffset">151855</data>
   <data key="enterFunction">firm_purge</data>
  </edge>
  <node id="N2323"/>
  <edge source="N2321" target="N2323">
   <data key="sourcecode">struct whiteheat_purge purge_command ;</data>
   <data key="startline">6927</data>
   <data key="startoffset">195206</data>
  </edge>
  <node id="N2324"/>
  <edge source="N2323" target="N2324">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">6928</data>
   <data key="startoffset">195247</data>
  </edge>
  <node id="N2327"/>
  <edge source="N2324" target="N2327">
   <data key="sourcecode">purge_command.port = (__u8 )(((int )port-&gt;number - (int )(port-&gt;serial)-&gt;minor) + 1);</data>
   <data key="startline">6932</data>
   <data key="startoffset">195302</data>
  </edge>
  <node id="N2328"/>
  <edge source="N2327" target="N2328">
   <data key="sourcecode">purge_command.what = rxtx;</data>
   <data key="startline">6933</data>
   <data key="startoffset">195360</data>
  </edge>
  <edge source="N2328" target="N1899">
   <data key="sourcecode">tmp___7 = firm_send_command(port, (__u8 )9, (__u8 *)(&amp; purge_command), (__u8 )sizeof(purge_command));</data>
   <data key="startline">6934</data>
   <data key="startoffset">195460</data>
   <data key="enterFunction">firm_send_command</data>
  </edge>
  <edge source="N939" target="N2381">
   <data key="sourcecode">stop_command_port(port-&gt;serial);</data>
   <data key="startline">5222</data>
   <data key="startoffset">151771</data>
   <data key="enterFunction">stop_command_port</data>
  </edge>
  <edge source="N2066" target="N2069">
   <data key="sourcecode">__ret___1 = __memcpy((void *)(&amp; info-&gt;mcr), (void const *)(command_info-&gt;result_buffer),
                             __len___0);</data>
   <data key="startline">6625</data>
   <data key="startoffset">186994</data>
  </edge>
  <node id="N1931"/>
  <edge source="N1930" target="N1931">
   <data key="sourcecode">command_info = (struct whiteheat_command_private *)tmp___7;</data>
   <data key="startline">6464</data>
   <data key="startoffset">182605</data>
  </edge>
  <node id="N1932"/>
  <edge source="N1931" target="N1932">
   <data key="sourcecode">mutex_lock_nested(&amp; command_info-&gt;mutex, 0U);</data>
   <data key="startline">6465</data>
   <data key="startoffset">182667</data>
  </edge>
  <node id="N1933"/>
  <edge source="N1932" target="N1933">
   <data key="sourcecode">command_info-&gt;command_finished = (__u8 )0;</data>
   <data key="startline">6466</data>
   <data key="startoffset">182715</data>
  </edge>
  <node id="N1935"/>
  <edge source="N1933" target="N1935">
   <data key="sourcecode">transfer_buffer = (__u8 *)(command_port-&gt;write_urb)-&gt;transfer_buffer;</data>
   <data key="startline">6467</data>
   <data key="startoffset">182760</data>
  </edge>
  <node id="N1936"/>
  <edge source="N1935" target="N1936">
   <data key="sourcecode">*(transfer_buffer + 0) = command;</data>
   <data key="startline">6468</data>
   <data key="startoffset">182857</data>
  </edge>
  <node id="N1937"/>
  <edge source="N1936" target="N1937">
   <data key="sourcecode">__len = (size_t )datasize;</data>
   <data key="startline">6469</data>
   <data key="startoffset">182868</data>
  </edge>
  <node id="N1938"/>
  <edge source="N1937" target="N1938">
   <data key="sourcecode">__ret = __builtin_memcpy((void *)(transfer_buffer + 1), (void const *)data, __len);</data>
   <data key="startline">6470</data>
   <data key="startoffset">182922</data>
  </edge>
  <node id="N1939"/>
  <edge source="N1938" target="N1939">
   <data key="sourcecode">(command_port-&gt;write_urb)-&gt;transfer_buffer_length = (u32 )((int )datasize + 1);</data>
   <data key="startline">6471</data>
   <data key="startoffset">183059</data>
  </edge>
  <node id="N1940"/>
  <edge source="N1939" target="N1940">
   <data key="sourcecode">(command_port-&gt;write_urb)-&gt;dev = (port-&gt;serial)-&gt;dev;</data>
   <data key="startline">6472</data>
   <data key="startoffset">183065</data>
  </edge>
  <node id="N1941"/>
  <edge source="N1940" target="N1941">
   <data key="sourcecode">retval = usb_submit_urb(command_port-&gt;write_urb, 16U);</data>
   <data key="startline">6473</data>
   <data key="startoffset">183145</data>
  </edge>
  <node id="N1943">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; !(retval == 0) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N1941" target="N1943">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[(retval == 0) == 0]</data>
   <data key="startline">6475</data>
   <data key="startoffset">183186</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1944"/>
  <edge source="N1941" target="N1944">
   <data key="sourcecode">[!((retval == 0) == 0)]</data>
   <data key="startline">6475</data>
   <data key="startoffset">183186</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1958"/>
  <edge source="N1944" target="N1958">
   <data key="sourcecode">__ret___0 = 500L;</data>
   <data key="startline">6496</data>
   <data key="startoffset">183716</data>
  </edge>
  <node id="N1960">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (retval == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__ret___0 == 500LL) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N1958" target="N1960">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[__CPAchecker_TMP_1 == 0]</data>
   <data key="startline">6497</data>
   <data key="startoffset">183743</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1991"/>
  <edge source="N1958" target="N1991">
   <data key="sourcecode">[!(__CPAchecker_TMP_1 == 0)]</data>
   <data key="startline">6497</data>
   <data key="startoffset">183743</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1996"/>
  <edge source="N1991" target="N1996">
   <data key="sourcecode">t = (int )__ret___0;</data>
   <data key="startline">6543</data>
   <data key="startoffset">184752</data>
  </edge>
  <node id="N1998"/>
  <edge source="N1996" target="N1998">
   <data key="sourcecode">[t == 0]</data>
   <data key="startline">6544</data>
   <data key="startoffset">184781</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2000"/>
  <edge source="N1996" target="N2000">
   <data key="sourcecode">[!(t == 0)]</data>
   <data key="startline">6544</data>
   <data key="startoffset">184781</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2002">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (t == (int) __ret___0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (retval == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N2000" target="N2002">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[__CPAchecker_TMP_3 == 0]</data>
   <data key="startline">6551</data>
   <data key="startoffset">184863</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2003"/>
  <edge source="N2000" target="N2003">
   <data key="sourcecode">[!(__CPAchecker_TMP_3 == 0)]</data>
   <data key="startline">6551</data>
   <data key="startoffset">184863</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2020"/>
  <edge source="N2003" target="N2020">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[__CPAchecker_TMP_4 == 17]</data>
   <data key="startline">6573</data>
   <data key="startoffset">185491</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2021"/>
  <edge source="N2003" target="N2021">
   <data key="sourcecode">[!(__CPAchecker_TMP_4 == 17)]</data>
   <data key="startline">6573</data>
   <data key="startoffset">185491</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2038"/>
  <edge source="N2021" target="N2038">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[__CPAchecker_TMP_5 == 16]</data>
   <data key="startline">6595</data>
   <data key="startoffset">186035</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2021" target="N2069">
   <data key="sourcecode">[!(__CPAchecker_TMP_5 == 16)]</data>
   <data key="startline">6595</data>
   <data key="startoffset">186035</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2046"/>
  <edge source="N2038" target="N2046">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6599</data>
   <data key="startoffset">186141</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2048"/>
  <edge source="N2038" target="N2048">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6599</data>
   <data key="startoffset">186141</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2054"/>
  <edge source="N2048" target="N2054">
   <data key="sourcecode">[((int)command) == 10]</data>
   <data key="startline">6612</data>
   <data key="startoffset">186578</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2048" target="N2069">
   <data key="sourcecode">[!(((int)command) == 10)]</data>
   <data key="startline">6612</data>
   <data key="startoffset">186578</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2054" target="N198">
   <data key="sourcecode">tmp___9 = usb_get_serial_port_data(port);</data>
   <data key="startline">6618</data>
   <data key="startoffset">186684</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <edge source="N2046" target="N2048">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - command completed.\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "firm_send_command");</data>
   <data key="startline">6601</data>
   <data key="startoffset">186175</data>
  </edge>
  <node id="N2028"/>
  <edge source="N2020" target="N2028">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6577</data>
   <data key="startoffset">185557</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2030"/>
  <edge source="N2020" target="N2030">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6577</data>
   <data key="startoffset">185557</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2030" target="N2069">
   <data key="sourcecode">retval = -5;</data>
   <data key="startline">6590</data>
   <data key="startoffset">185994</data>
  </edge>
  <edge source="N2028" target="N2030">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - command failed.\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "firm_send_command");</data>
   <data key="startline">6580</data>
   <data key="startoffset">185840</data>
  </edge>
  <node id="N2010"/>
  <edge source="N2002" target="N2010">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6555</data>
   <data key="startoffset">184968</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2012"/>
  <edge source="N2002" target="N2012">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6555</data>
   <data key="startoffset">184968</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2012" target="N2069">
   <data key="sourcecode">retval = -110;</data>
   <data key="startline">6568</data>
   <data key="startoffset">185408</data>
  </edge>
  <edge source="N2010" target="N2012">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - command timed out.\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "firm_send_command");</data>
   <data key="startline">6558</data>
   <data key="startoffset">185254</data>
  </edge>
  <edge source="N1998" target="N2000">
   <data key="sourcecode">usb_kill_urb(command_port-&gt;write_urb);</data>
   <data key="startline">6546</data>
   <data key="startoffset">184796</data>
  </edge>
  <node id="N16">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">get_current</data>
  </node>
  <edge source="N1960" target="N16">
   <data key="sourcecode">tmp___8 = get_current();</data>
   <data key="startline">6502</data>
   <data key="startoffset">183859</data>
   <data key="enterFunction">get_current</data>
  </edge>
  <node id="N18">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">get_current</data>
  </node>
  <edge source="N16" target="N18">
   <data key="sourcecode">struct task_struct *pfo_ret__ ;</data>
   <data key="startline">3763</data>
   <data key="startoffset">105514</data>
  </edge>
  <node id="N15">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">get_current</data>
  </node>
  <edge source="N18" target="N15">
   <data key="sourcecode">return (pfo_ret__);</data>
   <data key="startline">3828</data>
   <data key="startoffset">106963</data>
   <data key="returnFrom">get_current</data>
  </edge>
  <node id="N1967">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (retval == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__ret___0 == 500LL) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N15" target="N1967">
   <data key="startline">6502</data>
   <data key="startoffset">183849</data>
  </edge>
  <node id="N1968">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (retval == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__ret___0 == 500LL) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N1967" target="N1968">
   <data key="sourcecode">__wait.flags = 0U;</data>
   <data key="startline">6503</data>
   <data key="startoffset">183880</data>
  </edge>
  <node id="N1969">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (retval == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__ret___0 == 500LL) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N1968" target="N1969">
   <data key="sourcecode">__wait.private = (void *)tmp___8;</data>
   <data key="startline">6504</data>
   <data key="startoffset">183905</data>
  </edge>
  <node id="N1970">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (retval == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__ret___0 == 500LL) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N1969" target="N1970">
   <data key="sourcecode">__wait.func = &amp; autoremove_wake_function;</data>
   <data key="startline">6505</data>
   <data key="startoffset">183945</data>
  </edge>
  <node id="N1971">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (retval == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (__ret___0 == 500LL) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N1970" target="N1971">
   <data key="sourcecode">__wait.task_list.next = &amp; __wait.task_list;</data>
   <data key="startline">6506</data>
   <data key="startoffset">183993</data>
  </edge>
  <node id="N1986">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (retval == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL))) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; ((__ret___0 == 500LL) || !(__ret___0 == 0LL))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N1971" target="N1986">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">__wait.task_list.prev = &amp; __wait.task_list;</data>
   <data key="startline">6507</data>
   <data key="startoffset">184043</data>
  </edge>
  <node id="N1977">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (retval == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; !(__ret___0 == 0LL) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N1986" target="N1977">
   <data key="sourcecode">prepare_to_wait(&amp; command_info-&gt;wait_command, &amp; __wait, 2);</data>
   <data key="startline">6513</data>
   <data key="startoffset">184217</data>
  </edge>
  <node id="N1980">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (debug == 0) &amp;&amp; (retval == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; !(__ret___0 == 0LL) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (((datasize == 16U) &amp;&amp; (command == 3U) &amp;&amp; (__len == 16ULL)) || ((datasize == 2U) &amp;&amp; (__len == 2ULL) &amp;&amp; (command == 5U)) || ((datasize == 1U) &amp;&amp; (command == 1U) &amp;&amp; (__len == 1ULL)) || ((datasize == 2U) &amp;&amp; (command == 4U) &amp;&amp; (__len == 2ULL)) || ((datasize == 2U) &amp;&amp; (command == 6U) &amp;&amp; (__len == 2ULL)) || ((command == 10U) &amp;&amp; (datasize == 1U) &amp;&amp; (__len == 1ULL)))</data>
   <data key="invariant.scope">firm_send_command</data>
  </node>
  <edge source="N1977" target="N1980">
   <data key="sourcecode">[!((__CPAchecker_TMP_2 == 0) == 0)]</data>
   <data key="startline">6515</data>
   <data key="startoffset">184251</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1985"/>
  <edge source="N1977" target="N1985">
   <data key="sourcecode">[(__CPAchecker_TMP_2 == 0) == 0]</data>
   <data key="startline">6515</data>
   <data key="startoffset">184251</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N1985" target="N1991">
   <data key="sourcecode">finish_wait(&amp; command_info-&gt;wait_command, &amp; __wait);</data>
   <data key="startline">6533</data>
   <data key="startoffset">184630</data>
  </edge>
  <node id="N1983"/>
  <edge source="N1980" target="N1983">
   <data key="sourcecode">__ret___0 = schedule_timeout(__ret___0);</data>
   <data key="startline">6521</data>
   <data key="startoffset">184382</data>
  </edge>
  <edge source="N1983" target="N1985">
   <data key="sourcecode">[__ret___0 == 0]</data>
   <data key="startline">6523</data>
   <data key="startoffset">184435</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N1983" target="N1986">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(__ret___0 == 0)]</data>
   <data key="startline">6523</data>
   <data key="startoffset">184435</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1950"/>
  <edge source="N1943" target="N1950">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6479</data>
   <data key="startoffset">183256</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N1943" target="N2069">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6479</data>
   <data key="startoffset">183256</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1950" target="N2069">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - submit urb failed\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "firm_send_command");</data>
   <data key="startline">6481</data>
   <data key="startoffset">183325</data>
  </edge>
  <node id="N1855"/>
  <edge source="N1854" target="N1855">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">6362</data>
   <data key="startoffset">180022</data>
  </edge>
  <node id="N1856">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_callback</data>
  </node>
  <edge source="N1855" target="N1856">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">status = urb-&gt;status;</data>
   <data key="startline">6363</data>
   <data key="startoffset">180068</data>
  </edge>
  <node id="N1862"/>
  <edge source="N1856" target="N1862">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6368</data>
   <data key="startoffset">180142</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1865"/>
  <edge source="N1856" target="N1865">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6368</data>
   <data key="startoffset">180142</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1865" target="N93">
   <data key="sourcecode">spin_lock(&amp; info-&gt;lock);</data>
   <data key="startline">6382</data>
   <data key="startoffset">180572</data>
   <data key="enterFunction">spin_lock</data>
  </edge>
  <edge source="N1862" target="N1865">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_write_callback", (int )port-&gt;number);</data>
   <data key="startline">6370</data>
   <data key="startoffset">180172</data>
  </edge>
  <node id="N1785"/>
  <edge source="N1784" target="N1785">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">6267</data>
   <data key="startoffset">177699</data>
  </edge>
  <node id="N1786">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_read_callback</data>
  </node>
  <edge source="N1785" target="N1786">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">status = urb-&gt;status;</data>
   <data key="startline">6268</data>
   <data key="startoffset">177745</data>
  </edge>
  <node id="N1792"/>
  <edge source="N1786" target="N1792">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6273</data>
   <data key="startoffset">177819</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1795"/>
  <edge source="N1786" target="N1795">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6273</data>
   <data key="startoffset">177819</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1795" target="N93">
   <data key="sourcecode">spin_lock(&amp; info-&gt;lock);</data>
   <data key="startline">6287</data>
   <data key="startoffset">178248</data>
   <data key="enterFunction">spin_lock</data>
  </edge>
  <edge source="N1792" target="N1795">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_read_callback", (int )port-&gt;number);</data>
   <data key="startline">6275</data>
   <data key="startoffset">177849</data>
  </edge>
  <node id="N1669"/>
  <edge source="N1668" target="N1669">
   <data key="sourcecode">command_info = (struct whiteheat_command_private *)tmp___7;</data>
   <data key="startline">6115</data>
   <data key="startoffset">173450</data>
  </edge>
  <node id="N1671"/>
  <edge source="N1669" target="N1671">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[command_info == 0]</data>
   <data key="startline">6117</data>
   <data key="startoffset">173471</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1672"/>
  <edge source="N1669" target="N1672">
   <data key="sourcecode">[!(command_info == 0)]</data>
   <data key="startline">6117</data>
   <data key="startoffset">173471</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1687"/>
  <edge source="N1672" target="N1687">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[(status == 0) == 0]</data>
   <data key="startline">6138</data>
   <data key="startoffset">174030</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1688"/>
  <edge source="N1672" target="N1688">
   <data key="sourcecode">[!((status == 0) == 0)]</data>
   <data key="startline">6138</data>
   <data key="startoffset">174030</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1688" target="N209">
   <data key="sourcecode">usb_serial_debug_data(debug, &amp; command_port-&gt;dev, "command_port_read_callback",
                        (int )urb-&gt;actual_length, (unsigned char const *)data);</data>
   <data key="startline">6168</data>
   <data key="startoffset">174783</data>
   <data key="enterFunction">usb_serial_debug_data</data>
  </edge>
  <node id="N1694"/>
  <edge source="N1687" target="N1694">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6142</data>
   <data key="startoffset">174100</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1696"/>
  <edge source="N1687" target="N1696">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6142</data>
   <data key="startoffset">174100</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1702"/>
  <edge source="N1696" target="N1702">
   <data key="sourcecode">[status != -2]</data>
   <data key="startline">6155</data>
   <data key="startoffset">174557</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1704"/>
  <edge source="N1696" target="N1704">
   <data key="sourcecode">[!(status != -2)]</data>
   <data key="startline">6155</data>
   <data key="startoffset">174557</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1705"/>
  <edge source="N1704" target="N1705">
   <data key="sourcecode">__wake_up(&amp; command_info-&gt;wait_command, 3U, 1, (void *)0);</data>
   <data key="startline">6161</data>
   <data key="startoffset">174697</data>
  </edge>
  <edge source="N1705" target="N1640">
   <data key="sourcecode">return;</data>
   <data key="startline">6163</data>
   <data key="startoffset">174722</data>
   <data key="returnFrom">command_port_read_callback</data>
  </edge>
  <edge source="N1702" target="N1704">
   <data key="sourcecode">command_info-&gt;command_finished = (__u8 )17;</data>
   <data key="startline">6156</data>
   <data key="startoffset">174579</data>
  </edge>
  <edge source="N1694" target="N1696">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - nonzero urb status: %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "command_port_read_callback", status);</data>
   <data key="startline">6145</data>
   <data key="startoffset">174390</data>
  </edge>
  <node id="N1678"/>
  <edge source="N1671" target="N1678">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6121</data>
   <data key="startoffset">173547</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1680"/>
  <edge source="N1671" target="N1680">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6121</data>
   <data key="startoffset">173547</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1680" target="N1640">
   <data key="sourcecode">return;</data>
   <data key="startline">6134</data>
   <data key="startoffset">174000</data>
   <data key="returnFrom">command_port_read_callback</data>
  </edge>
  <edge source="N1678" target="N1680">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - command_info is NULL, exiting.\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "command_port_read_callback");</data>
   <data key="startline">6124</data>
   <data key="startoffset">173845</data>
  </edge>
  <node id="N1581">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_unthrottle</data>
  </node>
  <edge source="N1580" target="N1581">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">6004</data>
   <data key="startoffset">170680</data>
  </edge>
  <node id="N1587"/>
  <edge source="N1581" target="N1587">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">6009</data>
   <data key="startoffset">170769</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1590"/>
  <edge source="N1581" target="N1590">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">6009</data>
   <data key="startoffset">170769</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1590" target="N98">
   <data key="sourcecode">spin_lock_irq(&amp; info-&gt;lock);</data>
   <data key="startline">6023</data>
   <data key="startoffset">171197</data>
   <data key="enterFunction">spin_lock_irq</data>
  </edge>
  <edge source="N1587" target="N1590">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_unthrottle", (int )port-&gt;number);</data>
   <data key="startline">6012</data>
   <data key="startoffset">171062</data>
  </edge>
  <node id="N1552">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_throttle</data>
  </node>
  <edge source="N1551" target="N1552">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">5968</data>
   <data key="startoffset">169758</data>
  </edge>
  <node id="N1558"/>
  <edge source="N1552" target="N1558">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5973</data>
   <data key="startoffset">169854</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1561"/>
  <edge source="N1552" target="N1561">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5973</data>
   <data key="startoffset">169854</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1561" target="N98">
   <data key="sourcecode">spin_lock_irq(&amp; info-&gt;lock);</data>
   <data key="startline">5987</data>
   <data key="startoffset">170282</data>
   <data key="enterFunction">spin_lock_irq</data>
  </edge>
  <edge source="N1558" target="N1561">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_throttle", (int )port-&gt;number);</data>
   <data key="startline">5976</data>
   <data key="startoffset">170123</data>
  </edge>
  <node id="N1480"/>
  <edge source="N1479" target="N1480">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">5880</data>
   <data key="startoffset">167548</data>
  </edge>
  <node id="N1481">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_chars_in_buffer</data>
  </node>
  <edge source="N1480" target="N1481">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">chars = 0;</data>
   <data key="startline">5881</data>
   <data key="startoffset">167594</data>
  </edge>
  <node id="N1487"/>
  <edge source="N1481" target="N1487">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5886</data>
   <data key="startoffset">167657</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1490">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_chars_in_buffer</data>
  </node>
  <edge source="N1481" target="N1490">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5886</data>
   <data key="startoffset">167657</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1490" target="N89">
   <data key="sourcecode">tmp___9 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">5907</data>
   <data key="startoffset">168208</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <edge source="N1487" target="N1490">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_chars_in_buffer", (int )port-&gt;number);</data>
   <data key="startline">5888</data>
   <data key="startoffset">167680</data>
  </edge>
  <node id="N1352">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (set &gt;= 0U) &amp;&amp; (set &lt;= 4294967295U) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (clear &gt;= 0U) &amp;&amp; (clear &lt;= 4294967295U) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_tiocmset</data>
  </node>
  <edge source="N1351" target="N1352">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">5737</data>
   <data key="startoffset">164026</data>
  </edge>
  <node id="N1358"/>
  <edge source="N1352" target="N1358">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5742</data>
   <data key="startoffset">164122</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1361"/>
  <edge source="N1352" target="N1361">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5742</data>
   <data key="startoffset">164122</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1367"/>
  <edge source="N1361" target="N1367">
   <data key="sourcecode">[((set &amp; 4U) == 0) == 0]</data>
   <data key="startline">5755</data>
   <data key="startoffset">164542</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1370"/>
  <edge source="N1361" target="N1370">
   <data key="sourcecode">[!(((set &amp; 4U) == 0) == 0)]</data>
   <data key="startline">5755</data>
   <data key="startoffset">164542</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1372"/>
  <edge source="N1370" target="N1372">
   <data key="sourcecode">[((set &amp; 2U) == 0) == 0]</data>
   <data key="startline">5760</data>
   <data key="startoffset">164616</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1375"/>
  <edge source="N1370" target="N1375">
   <data key="sourcecode">[!(((set &amp; 2U) == 0) == 0)]</data>
   <data key="startline">5760</data>
   <data key="startoffset">164616</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1377"/>
  <edge source="N1375" target="N1377">
   <data key="sourcecode">[((clear &amp; 4U) == 0) == 0]</data>
   <data key="startline">5765</data>
   <data key="startoffset">164704</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1380"/>
  <edge source="N1375" target="N1380">
   <data key="sourcecode">[!(((clear &amp; 4U) == 0) == 0)]</data>
   <data key="startline">5765</data>
   <data key="startoffset">164704</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1382"/>
  <edge source="N1380" target="N1382">
   <data key="sourcecode">[((clear &amp; 2U) == 0) == 0]</data>
   <data key="startline">5770</data>
   <data key="startoffset">164779</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1385"/>
  <edge source="N1380" target="N1385">
   <data key="sourcecode">[!(((clear &amp; 2U) == 0) == 0)]</data>
   <data key="startline">5770</data>
   <data key="startoffset">164779</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2299"/>
  <edge source="N1385" target="N2299">
   <data key="sourcecode">firm_set_dtr(port, (__u8 )((int )info-&gt;mcr &amp; 1));</data>
   <data key="startline">5776</data>
   <data key="startoffset">164862</data>
   <data key="enterFunction">firm_set_dtr</data>
  </edge>
  <node id="N2301"/>
  <edge source="N2299" target="N2301">
   <data key="sourcecode">struct whiteheat_set_rdb dtr_command ;</data>
   <data key="startline">6901</data>
   <data key="startoffset">194443</data>
  </edge>
  <node id="N2302"/>
  <edge source="N2301" target="N2302">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">6902</data>
   <data key="startoffset">194484</data>
  </edge>
  <node id="N2305"/>
  <edge source="N2302" target="N2305">
   <data key="sourcecode">dtr_command.port = (__u8 )(((int )port-&gt;number - (int )(port-&gt;serial)-&gt;minor) + 1);</data>
   <data key="startline">6906</data>
   <data key="startoffset">194509</data>
  </edge>
  <node id="N2306"/>
  <edge source="N2305" target="N2306">
   <data key="sourcecode">dtr_command.state = onoff;</data>
   <data key="startline">6907</data>
   <data key="startoffset">194595</data>
  </edge>
  <edge source="N2306" target="N1899">
   <data key="sourcecode">tmp___7 = firm_send_command(port, (__u8 )5, (__u8 *)(&amp; dtr_command), (__u8 )sizeof(dtr_command));</data>
   <data key="startline">6908</data>
   <data key="startoffset">194665</data>
   <data key="enterFunction">firm_send_command</data>
  </edge>
  <edge source="N1382" target="N1385">
   <data key="sourcecode">info-&gt;mcr = (__u8 )((int )info-&gt;mcr &amp; -2);</data>
   <data key="startline">5771</data>
   <data key="startoffset">164797</data>
  </edge>
  <edge source="N1377" target="N1380">
   <data key="sourcecode">info-&gt;mcr = (__u8 )((int )info-&gt;mcr &amp; -3);</data>
   <data key="startline">5766</data>
   <data key="startoffset">164714</data>
  </edge>
  <edge source="N1372" target="N1375">
   <data key="sourcecode">info-&gt;mcr = (__u8 )((int )info-&gt;mcr | 1);</data>
   <data key="startline">5761</data>
   <data key="startoffset">164632</data>
  </edge>
  <edge source="N1367" target="N1370">
   <data key="sourcecode">info-&gt;mcr = (__u8 )((int )info-&gt;mcr | 2);</data>
   <data key="startline">5756</data>
   <data key="startoffset">164552</data>
  </edge>
  <edge source="N1358" target="N1361">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_tiocmset", (int )port-&gt;number);</data>
   <data key="startline">5745</data>
   <data key="startoffset">164391</data>
  </edge>
  <node id="N1316"/>
  <edge source="N1315" target="N1316">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">5693</data>
   <data key="startoffset">162973</data>
  </edge>
  <node id="N1317">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_tiocmget</data>
  </node>
  <edge source="N1316" target="N1317">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">modem_signals = 0U;</data>
   <data key="startline">5694</data>
   <data key="startoffset">163019</data>
  </edge>
  <node id="N1323"/>
  <edge source="N1317" target="N1323">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5699</data>
   <data key="startoffset">163091</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1326"/>
  <edge source="N1317" target="N1326">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5699</data>
   <data key="startoffset">163091</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2332"/>
  <edge source="N1326" target="N2332">
   <data key="sourcecode">firm_get_dtr_rts(port);</data>
   <data key="startline">5713</data>
   <data key="startoffset">163503</data>
   <data key="enterFunction">firm_get_dtr_rts</data>
  </edge>
  <node id="N2334"/>
  <edge source="N2332" target="N2334">
   <data key="sourcecode">struct whiteheat_simple get_dr_command ;</data>
   <data key="startline">6940</data>
   <data key="startoffset">195580</data>
  </edge>
  <node id="N2335"/>
  <edge source="N2334" target="N2335">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">6941</data>
   <data key="startoffset">195623</data>
  </edge>
  <node id="N2338"/>
  <edge source="N2335" target="N2338">
   <data key="sourcecode">get_dr_command.port = (__u8 )(((int )port-&gt;number - (int )(port-&gt;serial)-&gt;minor) + 1);</data>
   <data key="startline">6945</data>
   <data key="startoffset">195700</data>
  </edge>
  <edge source="N2338" target="N1899">
   <data key="sourcecode">tmp___7 = firm_send_command(port, (__u8 )10, (__u8 *)(&amp; get_dr_command), (__u8 )sizeof(get_dr_command));</data>
   <data key="startline">6946</data>
   <data key="startoffset">195793</data>
   <data key="enterFunction">firm_send_command</data>
  </edge>
  <edge source="N1323" target="N1326">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_tiocmget", (int )port-&gt;number);</data>
   <data key="startline">5702</data>
   <data key="startoffset">163360</data>
  </edge>
  <node id="N1244"/>
  <edge source="N1243" target="N1244">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">5605</data>
   <data key="startoffset">160935</data>
  </edge>
  <node id="N1245">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_room</data>
  </node>
  <edge source="N1244" target="N1245">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">room = 0;</data>
   <data key="startline">5606</data>
   <data key="startoffset">160988</data>
  </edge>
  <node id="N1251"/>
  <edge source="N1245" target="N1251">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5611</data>
   <data key="startoffset">161043</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1254">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write_room</data>
  </node>
  <edge source="N1245" target="N1254">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5611</data>
   <data key="startoffset">161043</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1254" target="N89">
   <data key="sourcecode">tmp___9 = spinlock_check(&amp; info-&gt;lock);</data>
   <data key="startline">5632</data>
   <data key="startoffset">161589</data>
   <data key="enterFunction">spinlock_check</data>
  </edge>
  <edge source="N1251" target="N1254">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_write_room", (int )port-&gt;number);</data>
   <data key="startline">5614</data>
   <data key="startoffset">161336</data>
  </edge>
  <node id="N1098"/>
  <edge source="N1097" target="N1098">
   <data key="sourcecode">info = (struct whiteheat_private *)tmp___7;</data>
   <data key="startline">5423</data>
   <data key="startoffset">156500</data>
  </edge>
  <node id="N1099">
   <data key="invariant">(count &gt;= -2147483648) &amp;&amp; (count &lt;= 2147483647) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (sent == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1098" target="N1099">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">sent = 0;</data>
   <data key="startline">5424</data>
   <data key="startoffset">156553</data>
  </edge>
  <node id="N1105"/>
  <edge source="N1099" target="N1105">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5429</data>
   <data key="startoffset">156608</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1108"/>
  <edge source="N1099" target="N1108">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5429</data>
   <data key="startoffset">156608</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1114">
   <data key="invariant">(count == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (sent == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">whiteheat_write</data>
  </node>
  <edge source="N1108" target="N1114">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[count == 0]</data>
   <data key="startline">5442</data>
   <data key="startoffset">157019</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N1108" target="N1226">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(count == 0)]</data>
   <data key="startline">5442</data>
   <data key="startoffset">157019</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1121"/>
  <edge source="N1114" target="N1121">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5446</data>
   <data key="startoffset">157093</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1123"/>
  <edge source="N1114" target="N1123">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5446</data>
   <data key="startoffset">157093</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1123" target="N1076">
   <data key="sourcecode">return (0);</data>
   <data key="startline">5459</data>
   <data key="startoffset">157529</data>
   <data key="returnFrom">whiteheat_write</data>
  </edge>
  <edge source="N1121" target="N1123">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - write request of 0 bytes\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
               "whiteheat_write");</data>
   <data key="startline">5448</data>
   <data key="startoffset">157169</data>
  </edge>
  <edge source="N1105" target="N1108">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_write", (int )port-&gt;number);</data>
   <data key="startline">5432</data>
   <data key="startoffset">156896</data>
  </edge>
  <edge source="N154" target="N151">
   <data key="sourcecode">return 0;</data>
   <data key="startline">4018</data>
   <data key="startoffset">112488</data>
   <data key="returnFrom">dev_get_drvdata</data>
  </edge>
  <node id="N1772"/>
  <edge source="N2864" target="N1772">
   <data key="sourcecode">whiteheat_read_callback(var_group4);</data>
   <data key="startline">7841</data>
   <data key="startoffset">222511</data>
   <data key="enterFunction">whiteheat_read_callback</data>
  </edge>
  <node id="N1774"/>
  <edge source="N1772" target="N1774">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">6255</data>
   <data key="startoffset">177388</data>
  </edge>
  <node id="N1775"/>
  <edge source="N1774" target="N1775">
   <data key="sourcecode">struct whiteheat_urb_wrap *wrap ;</data>
   <data key="startline">6256</data>
   <data key="startoffset">177421</data>
  </edge>
  <node id="N1776"/>
  <edge source="N1775" target="N1776">
   <data key="sourcecode">unsigned char *data ;</data>
   <data key="startline">6257</data>
   <data key="startoffset">177457</data>
  </edge>
  <node id="N1777"/>
  <edge source="N1776" target="N1777">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">6258</data>
   <data key="startoffset">177481</data>
  </edge>
  <node id="N1778"/>
  <edge source="N1777" target="N1778">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">6259</data>
   <data key="startoffset">177516</data>
  </edge>
  <node id="N1779"/>
  <edge source="N1778" target="N1779">
   <data key="sourcecode">int status ;</data>
   <data key="startline">6260</data>
   <data key="startoffset">177534</data>
  </edge>
  <node id="N1781"/>
  <edge source="N1779" target="N1781">
   <data key="sourcecode">port = (struct usb_serial_port *)urb-&gt;context;</data>
   <data key="startline">6264</data>
   <data key="startoffset">177558</data>
  </edge>
  <node id="N1783"/>
  <edge source="N1781" target="N1783">
   <data key="sourcecode">data = (unsigned char *)urb-&gt;transfer_buffer;</data>
   <data key="startline">6265</data>
   <data key="startoffset">177607</data>
  </edge>
  <edge source="N1783" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">6266</data>
   <data key="startoffset">177665</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N1572"/>
  <edge source="N2860" target="N1572">
   <data key="sourcecode">whiteheat_unthrottle(var_group2);</data>
   <data key="startline">7836</data>
   <data key="startoffset">222405</data>
   <data key="enterFunction">whiteheat_unthrottle</data>
  </edge>
  <node id="N1574"/>
  <edge source="N1572" target="N1574">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">5995</data>
   <data key="startoffset">170454</data>
  </edge>
  <node id="N1575"/>
  <edge source="N1574" target="N1575">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">5996</data>
   <data key="startoffset">170487</data>
  </edge>
  <node id="N1576"/>
  <edge source="N1575" target="N1576">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">5997</data>
   <data key="startoffset">170522</data>
  </edge>
  <node id="N1577"/>
  <edge source="N1576" target="N1577">
   <data key="sourcecode">int actually_throttled ;</data>
   <data key="startline">5998</data>
   <data key="startoffset">170540</data>
  </edge>
  <node id="N1579"/>
  <edge source="N1577" target="N1579">
   <data key="sourcecode">port = (struct usb_serial_port *)tty-&gt;driver_data;</data>
   <data key="startline">6002</data>
   <data key="startoffset">170583</data>
  </edge>
  <edge source="N1579" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">6003</data>
   <data key="startoffset">170639</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N1544"/>
  <edge source="N2856" target="N1544">
   <data key="sourcecode">whiteheat_throttle(var_group2);</data>
   <data key="startline">7831</data>
   <data key="startoffset">222301</data>
   <data key="enterFunction">whiteheat_throttle</data>
  </edge>
  <node id="N1546"/>
  <edge source="N1544" target="N1546">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">5960</data>
   <data key="startoffset">169566</data>
  </edge>
  <node id="N1547"/>
  <edge source="N1546" target="N1547">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">5961</data>
   <data key="startoffset">169599</data>
  </edge>
  <node id="N1548"/>
  <edge source="N1547" target="N1548">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">5962</data>
   <data key="startoffset">169634</data>
  </edge>
  <node id="N1550"/>
  <edge source="N1548" target="N1550">
   <data key="sourcecode">port = (struct usb_serial_port *)tty-&gt;driver_data;</data>
   <data key="startline">5966</data>
   <data key="startoffset">169661</data>
  </edge>
  <edge source="N1550" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">5967</data>
   <data key="startoffset">169724</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N1466"/>
  <edge source="N2852" target="N1466">
   <data key="sourcecode">whiteheat_chars_in_buffer(var_group2);</data>
   <data key="startline">7826</data>
   <data key="startoffset">222216</data>
   <data key="enterFunction">whiteheat_chars_in_buffer</data>
  </edge>
  <node id="N1468"/>
  <edge source="N1466" target="N1468">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">5866</data>
   <data key="startoffset">167189</data>
  </edge>
  <node id="N1469"/>
  <edge source="N1468" target="N1469">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">5867</data>
   <data key="startoffset">167222</data>
  </edge>
  <node id="N1470"/>
  <edge source="N1469" target="N1470">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">5868</data>
   <data key="startoffset">167257</data>
  </edge>
  <node id="N1471"/>
  <edge source="N1470" target="N1471">
   <data key="sourcecode">struct list_head *tmp___8 ;</data>
   <data key="startline">5869</data>
   <data key="startoffset">167275</data>
  </edge>
  <node id="N1472"/>
  <edge source="N1471" target="N1472">
   <data key="sourcecode">struct whiteheat_urb_wrap *wrap ;</data>
   <data key="startline">5870</data>
   <data key="startoffset">167305</data>
  </edge>
  <node id="N1473"/>
  <edge source="N1472" target="N1473">
   <data key="sourcecode">int chars ;</data>
   <data key="startline">5871</data>
   <data key="startoffset">167341</data>
  </edge>
  <node id="N1474"/>
  <edge source="N1473" target="N1474">
   <data key="sourcecode">unsigned long flags ;</data>
   <data key="startline">5872</data>
   <data key="startoffset">167355</data>
  </edge>
  <node id="N1475"/>
  <edge source="N1474" target="N1475">
   <data key="sourcecode">raw_spinlock_t *tmp___9 ;</data>
   <data key="startline">5873</data>
   <data key="startoffset">167379</data>
  </edge>
  <node id="N1476"/>
  <edge source="N1475" target="N1476">
   <data key="sourcecode">struct list_head const *__mptr ;</data>
   <data key="startline">5874</data>
   <data key="startoffset">167407</data>
  </edge>
  <node id="N1478"/>
  <edge source="N1476" target="N1478">
   <data key="sourcecode">port = (struct usb_serial_port *)tty-&gt;driver_data;</data>
   <data key="startline">5878</data>
   <data key="startoffset">167451</data>
  </edge>
  <edge source="N1478" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">5879</data>
   <data key="startoffset">167514</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N1344"/>
  <edge source="N2848" target="N1344">
   <data key="sourcecode">whiteheat_tiocmset(var_group2, var_whiteheat_tiocmset_9_p1, var_whiteheat_tiocmset_9_p2);</data>
   <data key="startline">7821</data>
   <data key="startoffset">222028</data>
   <data key="enterFunction">whiteheat_tiocmset</data>
  </edge>
  <node id="N1346"/>
  <edge source="N1344" target="N1346">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">5729</data>
   <data key="startoffset">163834</data>
  </edge>
  <node id="N1347"/>
  <edge source="N1346" target="N1347">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">5730</data>
   <data key="startoffset">163867</data>
  </edge>
  <node id="N1348"/>
  <edge source="N1347" target="N1348">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">5731</data>
   <data key="startoffset">163902</data>
  </edge>
  <node id="N1350"/>
  <edge source="N1348" target="N1350">
   <data key="sourcecode">port = (struct usb_serial_port *)tty-&gt;driver_data;</data>
   <data key="startline">5735</data>
   <data key="startoffset">163929</data>
  </edge>
  <edge source="N1350" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">5736</data>
   <data key="startoffset">163982</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N1307"/>
  <edge source="N2844" target="N1307">
   <data key="sourcecode">whiteheat_tiocmget(var_group2);</data>
   <data key="startline">7816</data>
   <data key="startoffset">221924</data>
   <data key="enterFunction">whiteheat_tiocmget</data>
  </edge>
  <node id="N1309"/>
  <edge source="N1307" target="N1309">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">5684</data>
   <data key="startoffset">162750</data>
  </edge>
  <node id="N1310"/>
  <edge source="N1309" target="N1310">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">5685</data>
   <data key="startoffset">162783</data>
  </edge>
  <node id="N1311"/>
  <edge source="N1310" target="N1311">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">5686</data>
   <data key="startoffset">162818</data>
  </edge>
  <node id="N1312"/>
  <edge source="N1311" target="N1312">
   <data key="sourcecode">unsigned int modem_signals ;</data>
   <data key="startline">5687</data>
   <data key="startoffset">162836</data>
  </edge>
  <node id="N1314"/>
  <edge source="N1312" target="N1314">
   <data key="sourcecode">port = (struct usb_serial_port *)tty-&gt;driver_data;</data>
   <data key="startline">5691</data>
   <data key="startoffset">162883</data>
  </edge>
  <edge source="N1314" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">5692</data>
   <data key="startoffset">162929</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N1458"/>
  <edge source="N2840" target="N1458">
   <data key="sourcecode">whiteheat_break_ctl(var_group2, var_whiteheat_break_ctl_12_p1);</data>
   <data key="startline">7811</data>
   <data key="startoffset">221808</data>
   <data key="enterFunction">whiteheat_break_ctl</data>
  </edge>
  <node id="N1460"/>
  <edge source="N1458" target="N1460">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">5855</data>
   <data key="startoffset">166970</data>
  </edge>
  <node id="N1462"/>
  <edge source="N1460" target="N1462">
   <data key="sourcecode">port = (struct usb_serial_port *)tty-&gt;driver_data;</data>
   <data key="startline">5859</data>
   <data key="startoffset">167012</data>
  </edge>
  <node id="N2310"/>
  <edge source="N1462" target="N2310">
   <data key="sourcecode">firm_set_break(port, (__u8 )break_state);</data>
   <data key="startline">5860</data>
   <data key="startoffset">167080</data>
   <data key="enterFunction">firm_set_break</data>
  </edge>
  <node id="N2312"/>
  <edge source="N2310" target="N2312">
   <data key="sourcecode">struct whiteheat_set_rdb break_command ;</data>
   <data key="startline">6914</data>
   <data key="startoffset">194822</data>
  </edge>
  <node id="N2313"/>
  <edge source="N2312" target="N2313">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">6915</data>
   <data key="startoffset">194865</data>
  </edge>
  <node id="N2316"/>
  <edge source="N2313" target="N2316">
   <data key="sourcecode">break_command.port = (__u8 )(((int )port-&gt;number - (int )(port-&gt;serial)-&gt;minor) + 1);</data>
   <data key="startline">6919</data>
   <data key="startoffset">194941</data>
  </edge>
  <node id="N2317"/>
  <edge source="N2316" target="N2317">
   <data key="sourcecode">break_command.state = onoff;</data>
   <data key="startline">6920</data>
   <data key="startoffset">194978</data>
  </edge>
  <edge source="N2317" target="N1899">
   <data key="sourcecode">tmp___7 = firm_send_command(port, (__u8 )6, (__u8 *)(&amp; break_command), (__u8 )sizeof(break_command));</data>
   <data key="startline">6921</data>
   <data key="startoffset">195050</data>
   <data key="enterFunction">firm_send_command</data>
  </edge>
  <node id="N1453"/>
  <edge source="N2836" target="N1453">
   <data key="sourcecode">whiteheat_set_termios(var_group2, var_group3, var_whiteheat_set_termios_11_p2);</data>
   <data key="startline">7806</data>
   <data key="startoffset">221658</data>
   <data key="enterFunction">whiteheat_set_termios</data>
  </edge>
  <edge source="N1453" target="N2096">
   <data key="sourcecode">firm_setup_port(tty);</data>
   <data key="startline">5849</data>
   <data key="startoffset">166853</data>
   <data key="enterFunction">firm_setup_port</data>
  </edge>
  <node id="N1392"/>
  <edge source="N2832" target="N1392">
   <data key="sourcecode">whiteheat_ioctl(var_group2, var_whiteheat_ioctl_10_p1, var_whiteheat_ioctl_10_p2);</data>
   <data key="startline">7801</data>
   <data key="startoffset">221482</data>
   <data key="enterFunction">whiteheat_ioctl</data>
  </edge>
  <node id="N1394"/>
  <edge source="N1392" target="N1394">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">5783</data>
   <data key="startoffset">165079</data>
  </edge>
  <node id="N1395"/>
  <edge source="N1394" target="N1395">
   <data key="sourcecode">struct serial_struct serstruct ;</data>
   <data key="startline">5784</data>
   <data key="startoffset">165112</data>
  </edge>
  <node id="N1396"/>
  <edge source="N1395" target="N1396">
   <data key="sourcecode">void *user_arg ;</data>
   <data key="startline">5785</data>
   <data key="startoffset">165147</data>
  </edge>
  <node id="N1397"/>
  <edge source="N1396" target="N1397">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">5786</data>
   <data key="startoffset">165166</data>
  </edge>
  <node id="N1398"/>
  <edge source="N1397" target="N1398">
   <data key="sourcecode">int tmp ;</data>
   <data key="startline">5787</data>
   <data key="startoffset">165182</data>
  </edge>
  <node id="N1400"/>
  <edge source="N1398" target="N1400">
   <data key="sourcecode">port = (struct usb_serial_port *)tty-&gt;driver_data;</data>
   <data key="startline">5790</data>
   <data key="startoffset">165199</data>
  </edge>
  <node id="N1401">
   <data key="invariant">(cmd &gt;= 0U) &amp;&amp; (cmd &lt;= 4294967295U) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (arg &gt;= 0ULL) &amp;&amp; (arg &lt;= 18446744073709551615ULL) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (user_arg == arg)</data>
   <data key="invariant.scope">whiteheat_ioctl</data>
  </node>
  <edge source="N1400" target="N1401">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">user_arg = (void *)arg;</data>
   <data key="startline">5791</data>
   <data key="startoffset">165252</data>
  </edge>
  <node id="N1407"/>
  <edge source="N1401" target="N1407">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5795</data>
   <data key="startoffset">165324</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1410"/>
  <edge source="N1401" target="N1410">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5795</data>
   <data key="startoffset">165324</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1416"/>
  <edge source="N1410" target="N1416">
   <data key="sourcecode">[((int)cmd) == 21534]</data>
   <data key="startline">5808</data>
   <data key="startoffset">165758</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N1443"/>
  <edge source="N1410" target="N1443">
   <data key="sourcecode">[!(((int)cmd) == 21534)]</data>
   <data key="startline">5808</data>
   <data key="startoffset">165758</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N1391"/>
  <edge source="N1443" target="N1391">
   <data key="sourcecode">return (-515);</data>
   <data key="startline">5840</data>
   <data key="startoffset">166674</data>
   <data key="returnFrom">whiteheat_ioctl</data>
  </edge>
  <edge source="N1391" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7801</data>
   <data key="startoffset">221482</data>
  </edge>
  <node id="N1425"/>
  <edge source="N1416" target="N1425">
   <data key="sourcecode">memset((void *)(&amp; serstruct), 0, sizeof(serstruct));</data>
   <data key="startline">5815</data>
   <data key="startoffset">165883</data>
  </edge>
  <node id="N1426"/>
  <edge source="N1425" target="N1426">
   <data key="sourcecode">serstruct.type = 11;</data>
   <data key="startline">5816</data>
   <data key="startoffset">165935</data>
  </edge>
  <node id="N1428"/>
  <edge source="N1426" target="N1428">
   <data key="sourcecode">serstruct.line = (int )(port-&gt;serial)-&gt;minor;</data>
   <data key="startline">5817</data>
   <data key="startoffset">165962</data>
  </edge>
  <node id="N1430"/>
  <edge source="N1428" target="N1430">
   <data key="sourcecode">serstruct.port = (unsigned int )port-&gt;number;</data>
   <data key="startline">5818</data>
   <data key="startoffset">166031</data>
  </edge>
  <node id="N1431"/>
  <edge source="N1430" target="N1431">
   <data key="sourcecode">serstruct.flags = (int )((1U &lt;&lt; 6) | (1U &lt;&lt; 7));</data>
   <data key="startline">5819</data>
   <data key="startoffset">166066</data>
  </edge>
  <node id="N1432"/>
  <edge source="N1431" target="N1432">
   <data key="sourcecode">serstruct.xmit_fifo_size = port-&gt;bulk_out_size;</data>
   <data key="startline">5820</data>
   <data key="startoffset">166121</data>
  </edge>
  <node id="N1433"/>
  <edge source="N1432" target="N1433">
   <data key="sourcecode">serstruct.custom_divisor = 0;</data>
   <data key="startline">5821</data>
   <data key="startoffset">166175</data>
  </edge>
  <node id="N1434"/>
  <edge source="N1433" target="N1434">
   <data key="sourcecode">serstruct.baud_base = 460800;</data>
   <data key="startline">5822</data>
   <data key="startoffset">166211</data>
  </edge>
  <node id="N1435"/>
  <edge source="N1434" target="N1435">
   <data key="sourcecode">serstruct.close_delay = (unsigned short)7500;</data>
   <data key="startline">5823</data>
   <data key="startoffset">166247</data>
  </edge>
  <node id="N1436"/>
  <edge source="N1435" target="N1436">
   <data key="sourcecode">serstruct.closing_wait = (unsigned short)7500;</data>
   <data key="startline">5824</data>
   <data key="startoffset">166299</data>
  </edge>
  <node id="N132"/>
  <edge source="N1436" target="N132">
   <data key="sourcecode">tmp = (int )copy_to_user(user_arg, (void const *)(&amp; serstruct), (unsigned int )sizeof(serstruct));</data>
   <data key="startline">5825</data>
   <data key="startoffset">166404</data>
   <data key="enterFunction">copy_to_user</data>
  </edge>
  <node id="N134"/>
  <edge source="N132" target="N134">
   <data key="sourcecode">unsigned long tmp ;</data>
   <data key="startline">3988</data>
   <data key="startoffset">111777</data>
  </edge>
  <node id="N135"/>
  <edge source="N134" target="N135">
   <data key="sourcecode">unsigned long tmp___0 ;</data>
   <data key="startline">3989</data>
   <data key="startoffset">111799</data>
  </edge>
  <node id="N136"/>
  <edge source="N135" target="N136">
   <data key="sourcecode">might_fault();</data>
   <data key="startline">3993</data>
   <data key="startoffset">111834</data>
  </edge>
  <node id="N138"/>
  <edge source="N136" target="N138">
   <data key="sourcecode">tmp___0 = (unsigned long )_copy_to_user(dst, src, size);</data>
   <data key="startline">3994</data>
   <data key="startoffset">111851</data>
  </edge>
  <node id="N140"/>
  <edge source="N138" target="N140">
   <data key="sourcecode">tmp = tmp___0;</data>
   <data key="startline">3995</data>
   <data key="startoffset">111916</data>
  </edge>
  <node id="N131"/>
  <edge source="N140" target="N131">
   <data key="sourcecode">return ((int )tmp);</data>
   <data key="startline">3997</data>
   <data key="startoffset">111945</data>
   <data key="returnFrom">copy_to_user</data>
  </edge>
  <node id="N1438"/>
  <edge source="N131" target="N1438">
   <data key="startline">5825</data>
   <data key="startoffset">166352</data>
  </edge>
  <node id="N1439"/>
  <edge source="N1438" target="N1439">
   <data key="sourcecode">tmp = (int )copy_to_user(user_arg, (void const *)(&amp; serstruct), (unsigned int )sizeof(serstruct));</data>
   <data key="startline">5825</data>
   <data key="startoffset">166358</data>
  </edge>
  <node id="N1440"/>
  <edge source="N1439" target="N1440">
   <data key="sourcecode">tmp___7 = tmp;</data>
   <data key="startline">5826</data>
   <data key="startoffset">166467</data>
  </edge>
  <node id="N1442"/>
  <edge source="N1440" target="N1442">
   <data key="sourcecode">[(tmp___7 == 0) == 0]</data>
   <data key="startline">5828</data>
   <data key="startoffset">166490</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N1440" target="N1443">
   <data key="sourcecode">[!((tmp___7 == 0) == 0)]</data>
   <data key="startline">5828</data>
   <data key="startoffset">166490</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N1442" target="N1391">
   <data key="sourcecode">return (-14);</data>
   <data key="startline">5829</data>
   <data key="startoffset">166509</data>
   <data key="returnFrom">whiteheat_ioctl</data>
  </edge>
  <edge source="N1407" target="N1410">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d, cmd 0x%.4x\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_ioctl", (int )port-&gt;number, cmd);</data>
   <data key="startline">5798</data>
   <data key="startoffset">165605</data>
  </edge>
  <node id="N1232"/>
  <edge source="N2828" target="N1232">
   <data key="sourcecode">whiteheat_write_room(var_group2);</data>
   <data key="startline">7796</data>
   <data key="startoffset">221398</data>
   <data key="enterFunction">whiteheat_write_room</data>
  </edge>
  <node id="N1234"/>
  <edge source="N1232" target="N1234">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">5593</data>
   <data key="startoffset">160648</data>
  </edge>
  <node id="N1235"/>
  <edge source="N1234" target="N1235">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">5594</data>
   <data key="startoffset">160681</data>
  </edge>
  <node id="N1236"/>
  <edge source="N1235" target="N1236">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">5595</data>
   <data key="startoffset">160716</data>
  </edge>
  <node id="N1237"/>
  <edge source="N1236" target="N1237">
   <data key="sourcecode">struct list_head *tmp___8 ;</data>
   <data key="startline">5596</data>
   <data key="startoffset">160734</data>
  </edge>
  <node id="N1238"/>
  <edge source="N1237" target="N1238">
   <data key="sourcecode">int room ;</data>
   <data key="startline">5597</data>
   <data key="startoffset">160764</data>
  </edge>
  <node id="N1239"/>
  <edge source="N1238" target="N1239">
   <data key="sourcecode">unsigned long flags ;</data>
   <data key="startline">5598</data>
   <data key="startoffset">160777</data>
  </edge>
  <node id="N1240"/>
  <edge source="N1239" target="N1240">
   <data key="sourcecode">raw_spinlock_t *tmp___9 ;</data>
   <data key="startline">5599</data>
   <data key="startoffset">160801</data>
  </edge>
  <node id="N1242"/>
  <edge source="N1240" target="N1242">
   <data key="sourcecode">port = (struct usb_serial_port *)tty-&gt;driver_data;</data>
   <data key="startline">5603</data>
   <data key="startoffset">160838</data>
  </edge>
  <edge source="N1242" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">5604</data>
   <data key="startoffset">160901</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N1077"/>
  <edge source="N2824" target="N1077">
   <data key="sourcecode">whiteheat_write(var_group2, var_group3, var_whiteheat_write_6_p2, var_whiteheat_write_6_p3);</data>
   <data key="startline">7791</data>
   <data key="startoffset">221229</data>
   <data key="enterFunction">whiteheat_write</data>
  </edge>
  <node id="N1079"/>
  <edge source="N1077" target="N1079">
   <data key="sourcecode">struct usb_serial *serial ;</data>
   <data key="startline">5401</data>
   <data key="startoffset">156016</data>
  </edge>
  <node id="N1080"/>
  <edge source="N1079" target="N1080">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">5402</data>
   <data key="startoffset">156046</data>
  </edge>
  <node id="N1081"/>
  <edge source="N1080" target="N1081">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">5403</data>
   <data key="startoffset">156081</data>
  </edge>
  <node id="N1082"/>
  <edge source="N1081" target="N1082">
   <data key="sourcecode">struct whiteheat_urb_wrap *wrap ;</data>
   <data key="startline">5404</data>
   <data key="startoffset">156099</data>
  </edge>
  <node id="N1083"/>
  <edge source="N1082" target="N1083">
   <data key="sourcecode">struct urb *urb ;</data>
   <data key="startline">5405</data>
   <data key="startoffset">156135</data>
  </edge>
  <node id="N1084"/>
  <edge source="N1083" target="N1084">
   <data key="sourcecode">int result ;</data>
   <data key="startline">5406</data>
   <data key="startoffset">156155</data>
  </edge>
  <node id="N1085"/>
  <edge source="N1084" target="N1085">
   <data key="sourcecode">int bytes ;</data>
   <data key="startline">5407</data>
   <data key="startoffset">156170</data>
  </edge>
  <node id="N1086"/>
  <edge source="N1085" target="N1086">
   <data key="sourcecode">int sent ;</data>
   <data key="startline">5408</data>
   <data key="startoffset">156184</data>
  </edge>
  <node id="N1087"/>
  <edge source="N1086" target="N1087">
   <data key="sourcecode">unsigned long flags ;</data>
   <data key="startline">5409</data>
   <data key="startoffset">156197</data>
  </edge>
  <node id="N1088"/>
  <edge source="N1087" target="N1088">
   <data key="sourcecode">struct list_head *tmp___8 ;</data>
   <data key="startline">5410</data>
   <data key="startoffset">156221</data>
  </edge>
  <node id="N1089"/>
  <edge source="N1088" target="N1089">
   <data key="sourcecode">raw_spinlock_t *tmp___9 ;</data>
   <data key="startline">5411</data>
   <data key="startoffset">156251</data>
  </edge>
  <node id="N1090"/>
  <edge source="N1089" target="N1090">
   <data key="sourcecode">int tmp___10 ;</data>
   <data key="startline">5412</data>
   <data key="startoffset">156279</data>
  </edge>
  <node id="N1091"/>
  <edge source="N1090" target="N1091">
   <data key="sourcecode">struct list_head const *__mptr ;</data>
   <data key="startline">5413</data>
   <data key="startoffset">156296</data>
  </edge>
  <node id="N1092"/>
  <edge source="N1091" target="N1092">
   <data key="sourcecode">size_t __len ;</data>
   <data key="startline">5414</data>
   <data key="startoffset">156331</data>
  </edge>
  <node id="N1093"/>
  <edge source="N1092" target="N1093">
   <data key="sourcecode">void *__ret ;</data>
   <data key="startline">5415</data>
   <data key="startoffset">156348</data>
  </edge>
  <node id="N1094"/>
  <edge source="N1093" target="N1094">
   <data key="sourcecode">raw_spinlock_t *tmp___11 ;</data>
   <data key="startline">5416</data>
   <data key="startoffset">156364</data>
  </edge>
  <node id="N1095"/>
  <edge source="N1094" target="N1095">
   <data key="sourcecode">raw_spinlock_t *tmp___12 ;</data>
   <data key="startline">5417</data>
   <data key="startoffset">156393</data>
  </edge>
  <node id="N1096"/>
  <edge source="N1095" target="N1096">
   <data key="sourcecode">serial = port-&gt;serial;</data>
   <data key="startline">5421</data>
   <data key="startoffset">156440</data>
  </edge>
  <edge source="N1096" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">5422</data>
   <data key="startoffset">156466</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N474"/>
  <edge source="N2820" target="N474">
   <data key="sourcecode">whiteheat_attach(var_group1);</data>
   <data key="startline">7786</data>
   <data key="startoffset">221129</data>
   <data key="enterFunction">whiteheat_attach</data>
  </edge>
  <node id="N476"/>
  <edge source="N474" target="N476">
   <data key="sourcecode">struct usb_serial_port *command_port ;</data>
   <data key="startline">4617</data>
   <data key="startoffset">136431</data>
  </edge>
  <node id="N477"/>
  <edge source="N476" target="N477">
   <data key="sourcecode">struct whiteheat_command_private *command_info ;</data>
   <data key="startline">4618</data>
   <data key="startoffset">136472</data>
  </edge>
  <node id="N478"/>
  <edge source="N477" target="N478">
   <data key="sourcecode">struct usb_serial_port *port ;</data>
   <data key="startline">4619</data>
   <data key="startoffset">136523</data>
  </edge>
  <node id="N479"/>
  <edge source="N478" target="N479">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">4620</data>
   <data key="startoffset">136556</data>
  </edge>
  <node id="N480"/>
  <edge source="N479" target="N480">
   <data key="sourcecode">struct whiteheat_hw_info *hw_info ;</data>
   <data key="startline">4621</data>
   <data key="startoffset">136591</data>
  </edge>
  <node id="N481"/>
  <edge source="N480" target="N481">
   <data key="sourcecode">int pipe ;</data>
   <data key="startline">4622</data>
   <data key="startoffset">136629</data>
  </edge>
  <node id="N482"/>
  <edge source="N481" target="N482">
   <data key="sourcecode">int ret ;</data>
   <data key="startline">4623</data>
   <data key="startoffset">136642</data>
  </edge>
  <node id="N483"/>
  <edge source="N482" target="N483">
   <data key="sourcecode">int alen ;</data>
   <data key="startline">4624</data>
   <data key="startoffset">136654</data>
  </edge>
  <node id="N484"/>
  <edge source="N483" target="N484">
   <data key="sourcecode">__u8 *command ;</data>
   <data key="startline">4625</data>
   <data key="startoffset">136667</data>
  </edge>
  <node id="N485"/>
  <edge source="N484" target="N485">
   <data key="sourcecode">__u8 *result ;</data>
   <data key="startline">4626</data>
   <data key="startoffset">136685</data>
  </edge>
  <node id="N486"/>
  <edge source="N485" target="N486">
   <data key="sourcecode">int i ;</data>
   <data key="startline">4627</data>
   <data key="startoffset">136702</data>
  </edge>
  <node id="N487"/>
  <edge source="N486" target="N487">
   <data key="sourcecode">int j ;</data>
   <data key="startline">4628</data>
   <data key="startoffset">136712</data>
  </edge>
  <node id="N488"/>
  <edge source="N487" target="N488">
   <data key="sourcecode">struct urb *urb ;</data>
   <data key="startline">4629</data>
   <data key="startoffset">136722</data>
  </edge>
  <node id="N489"/>
  <edge source="N488" target="N489">
   <data key="sourcecode">int buf_size ;</data>
   <data key="startline">4630</data>
   <data key="startoffset">136742</data>
  </edge>
  <node id="N490"/>
  <edge source="N489" target="N490">
   <data key="sourcecode">struct whiteheat_urb_wrap *wrap ;</data>
   <data key="startline">4631</data>
   <data key="startoffset">136759</data>
  </edge>
  <node id="N491"/>
  <edge source="N490" target="N491">
   <data key="sourcecode">struct list_head *tmp___7 ;</data>
   <data key="startline">4632</data>
   <data key="startoffset">136795</data>
  </edge>
  <node id="N492"/>
  <edge source="N491" target="N492">
   <data key="sourcecode">unsigned int tmp___8 ;</data>
   <data key="startline">4633</data>
   <data key="startoffset">136825</data>
  </edge>
  <node id="N493"/>
  <edge source="N492" target="N493">
   <data key="sourcecode">void *tmp___9 ;</data>
   <data key="startline">4634</data>
   <data key="startoffset">136850</data>
  </edge>
  <node id="N494"/>
  <edge source="N493" target="N494">
   <data key="sourcecode">void *tmp___10 ;</data>
   <data key="startline">4635</data>
   <data key="startoffset">136868</data>
  </edge>
  <node id="N495"/>
  <edge source="N494" target="N495">
   <data key="sourcecode">unsigned int tmp___11 ;</data>
   <data key="startline">4636</data>
   <data key="startoffset">136887</data>
  </edge>
  <node id="N496"/>
  <edge source="N495" target="N496">
   <data key="sourcecode">void *tmp___12 ;</data>
   <data key="startline">4637</data>
   <data key="startoffset">136913</data>
  </edge>
  <node id="N497"/>
  <edge source="N496" target="N497">
   <data key="sourcecode">atomic_long_t __constr_expr_0 ;</data>
   <data key="startline">4638</data>
   <data key="startoffset">136932</data>
  </edge>
  <node id="N498"/>
  <edge source="N497" target="N498">
   <data key="sourcecode">void *tmp___13 ;</data>
   <data key="startline">4639</data>
   <data key="startoffset">136966</data>
  </edge>
  <node id="N499"/>
  <edge source="N498" target="N499">
   <data key="sourcecode">unsigned int tmp___14 ;</data>
   <data key="startline">4640</data>
   <data key="startoffset">136985</data>
  </edge>
  <node id="N500"/>
  <edge source="N499" target="N500">
   <data key="sourcecode">void *tmp___15 ;</data>
   <data key="startline">4641</data>
   <data key="startoffset">137011</data>
  </edge>
  <node id="N501"/>
  <edge source="N500" target="N501">
   <data key="sourcecode">unsigned int tmp___16 ;</data>
   <data key="startline">4642</data>
   <data key="startoffset">137030</data>
  </edge>
  <node id="N502"/>
  <edge source="N501" target="N502">
   <data key="sourcecode">void *tmp___17 ;</data>
   <data key="startline">4643</data>
   <data key="startoffset">137056</data>
  </edge>
  <node id="N503"/>
  <edge source="N502" target="N503">
   <data key="sourcecode">void *tmp___18 ;</data>
   <data key="startline">4644</data>
   <data key="startoffset">137075</data>
  </edge>
  <node id="N504"/>
  <edge source="N503" target="N504">
   <data key="sourcecode">struct list_head const *__mptr ;</data>
   <data key="startline">4645</data>
   <data key="startoffset">137094</data>
  </edge>
  <node id="N505"/>
  <edge source="N504" target="N505">
   <data key="sourcecode">struct list_head const *__mptr___0 ;</data>
   <data key="startline">4646</data>
   <data key="startoffset">137129</data>
  </edge>
  <node id="N506"/>
  <edge source="N505" target="N506">
   <data key="sourcecode">command_port = serial-&gt;port[4];</data>
   <data key="startline">4650</data>
   <data key="startoffset">137192</data>
  </edge>
  <edge source="N506" target="N194">
   <data key="sourcecode">tmp___8 = __create_pipe(serial-&gt;dev, (unsigned int )command_port-&gt;bulk_out_endpointAddress);</data>
   <data key="startline">4651</data>
   <data key="startoffset">137235</data>
   <data key="enterFunction">__create_pipe</data>
  </edge>
  <node id="N2916"/>
  <edge source="N2816" target="N2916">
   <data key="sourcecode">[ldv_s_whiteheat_device_usb_serial_driver == 2]</data>
   <data key="startline">7774</data>
   <data key="startoffset">220813</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2816" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(ldv_s_whiteheat_device_usb_serial_driver == 2)]</data>
   <data key="startline">7774</data>
   <data key="startoffset">220813</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2916" target="N474">
   <data key="sourcecode">whiteheat_attach(var_group1);</data>
   <data key="startline">7776</data>
   <data key="startoffset">220901</data>
   <data key="enterFunction">whiteheat_attach</data>
  </edge>
  <node id="N2908"/>
  <edge source="N2812" target="N2908">
   <data key="sourcecode">[ldv_s_whiteheat_device_usb_serial_driver == 1]</data>
   <data key="startline">7764</data>
   <data key="startoffset">220519</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2812" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(ldv_s_whiteheat_device_usb_serial_driver == 1)]</data>
   <data key="startline">7764</data>
   <data key="startoffset">220519</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N981"/>
  <edge source="N2908" target="N981">
   <data key="sourcecode">whiteheat_close(var_group3);</data>
   <data key="startline">7766</data>
   <data key="startoffset">220606</data>
   <data key="enterFunction">whiteheat_close</data>
  </edge>
  <node id="N983"/>
  <edge source="N981" target="N983">
   <data key="sourcecode">struct whiteheat_private *info ;</data>
   <data key="startline">5284</data>
   <data key="startoffset">153044</data>
  </edge>
  <node id="N984"/>
  <edge source="N983" target="N984">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">5285</data>
   <data key="startoffset">153079</data>
  </edge>
  <node id="N985"/>
  <edge source="N984" target="N985">
   <data key="sourcecode">struct whiteheat_urb_wrap *wrap ;</data>
   <data key="startline">5286</data>
   <data key="startoffset">153097</data>
  </edge>
  <node id="N986"/>
  <edge source="N985" target="N986">
   <data key="sourcecode">struct urb *urb ;</data>
   <data key="startline">5287</data>
   <data key="startoffset">153133</data>
  </edge>
  <node id="N987"/>
  <edge source="N986" target="N987">
   <data key="sourcecode">struct list_head *tmp___8 ;</data>
   <data key="startline">5288</data>
   <data key="startoffset">153153</data>
  </edge>
  <node id="N988"/>
  <edge source="N987" target="N988">
   <data key="sourcecode">struct list_head *tmp2 ;</data>
   <data key="startline">5289</data>
   <data key="startoffset">153183</data>
  </edge>
  <node id="N989"/>
  <edge source="N988" target="N989">
   <data key="sourcecode">struct list_head const *__mptr ;</data>
   <data key="startline">5290</data>
   <data key="startoffset">153210</data>
  </edge>
  <node id="N990"/>
  <edge source="N989" target="N990">
   <data key="sourcecode">struct list_head const *__mptr___0 ;</data>
   <data key="startline">5291</data>
   <data key="startoffset">153245</data>
  </edge>
  <edge source="N990" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(port);</data>
   <data key="startline">5295</data>
   <data key="startoffset">153303</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N2895"/>
  <edge source="N2808" target="N2895">
   <data key="sourcecode">[ldv_s_whiteheat_device_usb_serial_driver == 0]</data>
   <data key="startline">7748</data>
   <data key="startoffset">220075</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2808" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(ldv_s_whiteheat_device_usb_serial_driver == 0)]</data>
   <data key="startline">7748</data>
   <data key="startoffset">220075</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N911"/>
  <edge source="N2895" target="N911">
   <data key="sourcecode">res_whiteheat_open_4 = whiteheat_open(var_group2, var_group3);</data>
   <data key="startline">7750</data>
   <data key="startoffset">220125</data>
   <data key="enterFunction">whiteheat_open</data>
  </edge>
  <node id="N913"/>
  <edge source="N911" target="N913">
   <data key="sourcecode">int retval ;</data>
   <data key="startline">5184</data>
   <data key="startoffset">151039</data>
  </edge>
  <node id="N914">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (retval == 0)</data>
   <data key="invariant.scope">whiteheat_open</data>
  </node>
  <edge source="N913" target="N914">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">retval = 0;</data>
   <data key="startline">5187</data>
   <data key="startoffset">151059</data>
  </edge>
  <node id="N920"/>
  <edge source="N914" target="N920">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">5191</data>
   <data key="startoffset">151119</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N923"/>
  <edge source="N914" target="N923">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">5191</data>
   <data key="startoffset">151119</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2352"/>
  <edge source="N923" target="N2352">
   <data key="sourcecode">retval = start_command_port(port-&gt;serial);</data>
   <data key="startline">5205</data>
   <data key="startoffset">151536</data>
   <data key="enterFunction">start_command_port</data>
  </edge>
  <node id="N2354"/>
  <edge source="N2352" target="N2354">
   <data key="sourcecode">struct usb_serial_port *command_port ;</data>
   <data key="startline">6964</data>
   <data key="startoffset">196280</data>
  </edge>
  <node id="N2355"/>
  <edge source="N2354" target="N2355">
   <data key="sourcecode">struct whiteheat_command_private *command_info ;</data>
   <data key="startline">6965</data>
   <data key="startoffset">196321</data>
  </edge>
  <node id="N2356"/>
  <edge source="N2355" target="N2356">
   <data key="sourcecode">int retval ;</data>
   <data key="startline">6966</data>
   <data key="startoffset">196372</data>
  </edge>
  <node id="N2357"/>
  <edge source="N2356" target="N2357">
   <data key="sourcecode">void *tmp___7 ;</data>
   <data key="startline">6967</data>
   <data key="startoffset">196387</data>
  </edge>
  <node id="N2358"/>
  <edge source="N2357" target="N2358">
   <data key="sourcecode">retval = 0;</data>
   <data key="startline">6971</data>
   <data key="startoffset">196414</data>
  </edge>
  <node id="N2359"/>
  <edge source="N2358" target="N2359">
   <data key="sourcecode">command_port = serial-&gt;port[4];</data>
   <data key="startline">6972</data>
   <data key="startoffset">196428</data>
  </edge>
  <edge source="N2359" target="N198">
   <data key="sourcecode">tmp___7 = usb_get_serial_port_data(command_port);</data>
   <data key="startline">6973</data>
   <data key="startoffset">196497</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <edge source="N920" target="N923">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s - port %d\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_open", (int )port-&gt;number);</data>
   <data key="startline">5193</data>
   <data key="startoffset">151142</data>
  </edge>
  <node id="N470"/>
  <edge source="N2804" target="N470">
   <data key="sourcecode">whiteheat_firmware_attach(var_group1);</data>
   <data key="startline">7744</data>
   <data key="startoffset">219927</data>
   <data key="enterFunction">whiteheat_firmware_attach</data>
  </edge>
  <node id="N469"/>
  <edge source="N470" target="N469">
   <data key="sourcecode">return (1);</data>
   <data key="startline">4608</data>
   <data key="startoffset">136158</data>
   <data key="returnFrom">whiteheat_firmware_attach</data>
  </edge>
  <edge source="N469" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="startline">7744</data>
   <data key="startoffset">219927</data>
  </edge>
  <node id="N2878"/>
  <edge source="N2800" target="N2878">
   <data key="sourcecode">[ldv_s_whiteheat_fake_device_usb_serial_driver == 0]</data>
   <data key="startline">7726</data>
   <data key="startoffset">219314</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2800" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(ldv_s_whiteheat_fake_device_usb_serial_driver == 0)]</data>
   <data key="startline">7726</data>
   <data key="startoffset">219314</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N301"/>
  <edge source="N2878" target="N301">
   <data key="sourcecode">res_whiteheat_firmware_download_0 = whiteheat_firmware_download(var_group1,
                                                                          var_whiteheat_firmware_download_0_p1);</data>
   <data key="startline">7728</data>
   <data key="startoffset">219390</data>
   <data key="enterFunction">whiteheat_firmware_download</data>
  </edge>
  <node id="N303"/>
  <edge source="N301" target="N303">
   <data key="sourcecode">int response ;</data>
   <data key="startline">4392</data>
   <data key="startoffset">130804</data>
  </edge>
  <node id="N304"/>
  <edge source="N303" target="N304">
   <data key="sourcecode">int ret ;</data>
   <data key="startline">4393</data>
   <data key="startoffset">130821</data>
  </edge>
  <node id="N305"/>
  <edge source="N304" target="N305">
   <data key="sourcecode">struct firmware const *loader_fw ;</data>
   <data key="startline">4394</data>
   <data key="startoffset">130833</data>
  </edge>
  <node id="N306"/>
  <edge source="N305" target="N306">
   <data key="sourcecode">struct firmware const *firmware_fw ;</data>
   <data key="startline">4395</data>
   <data key="startoffset">130870</data>
  </edge>
  <node id="N307"/>
  <edge source="N306" target="N307">
   <data key="sourcecode">struct ihex_binrec const *record ;</data>
   <data key="startline">4396</data>
   <data key="startoffset">130909</data>
  </edge>
  <node id="N308"/>
  <edge source="N307" target="N308">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">4397</data>
   <data key="startoffset">130946</data>
  </edge>
  <node id="N309"/>
  <edge source="N308" target="N309">
   <data key="sourcecode">int tmp___8 ;</data>
   <data key="startline">4398</data>
   <data key="startoffset">130962</data>
  </edge>
  <node id="N310"/>
  <edge source="N309" target="N310">
   <data key="sourcecode">__u16 tmp___9 ;</data>
   <data key="startline">4399</data>
   <data key="startoffset">130978</data>
  </edge>
  <node id="N311"/>
  <edge source="N310" target="N311">
   <data key="sourcecode">__u32 tmp___10 ;</data>
   <data key="startline">4400</data>
   <data key="startoffset">130996</data>
  </edge>
  <node id="N312"/>
  <edge source="N311" target="N312">
   <data key="sourcecode">__u16 tmp___11 ;</data>
   <data key="startline">4401</data>
   <data key="startoffset">131015</data>
  </edge>
  <node id="N313"/>
  <edge source="N312" target="N313">
   <data key="sourcecode">__u32 tmp___12 ;</data>
   <data key="startline">4402</data>
   <data key="startoffset">131034</data>
  </edge>
  <node id="N314"/>
  <edge source="N313" target="N314">
   <data key="sourcecode">__u32 tmp___13 ;</data>
   <data key="startline">4403</data>
   <data key="startoffset">131053</data>
  </edge>
  <node id="N315"/>
  <edge source="N314" target="N315">
   <data key="sourcecode">__u16 tmp___14 ;</data>
   <data key="startline">4404</data>
   <data key="startoffset">131072</data>
  </edge>
  <node id="N316"/>
  <edge source="N315" target="N316">
   <data key="sourcecode">__u32 tmp___15 ;</data>
   <data key="startline">4405</data>
   <data key="startoffset">131091</data>
  </edge>
  <node id="N317"/>
  <edge source="N316" target="N317">
   <data key="sourcecode">__u16 tmp___16 ;</data>
   <data key="startline">4406</data>
   <data key="startoffset">131110</data>
  </edge>
  <node id="N318"/>
  <edge source="N317" target="N318">
   <data key="sourcecode">__u32 tmp___17 ;</data>
   <data key="startline">4407</data>
   <data key="startoffset">131129</data>
  </edge>
  <node id="N319"/>
  <edge source="N318" target="N319">
   <data key="sourcecode">__u16 tmp___18 ;</data>
   <data key="startline">4408</data>
   <data key="startoffset">131148</data>
  </edge>
  <node id="N320"/>
  <edge source="N319" target="N320">
   <data key="sourcecode">__u32 tmp___19 ;</data>
   <data key="startline">4409</data>
   <data key="startoffset">131167</data>
  </edge>
  <node id="N321"/>
  <edge source="N320" target="N321">
   <data key="sourcecode">__u16 tmp___20 ;</data>
   <data key="startline">4410</data>
   <data key="startoffset">131186</data>
  </edge>
  <node id="N322"/>
  <edge source="N321" target="N322">
   <data key="sourcecode">__u32 tmp___21 ;</data>
   <data key="startline">4411</data>
   <data key="startoffset">131205</data>
  </edge>
  <node id="N323"/>
  <edge source="N322" target="N323">
   <data key="sourcecode">__u32 tmp___22 ;</data>
   <data key="startline">4412</data>
   <data key="startoffset">131224</data>
  </edge>
  <node id="N324"/>
  <edge source="N323" target="N324">
   <data key="sourcecode">ret = -2;</data>
   <data key="startline">4415</data>
   <data key="startoffset">131254</data>
  </edge>
  <node id="N325"/>
  <edge source="N324" target="N325">
   <data key="sourcecode">loader_fw = (struct firmware const *)((void *)0);</data>
   <data key="startline">4416</data>
   <data key="startoffset">131298</data>
  </edge>
  <node id="N326">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ret == -2) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (firmware_fw == loader_fw)</data>
   <data key="invariant.scope">whiteheat_firmware_download</data>
  </node>
  <edge source="N325" target="N326">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">firmware_fw = (struct firmware const *)((void *)0);</data>
   <data key="startline">4417</data>
   <data key="startoffset">131312</data>
  </edge>
  <node id="N332"/>
  <edge source="N326" target="N332">
   <data key="sourcecode">[(debug == 0) == 0]</data>
   <data key="startline">4421</data>
   <data key="startoffset">131412</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N334"/>
  <edge source="N326" target="N334">
   <data key="sourcecode">[!((debug == 0) == 0)]</data>
   <data key="startline">4421</data>
   <data key="startoffset">131412</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N282"/>
  <edge source="N334" target="N282">
   <data key="sourcecode">tmp___7 = request_ihex_firmware(&amp; firmware_fw, "whiteheat.fw", &amp; (serial-&gt;dev)-&gt;dev);</data>
   <data key="startline">4435</data>
   <data key="startoffset">131803</data>
   <data key="enterFunction">request_ihex_firmware</data>
  </edge>
  <node id="N284"/>
  <edge source="N282" target="N284">
   <data key="sourcecode">struct firmware const *lfw ;</data>
   <data key="startline">4224</data>
   <data key="startoffset">118790</data>
  </edge>
  <node id="N285"/>
  <edge source="N284" target="N285">
   <data key="sourcecode">int ret ;</data>
   <data key="startline">4225</data>
   <data key="startoffset">118821</data>
  </edge>
  <node id="N286"/>
  <edge source="N285" target="N286">
   <data key="sourcecode">ret = request_firmware(&amp; lfw, fw_name, dev);</data>
   <data key="startline">4229</data>
   <data key="startoffset">118842</data>
  </edge>
  <node id="N288"/>
  <edge source="N286" target="N288">
   <data key="sourcecode">[(ret == 0) == 0]</data>
   <data key="startline">4231</data>
   <data key="startoffset">118897</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N289"/>
  <edge source="N286" target="N289">
   <data key="sourcecode">[!((ret == 0) == 0)]</data>
   <data key="startline">4231</data>
   <data key="startoffset">118897</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N252"/>
  <edge source="N289" target="N252">
   <data key="sourcecode">ret = ihex_validate_fw(lfw);</data>
   <data key="startline">4237</data>
   <data key="startoffset">118967</data>
   <data key="enterFunction">ihex_validate_fw</data>
  </edge>
  <node id="N254"/>
  <edge source="N252" target="N254">
   <data key="sourcecode">struct ihex_binrec const *rec ;</data>
   <data key="startline">4187</data>
   <data key="startoffset">117966</data>
  </edge>
  <node id="N255"/>
  <edge source="N254" target="N255">
   <data key="sourcecode">size_t ofs ;</data>
   <data key="startline">4188</data>
   <data key="startoffset">118000</data>
  </edge>
  <node id="N256"/>
  <edge source="N255" target="N256">
   <data key="sourcecode">__u16 tmp___7 ;</data>
   <data key="startline">4189</data>
   <data key="startoffset">118015</data>
  </edge>
  <node id="N257"/>
  <edge source="N256" target="N257">
   <data key="sourcecode">__u16 tmp___8 ;</data>
   <data key="startline">4190</data>
   <data key="startoffset">118033</data>
  </edge>
  <node id="N276">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">ihex_validate_fw</data>
  </node>
  <edge source="N257" target="N276">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">ofs = (size_t )0;</data>
   <data key="startline">4193</data>
   <data key="startoffset">118056</data>
  </edge>
  <node id="N264">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0)</data>
   <data key="invariant.scope">ihex_validate_fw</data>
  </node>
  <edge source="N276" target="N264">
   <data key="sourcecode">[ofs &lt;= ((size_t )((fw-&gt;size) - ((size_t )8)))]</data>
   <data key="startline">4197</data>
   <data key="startoffset">118122</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N265">
   <data key="invariant">(ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; !(ofs == 0ULL)</data>
   <data key="invariant.scope">ihex_validate_fw</data>
  </node>
  <edge source="N276" target="N265">
   <data key="sourcecode">[!(ofs &lt;= ((size_t )((fw-&gt;size) - ((size_t )8))))]</data>
   <data key="startline">4197</data>
   <data key="startoffset">118122</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N251"/>
  <edge source="N265" target="N251">
   <data key="sourcecode">return (-22);</data>
   <data key="startline">4219</data>
   <data key="startoffset">118622</data>
   <data key="returnFrom">ihex_validate_fw</data>
  </edge>
  <node id="N291"/>
  <edge source="N251" target="N291">
   <data key="startline">4237</data>
   <data key="startoffset">118944</data>
  </edge>
  <node id="N293"/>
  <edge source="N291" target="N293">
   <data key="sourcecode">[(ret == 0) == 0]</data>
   <data key="startline">4239</data>
   <data key="startoffset">118983</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N294"/>
  <edge source="N291" target="N294">
   <data key="sourcecode">[!((ret == 0) == 0)]</data>
   <data key="startline">4239</data>
   <data key="startoffset">118983</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N298"/>
  <edge source="N294" target="N298">
   <data key="sourcecode">*fw = lfw;</data>
   <data key="startline">4249</data>
   <data key="startoffset">119177</data>
  </edge>
  <node id="N281"/>
  <edge source="N298" target="N281">
   <data key="sourcecode">return (0);</data>
   <data key="startline">4250</data>
   <data key="startoffset">119192</data>
   <data key="returnFrom">request_ihex_firmware</data>
  </edge>
  <node id="N339"/>
  <edge source="N281" target="N339">
   <data key="startline">4435</data>
   <data key="startoffset">131803</data>
  </edge>
  <node id="N345"/>
  <edge source="N281" target="N345">
   <data key="startline">4447</data>
   <data key="startoffset">132103</data>
  </edge>
  <node id="N347"/>
  <edge source="N345" target="N347">
   <data key="sourcecode">[(tmp___8 == 0) == 0]</data>
   <data key="startline">4449</data>
   <data key="startoffset">132204</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N348"/>
  <edge source="N345" target="N348">
   <data key="sourcecode">[!((tmp___8 == 0) == 0)]</data>
   <data key="startline">4449</data>
   <data key="startoffset">132204</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N351"/>
  <edge source="N348" target="N351">
   <data key="sourcecode">ret = 0;</data>
   <data key="startline">4459</data>
   <data key="startoffset">132421</data>
  </edge>
  <node id="N352"/>
  <edge source="N351" target="N352">
   <data key="sourcecode">response = ezusb_set_reset(serial, (unsigned char)1);</data>
   <data key="startline">4460</data>
   <data key="startoffset">132426</data>
  </edge>
  <node id="N377">
   <data key="invariant">(tmp___8 == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ret == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (firmware_fw == loader_fw)</data>
   <data key="invariant.scope">whiteheat_firmware_download</data>
  </node>
  <edge source="N352" target="N377">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">record = (struct ihex_binrec const *)loader_fw-&gt;data;</data>
   <data key="startline">4461</data>
   <data key="startoffset">132491</data>
  </edge>
  <node id="N360">
   <data key="invariant">(tmp___8 == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ret == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (firmware_fw == loader_fw)</data>
   <data key="invariant.scope">whiteheat_firmware_download</data>
  </node>
  <edge source="N377" target="N360">
   <data key="sourcecode">[(record == 0) == 0]</data>
   <data key="startline">4466</data>
   <data key="startoffset">132592</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N375"/>
  <edge source="N377" target="N375">
   <data key="sourcecode">[!((record == 0) == 0)]</data>
   <data key="startline">4466</data>
   <data key="startoffset">132592</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N381"/>
  <edge source="N375" target="N381">
   <data key="sourcecode">response = ezusb_set_reset(serial, (unsigned char)0);</data>
   <data key="startline">4496</data>
   <data key="startoffset">133457</data>
  </edge>
  <node id="N398">
   <data key="invariant">(tmp___8 == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ret == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (firmware_fw == loader_fw)</data>
   <data key="invariant.scope">whiteheat_firmware_download</data>
  </node>
  <edge source="N381" target="N398">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">record = (struct ihex_binrec const *)firmware_fw-&gt;data;</data>
   <data key="startline">4497</data>
   <data key="startoffset">133487</data>
  </edge>
  <node id="N389">
   <data key="invariant">(tmp___8 == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ret == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (firmware_fw == loader_fw)</data>
   <data key="invariant.scope">whiteheat_firmware_download</data>
  </node>
  <edge source="N398" target="N389">
   <data key="sourcecode">[(record == 0) == 0]</data>
   <data key="startline">4502</data>
   <data key="startoffset">133590</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N424">
   <data key="invariant">(tmp___8 == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ret == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (firmware_fw == loader_fw)</data>
   <data key="invariant.scope">whiteheat_firmware_download</data>
  </node>
  <edge source="N398" target="N424">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!((record == 0) == 0)]</data>
   <data key="startline">4502</data>
   <data key="startoffset">133590</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N407">
   <data key="invariant">(tmp___8 == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ret == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (firmware_fw == loader_fw)</data>
   <data key="invariant.scope">whiteheat_firmware_download</data>
  </node>
  <edge source="N424" target="N407">
   <data key="sourcecode">[(record == 0) == 0]</data>
   <data key="startline">4524</data>
   <data key="startoffset">133951</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N422"/>
  <edge source="N424" target="N422">
   <data key="sourcecode">[!((record == 0) == 0)]</data>
   <data key="startline">4524</data>
   <data key="startoffset">133951</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N428"/>
  <edge source="N422" target="N428">
   <data key="sourcecode">response = ezusb_set_reset(serial, (unsigned char)1);</data>
   <data key="startline">4552</data>
   <data key="startoffset">134770</data>
  </edge>
  <node id="N459">
   <data key="invariant">(tmp___8 == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ret == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (firmware_fw == loader_fw)</data>
   <data key="invariant.scope">whiteheat_firmware_download</data>
  </node>
  <edge source="N428" target="N459">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">record = (struct ihex_binrec const *)firmware_fw-&gt;data;</data>
   <data key="startline">4553</data>
   <data key="startoffset">134826</data>
  </edge>
  <node id="N436">
   <data key="invariant">(tmp___8 == 0) &amp;&amp; (ldv_urb_state == 0) &amp;&amp; (res_whiteheat_open_4 == 0) &amp;&amp; (ret == 0) &amp;&amp; (tmp___7 == 0) &amp;&amp; (urb_pool_size == 8) &amp;&amp; (ldv_coherent_state == 0) &amp;&amp; (debug == 0) &amp;&amp; (res_whiteheat_firmware_download_0 == 0) &amp;&amp; (firmware_fw == loader_fw)</data>
   <data key="invariant.scope">whiteheat_firmware_download</data>
  </node>
  <edge source="N459" target="N436">
   <data key="sourcecode">[(record == 0) == 0]</data>
   <data key="startline">4558</data>
   <data key="startoffset">134938</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N457"/>
  <edge source="N459" target="N457">
   <data key="sourcecode">[!((record == 0) == 0)]</data>
   <data key="startline">4558</data>
   <data key="startoffset">134938</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N463"/>
  <edge source="N457" target="N463">
   <data key="sourcecode">ret = 0;</data>
   <data key="startline">4593</data>
   <data key="startoffset">135908</data>
  </edge>
  <node id="N464"/>
  <edge source="N463" target="N464">
   <data key="sourcecode">response = ezusb_set_reset(serial, (unsigned char)0);</data>
   <data key="startline">4594</data>
   <data key="startoffset">135946</data>
  </edge>
  <node id="N466"/>
  <edge source="N464" target="N466">
   <data key="sourcecode">release_firmware(loader_fw);</data>
   <data key="startline">4598</data>
   <data key="startoffset">136007</data>
  </edge>
  <node id="N467"/>
  <edge source="N466" target="N467">
   <data key="sourcecode">release_firmware(firmware_fw);</data>
   <data key="startline">4599</data>
   <data key="startoffset">136021</data>
  </edge>
  <node id="N300"/>
  <edge source="N467" target="N300">
   <data key="sourcecode">return (ret);</data>
   <data key="startline">4601</data>
   <data key="startoffset">136058</data>
   <data key="returnFrom">whiteheat_firmware_download</data>
  </edge>
  <node id="N2880"/>
  <edge source="N300" target="N2880">
   <data key="startline">7728</data>
   <data key="startoffset">219390</data>
  </edge>
  <node id="N2881"/>
  <edge source="N2880" target="N2881">
   <data key="sourcecode">ldv_check_return_value(res_whiteheat_firmware_download_0);</data>
   <data key="startline">7730</data>
   <data key="startoffset">219612</data>
  </edge>
  <node id="N2884"/>
  <edge source="N2881" target="N2884">
   <data key="sourcecode">[!((res_whiteheat_firmware_download_0 == 0) == 0)]</data>
   <data key="startline">7732</data>
   <data key="startoffset">219674</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2881" target="N2900">
   <data key="sourcecode">[(res_whiteheat_firmware_download_0 == 0) == 0]</data>
   <data key="startline">7732</data>
   <data key="startoffset">219674</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2884" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">ldv_s_whiteheat_fake_device_usb_serial_driver = 0;</data>
   <data key="startline">7737</data>
   <data key="startoffset">219835</data>
  </edge>
  <node id="N10"/>
  <edge source="N436" target="N10">
   <data key="sourcecode">tmp___22 = __fswab32((__be32 )record-&gt;addr);</data>
   <data key="startline">4560</data>
   <data key="startoffset">134962</data>
   <data key="enterFunction">__fswab32</data>
  </edge>
  <node id="N12"/>
  <edge source="N10" target="N12">
   <data key="sourcecode">__u32 tmp ;</data>
   <data key="startline">3749</data>
   <data key="startoffset">105146</data>
  </edge>
  <node id="N1"/>
  <edge source="N12" target="N1">
   <data key="sourcecode">tmp = __arch_swab32(val);</data>
   <data key="startline">3753</data>
   <data key="startoffset">105169</data>
   <data key="enterFunction">__arch_swab32</data>
  </edge>
  <node id="N0"/>
  <edge source="N1" target="N0">
   <data key="sourcecode">return (val);</data>
   <data key="startline">3734</data>
   <data key="startoffset">104659</data>
   <data key="returnFrom">__arch_swab32</data>
  </edge>
  <node id="N13"/>
  <edge source="N0" target="N13">
   <data key="startline">3753</data>
   <data key="startoffset">105169</data>
  </edge>
  <node id="N9"/>
  <edge source="N13" target="N9">
   <data key="sourcecode">return (tmp);</data>
   <data key="startline">3755</data>
   <data key="startoffset">105201</data>
   <data key="returnFrom">__fswab32</data>
  </edge>
  <node id="N366"/>
  <edge source="N9" target="N366">
   <data key="startline">4473</data>
   <data key="startoffset">132707</data>
  </edge>
  <node id="N374"/>
  <edge source="N9" target="N374">
   <data key="startline">4480</data>
   <data key="startoffset">132997</data>
  </edge>
  <node id="N392"/>
  <edge source="N9" target="N392">
   <data key="startline">4504</data>
   <data key="startoffset">133614</data>
  </edge>
  <node id="N413"/>
  <edge source="N9" target="N413">
   <data key="startline">4531</data>
   <data key="startoffset">134067</data>
  </edge>
  <node id="N421"/>
  <edge source="N9" target="N421">
   <data key="startline">4538</data>
   <data key="startoffset">134358</data>
  </edge>
  <node id="N439"/>
  <edge source="N9" target="N439">
   <data key="startline">4560</data>
   <data key="startoffset">134962</data>
  </edge>
  <node id="N448"/>
  <edge source="N9" target="N448">
   <data key="startline">4572</data>
   <data key="startoffset">135204</data>
  </edge>
  <node id="N456"/>
  <edge source="N9" target="N456">
   <data key="startline">4579</data>
   <data key="startoffset">135495</data>
  </edge>
  <edge source="N456" target="N457">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s - ezusb_writememory failed for second firmware step (%d %04X %p %d)\n",
              "whiteheat_firmware_download", response, tmp___21, record-&gt;data, (int )tmp___20);</data>
   <data key="startline">4581</data>
   <data key="startoffset">135691</data>
  </edge>
  <node id="N449"/>
  <edge source="N448" target="N449">
   <data key="sourcecode">response = ezusb_writememory(serial, (int )tmp___19, (unsigned char *)(record-&gt;data),
                                 (int )tmp___18, (__u8 )160);</data>
   <data key="startline">4573</data>
   <data key="startoffset">135253</data>
  </edge>
  <node id="N451"/>
  <edge source="N449" target="N451">
   <data key="sourcecode">[response &lt; 0]</data>
   <data key="startline">4576</data>
   <data key="startoffset">135415</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N452"/>
  <edge source="N449" target="N452">
   <data key="sourcecode">[!(response &lt; 0)]</data>
   <data key="startline">4576</data>
   <data key="startoffset">135415</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N452" target="N459">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">record = record + 1;</data>
   <data key="startline">4587</data>
   <data key="startoffset">135833</data>
  </edge>
  <node id="N6"/>
  <edge source="N451" target="N6">
   <data key="sourcecode">tmp___20 = __fswab16((__be16 )record-&gt;len);</data>
   <data key="startline">4578</data>
   <data key="startoffset">135456</data>
   <data key="enterFunction">__fswab16</data>
  </edge>
  <node id="N5"/>
  <edge source="N6" target="N5">
   <data key="sourcecode">return ((__u16 )((((int )val &amp; 255) &lt;&lt; 8) | (((int )val &amp; 65280) &gt;&gt; 8)));</data>
   <data key="startline">3743</data>
   <data key="startoffset">104944</data>
   <data key="returnFrom">__fswab16</data>
  </edge>
  <node id="N240"/>
  <edge source="N5" target="N240">
   <data key="startline">4173</data>
   <data key="startoffset">117567</data>
  </edge>
  <node id="N244"/>
  <edge source="N5" target="N244">
   <data key="startline">4176</data>
   <data key="startoffset">117717</data>
  </edge>
  <node id="N269"/>
  <edge source="N5" target="N269">
   <data key="startline">4204</data>
   <data key="startoffset">118302</data>
  </edge>
  <node id="N275"/>
  <edge source="N5" target="N275">
   <data key="startline">4212</data>
   <data key="startoffset">118421</data>
  </edge>
  <node id="N364"/>
  <edge source="N5" target="N364">
   <data key="startline">4472</data>
   <data key="startoffset">132660</data>
  </edge>
  <node id="N372"/>
  <edge source="N5" target="N372">
   <data key="startline">4479</data>
   <data key="startoffset">132947</data>
  </edge>
  <node id="N411"/>
  <edge source="N5" target="N411">
   <data key="startline">4530</data>
   <data key="startoffset">134019</data>
  </edge>
  <node id="N419"/>
  <edge source="N5" target="N419">
   <data key="startline">4537</data>
   <data key="startoffset">134308</data>
  </edge>
  <node id="N446"/>
  <edge source="N5" target="N446">
   <data key="startline">4571</data>
   <data key="startoffset">135156</data>
  </edge>
  <node id="N454"/>
  <edge source="N5" target="N454">
   <data key="startline">4578</data>
   <data key="startoffset">135445</data>
  </edge>
  <edge source="N454" target="N10">
   <data key="sourcecode">tmp___21 = __fswab32((__be32 )record-&gt;addr);</data>
   <data key="startline">4579</data>
   <data key="startoffset">135506</data>
   <data key="enterFunction">__fswab32</data>
  </edge>
  <edge source="N446" target="N10">
   <data key="sourcecode">tmp___19 = __fswab32((__be32 )record-&gt;addr);</data>
   <data key="startline">4572</data>
   <data key="startoffset">135204</data>
   <data key="enterFunction">__fswab32</data>
  </edge>
  <edge source="N419" target="N10">
   <data key="sourcecode">tmp___17 = __fswab32((__be32 )record-&gt;addr);</data>
   <data key="startline">4538</data>
   <data key="startoffset">134379</data>
   <data key="enterFunction">__fswab32</data>
  </edge>
  <edge source="N411" target="N10">
   <data key="sourcecode">tmp___15 = __fswab32((__be32 )record-&gt;addr);</data>
   <data key="startline">4531</data>
   <data key="startoffset">134067</data>
   <data key="enterFunction">__fswab32</data>
  </edge>
  <edge source="N372" target="N10">
   <data key="sourcecode">tmp___12 = __fswab32((__be32 )record-&gt;addr);</data>
   <data key="startline">4480</data>
   <data key="startoffset">133008</data>
   <data key="enterFunction">__fswab32</data>
  </edge>
  <edge source="N364" target="N10">
   <data key="sourcecode">tmp___10 = __fswab32((__be32 )record-&gt;addr);</data>
   <data key="startline">4473</data>
   <data key="startoffset">132707</data>
   <data key="enterFunction">__fswab32</data>
  </edge>
  <edge source="N275" target="N276">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">ofs = ofs + (((sizeof(*rec) + (unsigned long )((int )tmp___8)) + 3UL) &amp; 0x0ffffffffffffffcUL);</data>
   <data key="startline">4213</data>
   <data key="startoffset">118537</data>
  </edge>
  <node id="N271"/>
  <edge source="N269" target="N271">
   <data key="sourcecode">[(((int)tmp___7) == 0) == 0]</data>
   <data key="startline">4206</data>
   <data key="startoffset">118356</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N272"/>
  <edge source="N269" target="N272">
   <data key="sourcecode">[!((((int)tmp___7) == 0) == 0)]</data>
   <data key="startline">4206</data>
   <data key="startoffset">118356</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N272" target="N251">
   <data key="sourcecode">return (0);</data>
   <data key="startline">4209</data>
   <data key="startoffset">118401</data>
   <data key="returnFrom">ihex_validate_fw</data>
  </edge>
  <edge source="N271" target="N6">
   <data key="sourcecode">tmp___8 = __fswab16((__be16 )rec-&gt;len);</data>
   <data key="startline">4212</data>
   <data key="startoffset">118431</data>
   <data key="enterFunction">__fswab16</data>
  </edge>
  <node id="N246"/>
  <edge source="N244" target="N246">
   <data key="sourcecode">[(((int)tmp___10) == 0) == 0]</data>
   <data key="startline">4178</data>
   <data key="startoffset">117774</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N247"/>
  <edge source="N244" target="N247">
   <data key="sourcecode">[!((((int)tmp___10) == 0) == 0)]</data>
   <data key="startline">4178</data>
   <data key="startoffset">117774</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N249"/>
  <edge source="N247" target="N249">
   <data key="sourcecode">tmp___9 = (struct ihex_binrec const *)((void *)0);</data>
   <data key="startline">4181</data>
   <data key="startoffset">117859</data>
  </edge>
  <node id="N232"/>
  <edge source="N249" target="N232">
   <data key="sourcecode">return (tmp___9);</data>
   <data key="startline">4183</data>
   <data key="startoffset">117885</data>
   <data key="returnFrom">ihex_next_binrec</data>
  </edge>
  <edge source="N232" target="N377">
   <data key="enterLoopHead">true</data>
   <data key="startline">4489</data>
   <data key="startoffset">133327</data>
  </edge>
  <edge source="N232" target="N398">
   <data key="enterLoopHead">true</data>
   <data key="startline">4515</data>
   <data key="startoffset">133808</data>
  </edge>
  <edge source="N246" target="N249">
   <data key="sourcecode">tmp___9 = rec;</data>
   <data key="startline">4179</data>
   <data key="startoffset">117790</data>
  </edge>
  <node id="N241"/>
  <edge source="N240" target="N241">
   <data key="sourcecode">next = (((int )tmp___7 + 5) &amp; -4) - 2;</data>
   <data key="startline">4174</data>
   <data key="startoffset">117609</data>
  </edge>
  <node id="N242"/>
  <edge source="N241" target="N242">
   <data key="sourcecode">rec = (struct ihex_binrec const *)((void *)(&amp; rec-&gt;data[next]));</data>
   <data key="startline">4175</data>
   <data key="startoffset">117650</data>
  </edge>
  <edge source="N242" target="N6">
   <data key="sourcecode">tmp___10 = __fswab16((__be16 )rec-&gt;len);</data>
   <data key="startline">4176</data>
   <data key="startoffset">117728</data>
   <data key="enterFunction">__fswab16</data>
  </edge>
  <node id="N441"/>
  <edge source="N439" target="N441">
   <data key="sourcecode">[tmp___22 &lt; 6976U]</data>
   <data key="startline">4562</data>
   <data key="startoffset">135025</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N439" target="N457">
   <data key="sourcecode">[!(tmp___22 &lt; 6976U)]</data>
   <data key="startline">4562</data>
   <data key="startoffset">135025</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N441" target="N6">
   <data key="sourcecode">tmp___18 = __fswab16((__be16 )record-&gt;len);</data>
   <data key="startline">4571</data>
   <data key="startoffset">135167</data>
   <data key="enterFunction">__fswab16</data>
  </edge>
  <edge source="N421" target="N422">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s - ezusb_writememory failed for first firmware step (%d %04X %p %d)\n",
              "whiteheat_firmware_download", response, tmp___17, record-&gt;data, (int )tmp___16);</data>
   <data key="startline">4540</data>
   <data key="startoffset">134604</data>
  </edge>
  <node id="N414"/>
  <edge source="N413" target="N414">
   <data key="sourcecode">response = ezusb_writememory(serial, (int )tmp___15, (unsigned char *)(record-&gt;data),
                                 (int )tmp___14, (__u8 )163);</data>
   <data key="startline">4532</data>
   <data key="startoffset">134127</data>
  </edge>
  <node id="N416"/>
  <edge source="N414" target="N416">
   <data key="sourcecode">[response &lt; 0]</data>
   <data key="startline">4535</data>
   <data key="startoffset">134278</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N417"/>
  <edge source="N414" target="N417">
   <data key="sourcecode">[!(response &lt; 0)]</data>
   <data key="startline">4535</data>
   <data key="startoffset">134278</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N417" target="N424">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">record = record + 1;</data>
   <data key="startline">4546</data>
   <data key="startoffset">134695</data>
  </edge>
  <edge source="N416" target="N6">
   <data key="sourcecode">tmp___16 = __fswab16((__be16 )record-&gt;len);</data>
   <data key="startline">4537</data>
   <data key="startoffset">134319</data>
   <data key="enterFunction">__fswab16</data>
  </edge>
  <node id="N394"/>
  <edge source="N392" target="N394">
   <data key="sourcecode">[tmp___13 &lt; 6976U]</data>
   <data key="startline">4506</data>
   <data key="startoffset">133677</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N392" target="N424">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">[!(tmp___13 &lt; 6976U)]</data>
   <data key="startline">4506</data>
   <data key="startoffset">133677</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N233"/>
  <edge source="N394" target="N233">
   <data key="sourcecode">record = ihex_next_binrec(record);</data>
   <data key="startline">4515</data>
   <data key="startoffset">133808</data>
   <data key="enterFunction">ihex_next_binrec</data>
  </edge>
  <node id="N235"/>
  <edge source="N233" target="N235">
   <data key="sourcecode">int next ;</data>
   <data key="startline">4166</data>
   <data key="startoffset">117470</data>
  </edge>
  <node id="N236"/>
  <edge source="N235" target="N236">
   <data key="sourcecode">__u16 tmp___7 ;</data>
   <data key="startline">4167</data>
   <data key="startoffset">117483</data>
  </edge>
  <node id="N237"/>
  <edge source="N236" target="N237">
   <data key="sourcecode">struct ihex_binrec const *tmp___9 ;</data>
   <data key="startline">4168</data>
   <data key="startoffset">117501</data>
  </edge>
  <node id="N238"/>
  <edge source="N237" target="N238">
   <data key="sourcecode">__u16 tmp___10 ;</data>
   <data key="startline">4169</data>
   <data key="startoffset">117539</data>
  </edge>
  <edge source="N238" target="N6">
   <data key="sourcecode">tmp___7 = __fswab16((__be16 )rec-&gt;len);</data>
   <data key="startline">4173</data>
   <data key="startoffset">117567</data>
   <data key="enterFunction">__fswab16</data>
  </edge>
  <edge source="N374" target="N375">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s - ezusb_writememory failed for loader (%d %04X %p %d)\n",
              "whiteheat_firmware_download", response, tmp___12, record-&gt;data, (int )tmp___11);</data>
   <data key="startline">4481</data>
   <data key="startoffset">133082</data>
  </edge>
  <node id="N367"/>
  <edge source="N366" target="N367">
   <data key="sourcecode">response = ezusb_writememory(serial, (int )tmp___10, (unsigned char *)(record-&gt;data),
                                 (int )tmp___9, (__u8 )160);</data>
   <data key="startline">4475</data>
   <data key="startoffset">132890</data>
  </edge>
  <node id="N369"/>
  <edge source="N367" target="N369">
   <data key="sourcecode">[response &lt; 0]</data>
   <data key="startline">4477</data>
   <data key="startoffset">132917</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N370"/>
  <edge source="N367" target="N370">
   <data key="sourcecode">[!(response &lt; 0)]</data>
   <data key="startline">4477</data>
   <data key="startoffset">132917</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N370" target="N233">
   <data key="sourcecode">record = ihex_next_binrec(record);</data>
   <data key="startline">4489</data>
   <data key="startoffset">133353</data>
   <data key="enterFunction">ihex_next_binrec</data>
  </edge>
  <edge source="N369" target="N6">
   <data key="sourcecode">tmp___11 = __fswab16((__be16 )record-&gt;len);</data>
   <data key="startline">4479</data>
   <data key="startoffset">132958</data>
   <data key="enterFunction">__fswab16</data>
  </edge>
  <edge source="N407" target="N6">
   <data key="sourcecode">tmp___14 = __fswab16((__be16 )record-&gt;len);</data>
   <data key="startline">4530</data>
   <data key="startoffset">134030</data>
   <data key="enterFunction">__fswab16</data>
  </edge>
  <edge source="N389" target="N10">
   <data key="sourcecode">tmp___13 = __fswab32((__be32 )record-&gt;addr);</data>
   <data key="startline">4504</data>
   <data key="startoffset">133635</data>
   <data key="enterFunction">__fswab32</data>
  </edge>
  <edge source="N360" target="N6">
   <data key="sourcecode">tmp___9 = __fswab16((__be16 )record-&gt;len);</data>
   <data key="startline">4472</data>
   <data key="startoffset">132680</data>
   <data key="enterFunction">__fswab16</data>
  </edge>
  <edge source="N347" target="N464">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s - request \"whiteheat_loader.fw\" failed\n",
            "whiteheat_firmware_download");</data>
   <data key="startline">4451</data>
   <data key="startoffset">132259</data>
  </edge>
  <node id="N341"/>
  <edge source="N339" target="N341">
   <data key="sourcecode">[(tmp___7 == 0) == 0]</data>
   <data key="startline">4437</data>
   <data key="startoffset">131899</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N342"/>
  <edge source="N339" target="N342">
   <data key="sourcecode">[!((tmp___7 == 0) == 0)]</data>
   <data key="startline">4437</data>
   <data key="startoffset">131899</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N342" target="N282">
   <data key="sourcecode">tmp___8 = request_ihex_firmware(&amp; loader_fw, "whiteheat_loader.fw", &amp; (serial-&gt;dev)-&gt;dev);</data>
   <data key="startline">4447</data>
   <data key="startoffset">132113</data>
   <data key="enterFunction">request_ihex_firmware</data>
  </edge>
  <edge source="N341" target="N464">
   <data key="sourcecode">dev_err((struct device const *)(&amp; (serial-&gt;dev)-&gt;dev), "%s - request \"whiteheat.fw\" failed\n",
            "whiteheat_firmware_download");</data>
   <data key="startline">4439</data>
   <data key="startoffset">131920</data>
  </edge>
  <node id="N295"/>
  <edge source="N293" target="N295">
   <data key="sourcecode">dev_err((struct device const *)dev, "Firmware \"%s\" not valid IHEX records\n",
            fw_name);</data>
   <data key="startline">4241</data>
   <data key="startoffset">119031</data>
  </edge>
  <node id="N296"/>
  <edge source="N295" target="N296">
   <data key="sourcecode">release_firmware(lfw);</data>
   <data key="startline">4243</data>
   <data key="startoffset">119106</data>
  </edge>
  <edge source="N296" target="N281">
   <data key="sourcecode">return (ret);</data>
   <data key="startline">4245</data>
   <data key="startoffset">119139</data>
   <data key="returnFrom">request_ihex_firmware</data>
  </edge>
  <node id="N267"/>
  <edge source="N264" target="N267">
   <data key="sourcecode">rec = (struct ihex_binrec const *)((void *)(fw-&gt;data + ofs));</data>
   <data key="startline">4203</data>
   <data key="startoffset">118280</data>
  </edge>
  <edge source="N267" target="N6">
   <data key="sourcecode">tmp___7 = __fswab16((__be16 )rec-&gt;len);</data>
   <data key="startline">4204</data>
   <data key="startoffset">118322</data>
   <data key="enterFunction">__fswab16</data>
  </edge>
  <edge source="N288" target="N281">
   <data key="sourcecode">return (ret);</data>
   <data key="startline">4232</data>
   <data key="startoffset">118916</data>
   <data key="returnFrom">request_ihex_firmware</data>
  </edge>
  <edge source="N332" target="N334">
   <data key="sourcecode">printk("&lt;7&gt;%s: %s\n", "/anthill/stuff/tacas-comp/work/current--X--drivers/usb/serial/whiteheat.ko--X--bulklinux-3.0.1--X--68_1/linux-3.0.1/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/usb/serial/whiteheat.c.common.c",
             "whiteheat_firmware_download");</data>
   <data key="startline">4423</data>
   <data key="startoffset">131435</data>
  </edge>
  <node id="N2793"/>
  <edge source="N2790" target="N2793">
   <data key="sourcecode">[!((ldv_s_whiteheat_fake_device_usb_serial_driver == 0) == 0)]</data>
   <data key="startline">7658</data>
   <data key="startoffset">218080</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="N2790" target="N2795">
   <data key="sourcecode">[(ldv_s_whiteheat_fake_device_usb_serial_driver == 0) == 0]</data>
   <data key="startline">7658</data>
   <data key="startoffset">218080</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2793" target="N2795">
   <data key="sourcecode">[(ldv_s_whiteheat_device_usb_serial_driver == 0) == 0]</data>
   <data key="startline">7661</data>
   <data key="startoffset">218109</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2793" target="N2900">
   <data key="sourcecode">[!((ldv_s_whiteheat_device_usb_serial_driver == 0) == 0)]</data>
   <data key="startline">7661</data>
   <data key="startoffset">218109</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N855"/>
  <edge source="N851" target="N855">
   <data key="sourcecode">port = serial-&gt;port[i];</data>
   <data key="startline">5118</data>
   <data key="startoffset">149311</data>
  </edge>
  <edge source="N855" target="N198">
   <data key="sourcecode">tmp___9 = usb_get_serial_port_data(port);</data>
   <data key="startline">5119</data>
   <data key="startoffset">149349</data>
   <data key="enterFunction">usb_get_serial_port_data</data>
  </edge>
  <node id="N891"/>
  <edge source="N888" target="N891">
   <data key="sourcecode">list_del(tmp___7);</data>
   <data key="startline">5158</data>
   <data key="startoffset">150392</data>
  </edge>
  <node id="N892"/>
  <edge source="N891" target="N892">
   <data key="sourcecode">__mptr___0 = (struct list_head const *)tmp___7;</data>
   <data key="startline">5159</data>
   <data key="startoffset">150417</data>
  </edge>
  <node id="N893"/>
  <edge source="N892" target="N893">
   <data key="sourcecode">wrap = (struct whiteheat_urb_wrap *)((char *)__mptr___0 - (unsigned int )(&amp; ((struct whiteheat_urb_wrap *)0)-&gt;list));</data>
   <data key="startline">5160</data>
   <data key="startoffset">150508</data>
  </edge>
  <node id="N894"/>
  <edge source="N893" target="N894">
   <data key="sourcecode">urb = wrap-&gt;urb;</data>
   <data key="startline">5161</data>
   <data key="startoffset">150595</data>
  </edge>
  <node id="N895"/>
  <edge source="N894" target="N895">
   <data key="sourcecode">kfree((void const *)wrap);</data>
   <data key="startline">5162</data>
   <data key="startoffset">150618</data>
  </edge>
  <node id="N897"/>
  <edge source="N895" target="N897">
   <data key="sourcecode">kfree((void const *)urb-&gt;transfer_buffer);</data>
   <data key="startline">5163</data>
   <data key="startoffset">150657</data>
  </edge>
  <edge source="N897" target="N3066">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">usb_free_urb(urb);</data>
   <data key="startline">5164</data>
   <data key="startoffset">150700</data>
   <data key="enterFunction">usb_free_urb</data>
  </edge>
  <node id="N876"/>
  <edge source="N875" target="N876">
   <data key="sourcecode">tmp___7 = tmp2;</data>
   <data key="startline">5140</data>
   <data key="startoffset">150022</data>
  </edge>
  <edge source="N876" target="N877">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">tmp2 = tmp___7-&gt;next;</data>
   <data key="startline">5141</data>
   <data key="startoffset">150051</data>
  </edge>
  <edge source="N798" target="N800">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">j = j - 1;</data>
   <data key="startline">5047</data>
   <data key="startoffset">147879</data>
  </edge>
  <edge source="N786" target="N2570">
   <data key="sourcecode">tmp___7 = list_first(&amp; info-&gt;rx_urbs_free);</data>
   <data key="startline">5031</data>
   <data key="startoffset">147400</data>
   <data key="enterFunction">list_first</data>
  </edge>
  <node id="N3037"/>
  <edge source="N3036" target="N3037">
   <data key="sourcecode">ldv_coherent_state = ldv_coherent_state - 1;</data>
   <data key="startline">7943</data>
   <data key="startoffset">224548</data>
  </edge>
  <node id="N3019"/>
  <edge source="N3037" target="N3019">
   <data key="sourcecode">return;</data>
   <data key="startline">7952</data>
   <data key="startoffset">224683</data>
   <data key="returnFrom">usb_free_coherent</data>
  </edge>
  <edge source="N3094" target="N2988">
   <data key="sourcecode">ldv_blast_assert();</data>
   <data key="startline">8027</data>
   <data key="startoffset">226004</data>
   <data key="enterFunction">ldv_blast_assert</data>
  </edge>
  <node id="N2781"/>
  <edge source="N2779" target="N2781">
   <data key="sourcecode">ldv_s_whiteheat_fake_device_usb_serial_driver = 0;</data>
   <data key="startline">7647</data>
   <data key="startoffset">217799</data>
  </edge>
  <edge source="N2781" target="N2972">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">ldv_s_whiteheat_device_usb_serial_driver = 0;</data>
   <data key="startline">7648</data>
   <data key="startoffset">217895</data>
  </edge>
  <node id="N2742"/>
  <edge source="N2746" target="N2742">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">7480</data>
   <data key="startoffset">207807</data>
   <data key="returnFrom">init_module</data>
  </edge>
  <node id="N2716"/>
  <edge source="N2714" target="N2716">
   <data key="sourcecode">retval = usb_serial_register(&amp; whiteheat_device);</data>
   <data key="startline">7428</data>
   <data key="startoffset">206788</data>
  </edge>
  <node id="N2719"/>
  <edge source="N2716" target="N2719">
   <data key="sourcecode">[!((retval == 0) == 0)]</data>
   <data key="startline">7430</data>
   <data key="startoffset">206839</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2730"/>
  <edge source="N2716" target="N2730">
   <data key="sourcecode">[(retval == 0) == 0]</data>
   <data key="startline">7430</data>
   <data key="startoffset">206839</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N2730" target="N2732">
   <data key="sourcecode">usb_serial_deregister(&amp; whiteheat_fake_device);</data>
   <data key="startline">7453</data>
   <data key="startoffset">207210</data>
  </edge>
  <node id="N178"/>
  <edge source="N2719" target="N178">
   <data key="sourcecode">retval = usb_register(&amp; whiteheat_driver);</data>
   <data key="startline">7436</data>
   <data key="startoffset">206904</data>
   <data key="enterFunction">usb_register</data>
  </edge>
  <node id="N180"/>
  <edge source="N178" target="N180">
   <data key="sourcecode">int tmp___7 ;</data>
   <data key="startline">4056</data>
   <data key="startoffset">113955</data>
  </edge>
  <node id="N181"/>
  <edge source="N180" target="N181">
   <data key="sourcecode">tmp___7 = usb_register_driver(driver, &amp; __this_module, "whiteheat");</data>
   <data key="startline">4060</data>
   <data key="startoffset">113990</data>
  </edge>
  <node id="N177"/>
  <edge source="N181" target="N177">
   <data key="sourcecode">return (tmp___7);</data>
   <data key="startline">4062</data>
   <data key="startoffset">114055</data>
   <data key="returnFrom">usb_register</data>
  </edge>
  <node id="N2721"/>
  <edge source="N177" target="N2721">
   <data key="startline">7436</data>
   <data key="startoffset">206904</data>
  </edge>
  <node id="N2723"/>
  <edge source="N2721" target="N2723">
   <data key="sourcecode">[(retval == 0) == 0]</data>
   <data key="startline">7438</data>
   <data key="startoffset">206957</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N2724"/>
  <edge source="N2721" target="N2724">
   <data key="sourcecode">[!((retval == 0) == 0)]</data>
   <data key="startline">7438</data>
   <data key="startoffset">206957</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N2726"/>
  <edge source="N2724" target="N2726">
   <data key="sourcecode">printk("&lt;6&gt;whiteheat: v2.0:USB ConnectTech WhiteHEAT driver\n");</data>
   <data key="startline">7444</data>
   <data key="startoffset">207026</data>
  </edge>
  <edge source="N2726" target="N2707">
   <data key="sourcecode">return (0);</data>
   <data key="startline">7446</data>
   <data key="startoffset">207090</data>
   <data key="returnFrom">whiteheat_init</data>
  </edge>
  <edge source="N2723" target="N2730">
   <data key="sourcecode">usb_serial_deregister(&amp; whiteheat_device);</data>
   <data key="startline">7449</data>
   <data key="startoffset">207155</data>
  </edge>
 </graph>
</graphml>
