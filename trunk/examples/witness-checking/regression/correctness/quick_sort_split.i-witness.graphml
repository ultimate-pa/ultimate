<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<key id="programfile" attr.name="programfile" for="graph"/>
<key id="sourcecodelang" attr.name="sourcecodelang" for="graph"/>
<key id="creationtime" attr.name="creationtime" for="graph"/>
<key id="witness-type" attr.name="witness-type" for="graph"/>
<key id="entry" attr.name="entry" for="node">
<default>false</default>
</key>
<key id="nodetype" attr.name="nodetype" for="node">
<default>path</default>
</key>
<key id="violation" attr.name="violation" for="node">
<default>false</default>
</key>
<key id="invariant" attr.name="invariant" for="node">
<default>true</default>
</key>
<key id="endline" attr.name="endline" for="edge"/>
<key id="enterLoopHead" attr.name="enterLoopHead" for="edge">
<default>false</default>
</key>
<key id="enterFunction" attr.name="enterFunction" for="edge"/>
<key id="startline" attr.name="startline" for="edge"/>
<key id="returnFrom" attr.name="returnFrom" for="edge"/>
<key id="assumption" attr.name="assumption" for="edge"/>
<key id="tokens" attr.name="tokens" for="edge"/>
<key id="originfile" attr.name="originfile" for="edge">
<default>C:\ultimate\trunk\examples\witnesses\regression\quick_sort_split.i</default>
</key>
<key id="sourcecode" attr.name="sourcecode" for="edge"/>
<graph edgedefault="directed">
<data key="programfile">C:\ultimate\trunk\examples\witnesses\regression\quick_sort_split.i</data>
<data key="sourcecodelang">C</data>
<data key="creationtime">2023-08-02T13:36:14Z</data>
<data key="witness-type">correctness_witness</data>
<node id="N0">
<data key="entry">true</data>
</node>
<node id="N1"/>
<node id="N2"/>
<node id="N3"/>
<node id="N4"/>
<node id="N5"/>
<node id="N6"/>
<node id="N7"/>
<node id="N8"/>
<node id="N9"/>
<node id="N10"/>
<node id="N11"/>
<node id="N12"/>
<node id="N13">
<data key="invariant">((0 == high &amp;&amp; high == 0) &amp;&amp; low == 0) &amp;&amp; low == 0</data>
</node>
<node id="N14"/>
<node id="N15"/>
<node id="N16"/>
<node id="N17">
<data key="invariant">((0 == high &amp;&amp; high == 0) &amp;&amp; low == 0) &amp;&amp; low == 0</data>
</node>
<node id="N18"/>
<node id="N19"/>
<node id="N20"/>
<node id="N21"/>
<node id="N22">
<data key="invariant">((0 == high &amp;&amp; high == 0) &amp;&amp; low == 0) &amp;&amp; low == 0</data>
</node>
<node id="N23"/>
<node id="N24"/>
<node id="N25"/>
<node id="N26"/>
<node id="N27"/>
<node id="N28"/>
<node id="N29"/>
<node id="N30"/>
<node id="N31"/>
<node id="N32"/>
<node id="N33"/>
<node id="N34"/>
<node id="N35"/>
<node id="N36"/>
<node id="N37"/>
<node id="N38"/>
<node id="N39"/>
<node id="N40"/>
<node id="N41"/>
<node id="N42"/>
<node id="N43"/>
<node id="N44"/>
<node id="N45"/>
<node id="N46"/>
<node id="N47"/>
<node id="N48"/>
<node id="N49"/>
<node id="N50"/>
<node id="N51"/>
<node id="N52"/>
<node id="N53"/>
<node id="N54"/>
<node id="N55"/>
<node id="N56"/>
<node id="N57"/>
<node id="N58"/>
<node id="N59"/>
<node id="N60"/>
<node id="N61"/>
<node id="N62"/>
<node id="N63"/>
<edge id="E0" source="N0" target="N1">
<data key="endline">592</data>
<data key="startline">592</data>
<data key="sourcecode">create_list()</data>
</edge>
<edge id="E1" source="N0" target="N2">
<data key="endline">592</data>
<data key="startline">592</data>
<data key="sourcecode">create_list()</data>
</edge>
<edge id="E2" source="N1" target="N3">
<data key="endline">592</data>
<data key="startline">592</data>
<data key="sourcecode">struct node *list = create_list();</data>
</edge>
<edge id="E3" source="N2" target="N4">
<data key="endline">581</data>
<data key="startline">581</data>
<data key="sourcecode">struct node *list = ((void *)0);</data>
</edge>
<edge id="E4" source="N3" target="N5">
<data key="endline">592</data>
<data key="startline">592</data>
<data key="sourcecode">create_list()</data>
</edge>
<edge id="E5" source="N4" target="N6">
<data key="endline">582</data>
<data key="startline">582</data>
<data key="sourcecode">__VERIFIER_nondet_int()</data>
</edge>
<edge id="E6" source="N5" target="N7">
<data key="endline">593</data>
<data key="startline">593</data>
<data key="sourcecode">struct node *low = ((void *)0);</data>
</edge>
<edge id="E7" source="N6" target="N8">
<data key="endline">582</data>
<data key="startline">582</data>
<data key="sourcecode">[__VERIFIER_nondet_int()]</data>
</edge>
<edge id="E8" source="N6" target="N9">
<data key="endline">582</data>
<data key="startline">582</data>
<data key="sourcecode">[!(__VERIFIER_nondet_int())]</data>
</edge>
<edge id="E9" source="N7" target="N10">
<data key="endline">594</data>
<data key="startline">594</data>
<data key="sourcecode">struct node *high = ((void *)0);</data>
</edge>
<edge id="E10" source="N8" target="N11">
<data key="endline">582</data>
<data key="startline">582</data>
<data key="sourcecode">__VERIFIER_nondet_int()</data>
</edge>
<edge id="E11" source="N9" target="N12">
<data key="endline">582</data>
<data key="startline">582</data>
<data key="sourcecode">__VERIFIER_nondet_int()</data>
</edge>
<edge id="E12" source="N10" target="N13">
<data key="endline">595</data>
<data key="enterLoopHead">true</data>
<data key="startline">595</data>
<data key="sourcecode">struct node *p = list;</data>
</edge>
<edge id="E13" source="N11" target="N14">
<data key="endline">589</data>
<data key="startline">589</data>
<data key="sourcecode">\read(*list)</data>
</edge>
<edge id="E14" source="N12" target="N15">
<data key="endline">583</data>
<data key="startline">583</data>
<data key="sourcecode">__VERIFIER_nondet_int()</data>
</edge>
<edge id="E15" source="N13" target="N16">
<data key="endline">596</data>
<data key="startline">596</data>
<data key="sourcecode">[!(\read(*p))]</data>
</edge>
<edge id="E16" source="N13" target="N17">
<data key="endline">596</data>
<data key="enterLoopHead">true</data>
<data key="startline">596</data>
<data key="sourcecode">[\read(*p)]</data>
</edge>
<edge id="E17" source="N14" target="N18">
<data key="endline">589</data>
<data key="startline">589</data>
<data key="sourcecode">return list;</data>
</edge>
<edge id="E18" source="N15" target="N19">
<data key="endline">583</data>
<data key="startline">583</data>
<data key="sourcecode">int v = __VERIFIER_nondet_int();</data>
</edge>
<edge id="E19" source="N16" target="N20">
<data key="endline">597</data>
<data key="startline">597</data>
<data key="sourcecode">p-&gt;value</data>
</edge>
<edge id="E20" source="N17" target="N21">
<data key="endline">603</data>
<data key="startline">603</data>
<data key="sourcecode">[!(\read(*low))]</data>
</edge>
<edge id="E21" source="N17" target="N22">
<data key="endline">603</data>
<data key="enterLoopHead">true</data>
<data key="startline">603</data>
<data key="sourcecode">[\read(*low)]</data>
</edge>
<edge id="E22" source="N18" target="N23">
<data key="endline">589</data>
<data key="startline">589</data>
<data key="sourcecode">\read(*list)</data>
</edge>
<edge id="E23" source="N19" target="N24">
<data key="endline">583</data>
<data key="startline">583</data>
<data key="sourcecode">__VERIFIER_nondet_int()</data>
</edge>
<edge id="E24" source="N20" target="N25">
<data key="endline">597</data>
<data key="startline">597</data>
<data key="sourcecode">struct node *l = p-&gt;value &gt;= 0 ? high : low;</data>
</edge>
<edge id="E25" source="N21" target="N26">
<data key="endline">604</data>
<data key="startline">604</data>
<data key="sourcecode">low-&gt;expected_list</data>
</edge>
<edge id="E26" source="N22" target="N27">
<data key="endline">608</data>
<data key="startline">608</data>
<data key="sourcecode">[!(\read(*high))]</data>
</edge>
<edge id="E27" source="N22" target="N28">
<data key="endline">608</data>
<data key="startline">608</data>
<data key="sourcecode">[\read(*high)]</data>
</edge>
<edge id="E28" source="N23" target="N29">
<data key="endline">581</data>
<data key="startline">581</data>
<data key="sourcecode">struct node *list = ((void *)0);</data>
</edge>
<edge id="E29" source="N24" target="N30">
<data key="endline">584</data>
<data key="startline">584</data>
<data key="sourcecode">[v &lt; 0]</data>
</edge>
<edge id="E30" source="N24" target="N31">
<data key="endline">584</data>
<data key="startline">584</data>
<data key="sourcecode">[!(v &lt; 0)]</data>
</edge>
<edge id="E31" source="N25" target="N32">
<data key="endline">597</data>
<data key="startline">597</data>
<data key="sourcecode">p-&gt;value</data>
</edge>
<edge id="E32" source="N26" target="N33">
<data key="endline">604</data>
<data key="startline">604</data>
<data key="sourcecode">[!(low-&gt;expected_list == -1)]</data>
</edge>
<edge id="E33" source="N26" target="N34">
<data key="endline">604</data>
<data key="startline">604</data>
<data key="sourcecode">[!(!(low-&gt;expected_list == -1))]</data>
</edge>
<edge id="E34" source="N27" target="N35">
<data key="endline">609</data>
<data key="startline">609</data>
<data key="sourcecode">high-&gt;expected_list</data>
</edge>
<edge id="E35" source="N29" target="N36">
<data key="endline">589</data>
<data key="startline">589</data>
<data key="sourcecode">return list;</data>
</edge>
<edge id="E36" source="N30" target="N4">
<data key="endline">585</data>
<data key="startline">585</data>
<data key="sourcecode">append_to_list(&amp;list, v, -1)</data>
</edge>
<edge id="E37" source="N30" target="N37">
<data key="endline">585</data>
<data key="startline">585</data>
<data key="sourcecode">append_to_list(&amp;list, v, -1)</data>
</edge>
<edge id="E38" source="N31" target="N4">
<data key="endline">587</data>
<data key="startline">587</data>
<data key="sourcecode">append_to_list(&amp;list, v, 1)</data>
</edge>
<edge id="E39" source="N31" target="N37">
<data key="endline">587</data>
<data key="startline">587</data>
<data key="sourcecode">append_to_list(&amp;list, v, 1)</data>
</edge>
<edge id="E40" source="N32" target="N38">
<data key="endline">598</data>
<data key="startline">598</data>
<data key="sourcecode">p-&gt;next</data>
</edge>
<edge id="E41" source="N33" target="N39">
<data key="endline">604</data>
<data key="startline">604</data>
<data key="sourcecode">low-&gt;expected_list</data>
</edge>
<edge id="E42" source="N34" target="N40">
<data key="endline">604</data>
<data key="startline">604</data>
<data key="sourcecode">low-&gt;expected_list</data>
</edge>
<edge id="E43" source="N35" target="N41">
<data key="endline">609</data>
<data key="startline">609</data>
<data key="sourcecode">[!(high-&gt;expected_list == 1)]</data>
</edge>
<edge id="E44" source="N35" target="N42">
<data key="endline">609</data>
<data key="startline">609</data>
<data key="sourcecode">[!(!(high-&gt;expected_list == 1))]</data>
</edge>
<edge id="E45" source="N36" target="N1">
<data key="endline">592</data>
<data key="startline">592</data>
<data key="sourcecode">create_list()</data>
</edge>
<edge id="E46" source="N37" target="N43">
<data key="endline">574</data>
<data key="startline">574</data>
<data key="sourcecode">malloc(sizeof(*node))</data>
</edge>
<edge id="E47" source="N38" target="N44">
<data key="endline">598</data>
<data key="startline">598</data>
<data key="sourcecode">struct node *next = p-&gt;next;</data>
</edge>
<edge id="E48" source="N39" target="N45">
<data key="endline">605</data>
<data key="startline">605</data>
<data key="sourcecode">reach_error()</data>
</edge>
<edge id="E49" source="N39" target="N40">
<data key="endline">605</data>
<data key="startline">605</data>
<data key="sourcecode">reach_error()</data>
</edge>
<edge id="E50" source="N40" target="N46">
<data key="endline">606</data>
<data key="startline">606</data>
<data key="sourcecode">low-&gt;next</data>
</edge>
<edge id="E51" source="N41" target="N47">
<data key="endline">609</data>
<data key="startline">609</data>
<data key="sourcecode">high-&gt;expected_list</data>
</edge>
<edge id="E52" source="N42" target="N48">
<data key="endline">609</data>
<data key="startline">609</data>
<data key="sourcecode">high-&gt;expected_list</data>
</edge>
<edge id="E53" source="N43" target="N49">
<data key="endline">574</data>
<data key="startline">574</data>
<data key="sourcecode">struct node *node = malloc(sizeof(*node));</data>
</edge>
<edge id="E54" source="N44" target="N50">
<data key="endline">598</data>
<data key="startline">598</data>
<data key="sourcecode">p-&gt;next</data>
</edge>
<edge id="E55" source="N46" target="N51">
<data key="endline">606</data>
<data key="startline">606</data>
<data key="sourcecode">low = low-&gt;next</data>
</edge>
<edge id="E56" source="N47" target="N52">
<data key="endline">610</data>
<data key="startline">610</data>
<data key="sourcecode">reach_error()</data>
</edge>
<edge id="E57" source="N47" target="N48">
<data key="endline">610</data>
<data key="startline">610</data>
<data key="sourcecode">reach_error()</data>
</edge>
<edge id="E58" source="N48" target="N53">
<data key="endline">611</data>
<data key="startline">611</data>
<data key="sourcecode">high-&gt;next</data>
</edge>
<edge id="E59" source="N49" target="N54">
<data key="endline">574</data>
<data key="startline">574</data>
<data key="sourcecode">malloc(sizeof(*node))</data>
</edge>
<edge id="E60" source="N50" target="N55">
<data key="endline">599</data>
<data key="startline">599</data>
<data key="sourcecode">p-&gt;next = l</data>
</edge>
<edge id="E61" source="N51" target="N17">
<data key="endline">606</data>
<data key="enterLoopHead">true</data>
<data key="startline">606</data>
<data key="sourcecode">low-&gt;next</data>
</edge>
<edge id="E62" source="N53" target="N56">
<data key="endline">611</data>
<data key="startline">611</data>
<data key="sourcecode">high = high-&gt;next</data>
</edge>
<edge id="E63" source="N54" target="N57">
<data key="endline">575</data>
<data key="startline">575</data>
<data key="sourcecode">\read(**list)</data>
</edge>
<edge id="E64" source="N55" target="N58">
<data key="endline">600</data>
<data key="startline">600</data>
<data key="sourcecode">l = p</data>
</edge>
<edge id="E65" source="N56" target="N22">
<data key="endline">611</data>
<data key="enterLoopHead">true</data>
<data key="startline">611</data>
<data key="sourcecode">high-&gt;next</data>
</edge>
<edge id="E66" source="N57" target="N59">
<data key="endline">575</data>
<data key="startline">575</data>
<data key="sourcecode">node-&gt;next = *list</data>
</edge>
<edge id="E67" source="N58" target="N13">
<data key="endline">601</data>
<data key="enterLoopHead">true</data>
<data key="startline">601</data>
<data key="sourcecode">p = next</data>
</edge>
<edge id="E68" source="N59" target="N60">
<data key="endline">575</data>
<data key="startline">575</data>
<data key="sourcecode">\read(**list)</data>
</edge>
<edge id="E69" source="N60" target="N61">
<data key="endline">576</data>
<data key="startline">576</data>
<data key="sourcecode">node-&gt;value = val</data>
</edge>
<edge id="E70" source="N61" target="N62">
<data key="endline">577</data>
<data key="startline">577</data>
<data key="sourcecode">node-&gt;expected_list = exp</data>
</edge>
<edge id="E71" source="N62" target="N63">
<data key="endline">578</data>
<data key="startline">578</data>
<data key="sourcecode">*list = node</data>
</edge>
<edge id="E72" source="N63" target="N4">
<data key="endline">585</data>
<data key="startline">585</data>
<data key="sourcecode">append_to_list(&amp;list, v, -1)</data>
</edge>
<edge id="E73" source="N63" target="N4">
<data key="endline">587</data>
<data key="startline">587</data>
<data key="sourcecode">append_to_list(&amp;list, v, 1)</data>
</edge>
</graph>
</graphml>
