/*
 * 1. linux-4.2.6, drivers/hwmon/stts751.ko, generic:memory
 * 2. Buffer over-read in stts751.ko:
 *  https://lkml.org/lkml/2017/8/10/693
 * 3. callstack:
 *  ldv_partially_ordered_scenario_2()
 *   ldv_partially_ordered_scenario_probe_2_11()
 *     stts751_probe()
 *       tts751_read_chip_config()
 *         i2c_smbus_read_byte_data()
 *   ldv_partially_ordered_scenario_callback_2_4()
 *     stts751_alert()
 *       stts751_update_alert()
 * 4. security: i2c_smbus_read_byte_data function is controled by the user.
 * 5. Buffer over-read. priv->interval is read from device by
 *  stts751_read_chip_config() and could be up to 256. Depends on hardware and
 *  could be exploited by fake device. Source doesn't include
 *  i2c_smbus_read_byte_data() function.
 */

/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 20 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 23 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 29 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 30 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 15 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/int-ll64.h"
typedef signed char s8;
#line 16 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 18 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/int-ll64.h"
typedef short s16;
#line 19 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 21 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/int-ll64.h"
typedef int s32;
#line 22 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 24 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/int-ll64.h"
typedef long long s64;
#line 25 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 14 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;
#line 15 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 27 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 48 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 49 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 71 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 72 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 87 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 88 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;
#line 89 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 90 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 91 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 12 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 15 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 18 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef unsigned short umode_t;
#line 21 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef _Bool bool;
#line 31 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 32 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 45 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 54 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 59 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 69 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __kernel_time_t time_t;
#line 102 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __s32 int32_t;
#line 108 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef __u32 uint32_t;
#line 133 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef unsigned long sector_t;
#line 134 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 157 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef unsigned int gfp_t;
#line 158 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef unsigned int fmode_t;
#line 172 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 176 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 176 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 181 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 181 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 182 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 187
struct hlist_node;
#line 187 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 191 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 202 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head * ) ;
};
#line 32 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
struct device;
#line 34 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/gcc.h"
struct ldv_thread {
   int identifier ;
   void (*function)(void * ) ;
};
#line 64 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/alternative.h"
struct module;
#line 63 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/err.h"
struct attribute_group;
#line 103 "/home/debian/klever/addons/aspectator-d111acf/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.6.0/include/stdarg.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 115 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 83 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/jump_label.h"
struct jump_entry;
#line 83
struct static_key_mod;
#line 83 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/jump_label.h"
union __anonunion____missing_field_name_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 83 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion____missing_field_name_8 __annonCompField4 ;
};
#line 65 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};
#line 166 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/jump_label.h"
struct static_key_true {
   struct static_key key ;
};
#line 275 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/jump_label.h"
struct static_key_false {
   struct static_key key ;
};
#line 306 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/jump_label.h"
union __anonunion_key_9 {
   struct static_key_true dd_key_true ;
   struct static_key_false dd_key_false ;
};
#line 306 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/jump_label.h"
struct _ddebug {
   char const   *modname ;
   char const   *function ;
   char const   *filename ;
   char const   *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
   union __anonunion_key_9 key ;
};
#line 474 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/printk.h"
struct file_operations;
#line 486
struct completion;
#line 487
struct pt_regs;
#line 546 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/percpu.h"
struct task_struct;
#line 20 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};
#line 33 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 34 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t wait_lock ;
};
#line 14 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 15
struct lockdep_map;
#line 23 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 242 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/atomic-long.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 55 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 28 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 53 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 59 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 144 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 207 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 593 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 33 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spinlock_types.h"
struct __anonstruct____missing_field_name_41 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 33 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spinlock_types.h"
union __anonunion____missing_field_name_40 {
   struct raw_spinlock rlock ;
   struct __anonstruct____missing_field_name_41 __annonCompField5 ;
};
#line 33 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion____missing_field_name_40 __annonCompField6 ;
};
#line 76 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 23 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_42 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 23 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_42 rwlock_t;
#line 23
struct mm_struct;
#line 72 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/ptrace.h"
struct __anonstruct____missing_field_name_44 {
   unsigned int a ;
   unsigned int b ;
};
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/ptrace.h"
struct __anonstruct____missing_field_name_45 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int base1 : 8 ;
   unsigned int type : 4 ;
   unsigned int s : 1 ;
   unsigned int dpl : 2 ;
   unsigned int p : 1 ;
   unsigned int limit : 4 ;
   unsigned int avl : 1 ;
   unsigned int l : 1 ;
   unsigned int d : 1 ;
   unsigned int g : 1 ;
   unsigned int base2 : 8 ;
};
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/ptrace.h"
union __anonunion____missing_field_name_43 {
   struct __anonstruct____missing_field_name_44 __annonCompField7 ;
   struct __anonstruct____missing_field_name_45 __annonCompField8 ;
};
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion____missing_field_name_43 __annonCompField9 ;
};
#line 16 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 17 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 21 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 256 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 258 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_47 {
   pgdval_t pgd ;
};
#line 258 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_47 pgd_t;
#line 427
struct page;
#line 427 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 438
struct file;
#line 449
struct seq_file;
#line 485
struct thread_struct;
#line 487
struct cpumask;
#line 247 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/ptrace.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 359 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 15 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 657 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;
#line 22 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 28 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/tracepoint-defs.h"
struct tracepoint {
   char const   *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 233 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/fpu/types.h"
struct __anonstruct____missing_field_name_62 {
   u64 rip ;
   u64 rdp ;
};
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/fpu/types.h"
struct __anonstruct____missing_field_name_63 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/fpu/types.h"
union __anonunion____missing_field_name_61 {
   struct __anonstruct____missing_field_name_62 __annonCompField15 ;
   struct __anonstruct____missing_field_name_63 __annonCompField16 ;
};
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/fpu/types.h"
union __anonunion____missing_field_name_64 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion____missing_field_name_61 __annonCompField17 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion____missing_field_name_64 __annonCompField18 ;
};
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 227 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};
#line 233 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
};
#line 254 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 271 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   union fpregs_state state ;
};
#line 181 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 415
struct perf_event;
#line 420 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_76 {
   unsigned long seg ;
};
#line 420 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_76 mm_segment_t;
#line 421 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   u32 status ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 13 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 39
struct ww_acquire_ctx;
#line 40 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/osq_lock.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 229
struct timespec;
#line 230
struct compat_timespec;
#line 231
struct pollfd;
#line 232 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mutex.h"
struct __anonstruct_futex_78 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 232 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mutex.h"
struct __anonstruct_nanosleep_79 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};
#line 232 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mutex.h"
struct __anonstruct_poll_80 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 232 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mutex.h"
union __anonunion____missing_field_name_77 {
   struct __anonstruct_futex_78 futex ;
   struct __anonstruct_nanosleep_79 nanosleep ;
   struct __anonstruct_poll_80 poll ;
};
#line 232 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mutex.h"
struct restart_block {
   long (*fn)(struct restart_block * ) ;
   union __anonunion____missing_field_name_77 __annonCompField21 ;
};
#line 186 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/cpufeature.h"
struct thread_info {
   unsigned long flags ;
};
#line 408 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spinlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 52 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 108 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 7 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/time64.h"
typedef __s64 time64_t;
#line 28 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/ktime.h"
typedef s64 ktime_t;
#line 65 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/radix-tree.h"
struct radix_tree_root;
#line 65 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/radix-tree.h"
union __anonunion____missing_field_name_98 {
   struct list_head private_list ;
   struct callback_head callback_head ;
};
#line 65 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned char shift ;
   unsigned char offset ;
   unsigned char count ;
   unsigned char exceptional ;
   struct radix_tree_node *parent ;
   struct radix_tree_root *root ;
   union __anonunion____missing_field_name_98 __annonCompField22 ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};
#line 107 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/radix-tree.h"
struct radix_tree_root {
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 566
struct vm_area_struct;
#line 39 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 44 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 97 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_103 {
   unsigned long bits[16U] ;
};
#line 97 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_103 nodemask_t;
#line 249 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 745
struct rw_semaphore;
#line 746 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mmzone.h"
struct rw_semaphore {
   atomic_long_t count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};
#line 179 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rwsem.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 211 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/timer.h"
struct hrtimer;
#line 212
enum hrtimer_restart;
#line 235
struct workqueue_struct;
#line 236
struct work_struct;
#line 54 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 107 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 38 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/mmu.h"
struct ldt_struct;
#line 38
struct vdso_image;
#line 38 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_168 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image  const  *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 38 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_168 mm_context_t;
#line 1269 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mmzone.h"
struct llist_node;
#line 69 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 176 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/idr.h"
struct ida {
   struct radix_tree_root ida_rt ;
};
#line 216 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/idr.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 41 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 100
struct dentry;
#line 101
struct iattr;
#line 102
struct super_block;
#line 103
struct file_system_type;
#line 104
struct kernfs_open_node;
#line 105
struct kernfs_iattrs;
#line 129
struct kernfs_root;
#line 129 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rbtree.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 86 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernfs.h"
struct kernfs_node;
#line 86 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 90
struct kernfs_ops;
#line 90 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops  const  *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 97 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernfs.h"
union __anonunion____missing_field_name_218 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 97 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const   *name ;
   struct rb_node rb ;
   void const   *ns ;
   unsigned int hash ;
   union __anonunion____missing_field_name_218 __annonCompField33 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};
#line 139 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root * , int * , char * ) ;
   int (*show_options)(struct seq_file * , struct kernfs_root * ) ;
   int (*mkdir)(struct kernfs_node * , char const   * , umode_t  ) ;
   int (*rmdir)(struct kernfs_node * ) ;
   int (*rename)(struct kernfs_node * , struct kernfs_node * , char const   * ) ;
   int (*show_path)(struct seq_file * , struct kernfs_node * , struct kernfs_root * ) ;
};
#line 158 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 174
struct vm_operations_struct;
#line 174 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct  const  *vm_ops ;
};
#line 194 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file * ) ;
   void (*release)(struct kernfs_open_file * ) ;
   int (*seq_show)(struct seq_file * , void * ) ;
   void *(*seq_start)(struct seq_file * , loff_t * ) ;
   void *(*seq_next)(struct seq_file * , void * , loff_t * ) ;
   void (*seq_stop)(struct seq_file * , void * ) ;
   ssize_t (*read)(struct kernfs_open_file * , char * , size_t  , loff_t  ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file * , char * , size_t  , loff_t  ) ;
   int (*mmap)(struct kernfs_open_file * , struct vm_area_struct * ) ;
   struct lock_class_key lockdep_key ;
};
#line 296
struct inode;
#line 521
struct sock;
#line 522
struct kobject;
#line 523
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 529 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 83 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/highuid.h"
struct user_namespace;
#line 22 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uidgid.h"
struct __anonstruct_kuid_t_221 {
   uid_t val ;
};
#line 22 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_221 kuid_t;
#line 27 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uidgid.h"
struct __anonstruct_kgid_t_222 {
   gid_t val ;
};
#line 27 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_222 kgid_t;
#line 139 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uidgid.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   struct timespec btime ;
   u64 blocks ;
};
#line 49 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/stat.h"
struct bin_attribute;
#line 50 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/stat.h"
struct attribute {
   char const   *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 37 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   umode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   umode_t (*is_bin_visible)(struct kobject * , struct bin_attribute * , int  ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 92 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 165 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
};
#line 530 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sysfs.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 41 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/refcount.h"
struct kref {
   refcount_t refcount ;
};
#line 42 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kobject.h"
enum kobject_action {
    KOBJ_ADD = 0,
    KOBJ_REMOVE = 1,
    KOBJ_CHANGE = 2,
    KOBJ_MOVE = 3,
    KOBJ_ONLINE = 4,
    KOBJ_OFFLINE = 5,
    KOBJ_MAX = 6
} ;
#line 52
struct kset;
#line 52
struct kobj_type;
#line 52 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 115 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 123 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 131 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 148 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 223
struct klist_node;
#line 37 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 93 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/bit_spinlock.h"
struct hlist_bl_node;
#line 93 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/bit_spinlock.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 36 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 114 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rculist_bl.h"
struct __anonstruct____missing_field_name_270 {
   spinlock_t lock ;
   int count ;
};
#line 114 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rculist_bl.h"
union __anonunion____missing_field_name_269 {
   struct __anonstruct____missing_field_name_270 __annonCompField34 ;
};
#line 114 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion____missing_field_name_269 __annonCompField35 ;
};
#line 77 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/stringhash.h"
struct path;
#line 78
struct vfsmount;
#line 79 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/stringhash.h"
struct __anonstruct____missing_field_name_272 {
   u32 hash ;
   u32 len ;
};
#line 79 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/stringhash.h"
union __anonunion____missing_field_name_271 {
   struct __anonstruct____missing_field_name_272 __annonCompField36 ;
   u64 hash_len ;
};
#line 79 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/stringhash.h"
struct qstr {
   union __anonunion____missing_field_name_271 __annonCompField37 ;
   unsigned char const   *name ;
};
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/dcache.h"
struct dentry_operations;
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/dcache.h"
union __anonunion____missing_field_name_273 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/dcache.h"
union __anonunion_d_u_274 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion____missing_field_name_273 __annonCompField38 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_274 d_u ;
};
#line 122 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_weak_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_hash)(struct dentry  const  * , struct qstr * ) ;
   int (*d_compare)(struct dentry  const  * , unsigned int  , char const   * , struct qstr  const  * ) ;
   int (*d_delete)(struct dentry  const  * ) ;
   int (*d_init)(struct dentry * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_prune)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
   struct vfsmount *(*d_automount)(struct path * ) ;
   int (*d_manage)(struct path  const  * , bool  ) ;
   struct dentry *(*d_real)(struct dentry * , struct inode  const  * , unsigned int  ) ;
};
#line 593 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 19 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/path.h"
struct mem_cgroup;
#line 19 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/path.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};
#line 27 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker * , struct shrink_control * ) ;
   unsigned long (*scan_objects)(struct shrinker * , struct shrink_control * ) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};
#line 80 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/shrinker.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 32 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};
#line 37 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};
#line 47 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};
#line 189
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 196
struct pid_namespace;
#line 196 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/list_lru.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 56 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 68 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 22 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 25 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 45 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 38 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
} ;
#line 44 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/fiemap.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 32 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rcuwait.h"
enum rcu_sync_type {
    RCU_SYNC = 0,
    RCU_SCHED_SYNC = 1,
    RCU_BH_SYNC = 2
} ;
#line 38 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rcuwait.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   int cb_state ;
   struct callback_head cb_head ;
   enum rcu_sync_type gp_type ;
};
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rcu_sync.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 144 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/percpu-rwsem.h"
struct delayed_call {
   void (*fn)(void * ) ;
   void *arg ;
};
#line 283 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/fs.h"
struct backing_dev_info;
#line 284
struct bdi_writeback;
#line 286
struct export_operations;
#line 289
struct kiocb;
#line 290
struct pipe_inode_info;
#line 291
struct poll_table_struct;
#line 292
struct kstatfs;
#line 293
struct cred;
#line 294
struct swap_info_struct;
#line 295
struct iov_iter;
#line 296
struct fscrypt_info;
#line 297
struct fscrypt_operations;
#line 76 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 213 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 214
struct kqid;
#line 19 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 23 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/projid.h"
struct __anonstruct_kprojid_t_276 {
   projid_t val ;
};
#line 23 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_276 kprojid_t;
#line 181 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
} ;
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
typedef long long qsize_t;
#line 67 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
union __anonunion____missing_field_name_277 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 67 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct kqid {
   union __anonunion____missing_field_name_277 __annonCompField39 ;
   enum quota_type type ;
};
#line 194 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216
struct quota_format_type;
#line 217 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 282 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 309 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block * , int  ) ;
   int (*read_file_info)(struct super_block * , int  ) ;
   int (*write_file_info)(struct super_block * , int  ) ;
   int (*free_file_info)(struct super_block * , int  ) ;
   int (*read_dqblk)(struct dquot * ) ;
   int (*commit_dqblk)(struct dquot * ) ;
   int (*release_dqblk)(struct dquot * ) ;
   int (*get_next_id)(struct super_block * , struct kqid * ) ;
};
#line 321 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   qsize_t *(*get_reserved_space)(struct inode * ) ;
   int (*get_projid)(struct inode * , kprojid_t * ) ;
   int (*get_next_id)(struct super_block * , struct kqid * ) ;
};
#line 338 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 361 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 407 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 418 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 431 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , struct path  const  * ) ;
   int (*quota_off)(struct super_block * , int  ) ;
   int (*quota_enable)(struct super_block * , unsigned int  ) ;
   int (*quota_disable)(struct super_block * , unsigned int  ) ;
   int (*quota_sync)(struct super_block * , int  ) ;
   int (*set_info)(struct super_block * , int  , struct qc_info * ) ;
   int (*get_dqblk)(struct super_block * , struct kqid  , struct qc_dqblk * ) ;
   int (*get_nextdqblk)(struct super_block * , struct kqid * , struct qc_dqblk * ) ;
   int (*set_dqblk)(struct super_block * , struct kqid  , struct qc_dqblk * ) ;
   int (*get_state)(struct super_block * , struct qc_state * ) ;
   int (*rm_xquota)(struct super_block * , unsigned int  ) ;
};
#line 447 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops  const  *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 511 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops  const  *ops[3U] ;
};
#line 540
struct address_space;
#line 541
struct writeback_control;
#line 542 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb * , long  , long  ) ;
   void *private ;
   int ki_flags ;
};
#line 317 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page * , struct writeback_control * ) ;
   int (*readpage)(struct file * , struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page * ) ;
   int (*readpages)(struct file * , struct address_space * , struct list_head * ,
                    unsigned int  ) ;
   int (*write_begin)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                      unsigned int  , struct page ** , void ** ) ;
   int (*write_end)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                    unsigned int  , struct page * , void * ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned int  , unsigned int  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   void (*freepage)(struct page * ) ;
   ssize_t (*direct_IO)(struct kiocb * , struct iov_iter * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * , enum migrate_mode  ) ;
   bool (*isolate_page)(struct page * , isolate_mode_t  ) ;
   void (*putback_page)(struct page * ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , unsigned long  , unsigned long  ) ;
   void (*is_dirty_writeback)(struct page * , bool * , bool * ) ;
   int (*error_remove_page)(struct address_space * , struct page * ) ;
   int (*swap_activate)(struct swap_info_struct * , struct file * , sector_t * ) ;
   void (*swap_deactivate)(struct file * ) ;
};
#line 376 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   gfp_t gfp_mask ;
   struct list_head private_list ;
   void *private_data ;
};
#line 398
struct request_queue;
#line 399
struct hd_struct;
#line 399
struct gendisk;
#line 399 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 515
struct posix_acl;
#line 542
struct inode_operations;
#line 542 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_282 {
   unsigned int const   i_nlink ;
   unsigned int __i_nlink ;
};
#line 542 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_283 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 542
struct file_lock_context;
#line 542
struct cdev;
#line 542 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_284 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 542 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations  const  *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion____missing_field_name_282 __annonCompField40 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion____missing_field_name_283 __annonCompField41 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations  const  *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion____missing_field_name_284 __annonCompField42 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   void *i_private ;
};
#line 803 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 811 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 834 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
union __anonunion_f_u_285 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 834 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct file {
   union __anonunion_f_u_285 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};
#line 919 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
typedef void *fl_owner_t;
#line 920
struct file_lock;
#line 921 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 927 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock * , struct file_lock * ) ;
   unsigned long (*lm_owner_key)(struct file_lock * ) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t  ) ;
   void (*lm_put_owner)(fl_owner_t  ) ;
   void (*lm_notify)(struct file_lock * ) ;
   int (*lm_grant)(struct file_lock * , int  ) ;
   bool (*lm_break)(struct file_lock * ) ;
   int (*lm_change)(struct file_lock * , int  , struct list_head * ) ;
   void (*lm_setup)(struct file_lock * , void ** ) ;
};
#line 954
struct nlm_lockowner;
#line 955 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 14 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;
#line 15 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 19
struct fasync_struct;
#line 19 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_287 {
   struct list_head link ;
   int state ;
};
#line 19 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_286 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_287 afs ;
};
#line 19 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations  const  *fl_ops ;
   struct lock_manager_operations  const  *fl_lmops ;
   union __anonunion_fl_u_286 fl_u ;
};
#line 1007 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1074
struct files_struct;
#line 1227 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1262 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1292
struct super_operations;
#line 1292
struct xattr_handler;
#line 1292
struct mtd_info;
#line 1292 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations  const  *dq_op ;
   struct quotactl_ops  const  *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler  const  **s_xattr ;
   struct fscrypt_operations  const  *s_cop ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations  const  *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
};
#line 1579 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1592
struct dir_context;
#line 1617 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context * , char const   * , int  , loff_t  , u64  , unsigned int  ) ;
   loff_t pos ;
};
#line 1624 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*read_iter)(struct kiocb * , struct iov_iter * ) ;
   ssize_t (*write_iter)(struct kiocb * , struct iov_iter * ) ;
   int (*iterate)(struct file * , struct dir_context * ) ;
   int (*iterate_shared)(struct file * , struct dir_context * ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t  ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , loff_t  , loff_t  , int  ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** , void ** ) ;
   long (*fallocate)(struct file * , int  , loff_t  , loff_t  ) ;
   void (*show_fdinfo)(struct seq_file * , struct file * ) ;
   ssize_t (*copy_file_range)(struct file * , loff_t  , struct file * , loff_t  ,
                              size_t  , unsigned int  ) ;
   int (*clone_file_range)(struct file * , loff_t  , struct file * , loff_t  , u64  ) ;
   ssize_t (*dedupe_file_range)(struct file * , u64  , u64  , struct file * , u64  ) ;
};
#line 1692 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode * , struct dentry * , unsigned int  ) ;
   char const   *(*get_link)(struct dentry * , struct inode * , struct delayed_call * ) ;
   int (*permission)(struct inode * , int  ) ;
   struct posix_acl *(*get_acl)(struct inode * , int  ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   int (*create)(struct inode * , struct dentry * , umode_t  , bool  ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , umode_t  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , umode_t  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ,
                 unsigned int  ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct path  const  * , struct kstat * , u32  , unsigned int  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64  , u64  ) ;
   int (*update_time)(struct inode * , struct timespec * , int  ) ;
   int (*atomic_open)(struct inode * , struct dentry * , struct file * , unsigned int  ,
                      umode_t  , int * ) ;
   int (*tmpfile)(struct inode * , struct dentry * , umode_t  ) ;
   int (*set_acl)(struct inode * , struct posix_acl * , int  ) ;
};
#line 1771 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block * ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * , int  ) ;
   int (*write_inode)(struct inode * , struct writeback_control * ) ;
   int (*drop_inode)(struct inode * ) ;
   void (*evict_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block * , int  ) ;
   int (*freeze_super)(struct super_block * ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*thaw_super)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct dentry * ) ;
   int (*show_devname)(struct seq_file * , struct dentry * ) ;
   int (*show_path)(struct seq_file * , struct dentry * ) ;
   int (*show_stats)(struct seq_file * , struct dentry * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   struct dquot **(*get_dquots)(struct inode * ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
   long (*nr_cached_objects)(struct super_block * , struct shrink_control * ) ;
   long (*free_cached_objects)(struct super_block * , struct shrink_control * ) ;
};
#line 2014 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type * , int  , char const   * , void * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 2356
struct kmem_cache;
#line 835 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/sysctl.h"
struct nsproxy;
#line 226 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sysctl.h"
struct assoc_array_ptr;
#line 226 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sysctl.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 31 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
typedef int32_t key_serial_t;
#line 34 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 35
struct key;
#line 36
struct user_struct;
#line 37
struct signal_struct;
#line 38
struct key_type;
#line 42 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const   *description ;
   size_t desc_len ;
};
#line 91 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 128 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_290 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 128
struct key_user;
#line 128 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_291 {
   time_t expiry ;
   time_t revoked_at ;
};
#line 128 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
struct __anonstruct____missing_field_name_293 {
   struct key_type *type ;
   char *description ;
};
#line 128 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_292 {
   struct keyring_index_key index_key ;
   struct __anonstruct____missing_field_name_293 __annonCompField47 ;
};
#line 128 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
struct __anonstruct____missing_field_name_295 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 128 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_294 {
   union key_payload payload ;
   struct __anonstruct____missing_field_name_295 __annonCompField49 ;
   int reject_error ;
};
#line 128 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion____missing_field_name_290 __annonCompField45 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion____missing_field_name_291 __annonCompField46 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion____missing_field_name_292 __annonCompField48 ;
   union __anonunion____missing_field_name_294 __annonCompField50 ;
   int (*restrict_link)(struct key * , struct key_type  const  * , union key_payload  const  * ) ;
};
#line 380
struct audit_context;
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sem.h"
struct sem_undo_list;
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 12 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kcov.h"
enum kcov_mode {
    KCOV_MODE_DISABLED = 0,
    KCOV_MODE_TRACE = 1
} ;
#line 84 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 299 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/plist.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 12 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};
#line 50
struct hrtimer_clock_base;
#line 51
struct hrtimer_cpu_base;
#line 60
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 65 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
};
#line 113 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};
#line 146 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hres_active : 1 ;
   unsigned int hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};
#line 43 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 44 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/resource.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 24 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_296 {
   unsigned long sig[1U] ;
};
#line 24 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_296 sigset_t;
#line 25
struct siginfo;
#line 38 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 10 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_298 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_299 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_300 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_301 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_304 {
   void *_lower ;
   void *_upper ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
union __anonunion____missing_field_name_303 {
   struct __anonstruct__addr_bnd_304 _addr_bnd ;
   __u32 _pkey ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_302 {
   void *_addr ;
   short _addr_lsb ;
   union __anonunion____missing_field_name_303 __annonCompField51 ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_305 {
   long _band ;
   int _fd ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_306 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_297 {
   int _pad[28U] ;
   struct __anonstruct__kill_298 _kill ;
   struct __anonstruct__timer_299 _timer ;
   struct __anonstruct__rt_300 _rt ;
   struct __anonstruct__sigchld_301 _sigchld ;
   struct __anonstruct__sigfault_302 _sigfault ;
   struct __anonstruct__sigpoll_305 _sigpoll ;
   struct __anonstruct__sigsys_306 _sigsys ;
};
#line 11 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_297 _sifields ;
};
#line 118 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;
#line 21 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 65 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/signal_types.h"
struct vmacache {
   u32 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 41 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 49 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 54 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 61 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct cpumask cpumask ;
   bool flush_required ;
   bool writable ;
};
#line 85 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types_task.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 45 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/task_io_accounting.h"
struct bio_list;
#line 46
struct blk_plug;
#line 47
struct cfs_rq;
#line 48
struct fs_struct;
#line 49
struct futex_pi_state;
#line 50
struct io_context;
#line 51
struct mempolicy;
#line 52
struct nameidata;
#line 53
struct perf_event_context;
#line 55
struct reclaim_state;
#line 56
struct robust_list_head;
#line 59
struct sighand_struct;
#line 60
struct task_delay_info;
#line 61
struct task_group;
#line 187 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 203 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct task_cputime {
   u64 utime ;
   u64 stime ;
   unsigned long long sum_exec_runtime ;
};
#line 220 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 244 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 261 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long util_avg ;
};
#line 322 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 357 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 393
struct rt_rq;
#line 393 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 411 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};
#line 478 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 482
struct sched_class;
#line 482
struct rt_mutex_waiter;
#line 482
struct css_set;
#line 482
struct compat_robust_list_head;
#line 482
struct numa_group;
#line 482
struct ftrace_ret_stack;
#line 482
struct kcov;
#line 482
struct uprobe_task;
#line 482 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int memcg_may_oom : 1 ;
   unsigned int memcg_kmem_skip_account : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred  const  *ptracer_cred ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   int closid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct tlbflush_unmap_batch tlb_ubc ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   enum kcov_mode kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   atomic_t stack_refcount ;
   struct thread_struct thread ;
};
#line 1566 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};
#line 60 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sched/user.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
};
#line 86 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};
#line 369 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/cred.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations  const  *op ;
   int poll_event ;
   struct file  const  *file ;
   void *private ;
};
#line 30 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file * , loff_t * ) ;
   void (*stop)(struct seq_file * , void * ) ;
   void *(*next)(struct seq_file * , void * , loff_t * ) ;
   int (*show)(struct seq_file * , void * ) ;
};
#line 222
struct pinctrl;
#line 223
struct pinctrl_state;
#line 200 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *init_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};
#line 43 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/pinctrl/devinfo.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 58 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 64 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 65 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_late)(struct device * ) ;
   int (*resume_early)(struct device * ) ;
   int (*freeze_late)(struct device * ) ;
   int (*thaw_early)(struct device * ) ;
   int (*poweroff_late)(struct device * ) ;
   int (*restore_early)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 315
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 322
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 330
struct wakeup_source;
#line 331
struct wake_irq;
#line 332
struct pm_domain_data;
#line 333 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 551
struct dev_pm_qos;
#line 551 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int run_wake : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device * , s32  ) ;
   struct dev_pm_qos *qos ;
};
#line 613 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device * , bool  ) ;
   int (*activate)(struct device * ) ;
   void (*sync)(struct device * ) ;
   void (*dismiss)(struct device * ) ;
};
#line 76 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/ratelimit.h"
struct dev_archdata {
   void *iommu ;
};
#line 8 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/device.h"
struct dma_map_ops;
#line 21
struct device_private;
#line 22
struct device_driver;
#line 23
struct driver_private;
#line 24
struct class;
#line 25
struct subsys_private;
#line 26
struct bus_type;
#line 27
struct device_node;
#line 28
struct fwnode_handle;
#line 29
struct iommu_ops;
#line 30
struct iommu_group;
#line 31
struct iommu_fwspec;
#line 62 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct device_attribute;
#line 62 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct bus_type {
   char const   *name ;
   char const   *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group  const  **bus_groups ;
   struct attribute_group  const  **dev_groups ;
   struct attribute_group  const  **drv_groups ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*online)(struct device * ) ;
   int (*offline)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   int (*num_vf)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops  const  *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};
#line 147
struct device_type;
#line 206
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
} ;
#line 212
struct of_device_id;
#line 212
struct acpi_device_id;
#line 212 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id  const  *of_match_table ;
   struct acpi_device_id  const  *acpi_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 362
struct class_attribute;
#line 362 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group  const  **class_groups ;
   struct attribute_group  const  **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 457 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
};
#line 527 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * , kuid_t * , kgid_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 555 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 727 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 790
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
} ;
#line 797 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   enum dl_dev_state status ;
};
#line 817
struct irq_domain;
#line 817
struct dma_coherent_mem;
#line 817
struct cma;
#line 817 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   int numa_node ;
   struct dma_map_ops  const  *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
};
#line 976 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct wakeup_source {
   char const   *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 1452 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
struct sensor_device_attribute {
   struct device_attribute dev_attr ;
   int index ;
};
#line 13 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 187 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 230 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const   *data ;
};
#line 420 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mod_devicetable.h"
struct i2c_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};
#line 20 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root waiters ;
   struct rb_node *waiters_leftmost ;
   struct task_struct *owner ;
   int save_state ;
   char const   *name ;
   char const   *file ;
   int line ;
   void *magic ;
};
#line 100
struct irq_desc;
#line 101
struct irq_data;
#line 13 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irqhandler.h"
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_ACPI_DATA = 3,
    FWNODE_ACPI_STATIC = 4,
    FWNODE_PDATA = 5,
    FWNODE_IRQCHIP = 6
} ;
#line 23 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irqhandler.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};
#line 146 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/property.h"
union __anonunion_pointer_316 {
   void const   *raw_data ;
   u8 const   *u8_data ;
   u16 const   *u16_data ;
   u32 const   *u32_data ;
   u64 const   *u64_data ;
   char const   * const  *str ;
};
#line 146 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/property.h"
union __anonunion_value_317 {
   unsigned long long raw_data ;
   u8 u8_data ;
   u16 u16_data ;
   u32 u32_data ;
   u64 u64_data ;
   char const   *str ;
};
#line 146 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/property.h"
union __anonunion____missing_field_name_315 {
   union __anonunion_pointer_316 pointer ;
   union __anonunion_value_317 value ;
};
#line 146 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/property.h"
struct property_entry {
   char const   *name ;
   size_t length ;
   bool is_array ;
   bool is_string ;
   union __anonunion____missing_field_name_315 __annonCompField52 ;
};
#line 32 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/of.h"
typedef u32 phandle;
#line 34 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};
#line 44 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/of.h"
struct device_node {
   char const   *name ;
   char const   *type ;
   phandle phandle ;
   char const   *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 1291
struct irq_chip;
#line 1292 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/of.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 64 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irqdomain.h"
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_PCI_MSI = 2,
    DOMAIN_BUS_PLATFORM_MSI = 3,
    DOMAIN_BUS_NEXUS = 4,
    DOMAIN_BUS_IPI = 5,
    DOMAIN_BUS_FSL_MC_MSI = 6
} ;
#line 74 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain * , struct device_node * , enum irq_domain_bus_token  ) ;
   int (*select)(struct irq_domain * , struct irq_fwspec * , enum irq_domain_bus_token  ) ;
   int (*map)(struct irq_domain * , unsigned int  , irq_hw_number_t  ) ;
   void (*unmap)(struct irq_domain * , unsigned int  ) ;
   int (*xlate)(struct irq_domain * , struct device_node * , u32 const   * , unsigned int  ,
                unsigned long * , unsigned int * ) ;
   int (*alloc)(struct irq_domain * , unsigned int  , unsigned int  , void * ) ;
   void (*free)(struct irq_domain * , unsigned int  , unsigned int  ) ;
   void (*activate)(struct irq_domain * , struct irq_data * ) ;
   void (*deactivate)(struct irq_domain * , struct irq_data * ) ;
   int (*translate)(struct irq_domain * , struct irq_fwspec * , unsigned long * ,
                    unsigned int * ) ;
};
#line 122
struct irq_domain_chip_generic;
#line 123 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char const   *name ;
   struct irq_domain_ops  const  *ops ;
   void *host_data ;
   unsigned int flags ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct radix_tree_root revmap_tree ;
   unsigned int linear_revmap[] ;
};
#line 468 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irqdomain.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 83 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 41 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
struct i2c_algorithm;
#line 42
struct i2c_adapter;
#line 43
struct i2c_client;
#line 44
struct i2c_driver;
#line 45
struct i2c_board_info;
#line 46
enum i2c_slave_event;
#line 46
enum i2c_slave_event;
#line 129
enum i2c_alert_protocol {
    I2C_PROTOCOL_SMBUS_ALERT = 0,
    I2C_PROTOCOL_SMBUS_HOST_NOTIFY = 1
} ;
#line 134 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
struct i2c_driver {
   unsigned int class ;
   int (*attach_adapter)(struct i2c_adapter * ) ;
   int (*probe)(struct i2c_client * , struct i2c_device_id  const  * ) ;
   int (*remove)(struct i2c_client * ) ;
   int (*probe_new)(struct i2c_client * ) ;
   void (*shutdown)(struct i2c_client * ) ;
   void (*alert)(struct i2c_client * , enum i2c_alert_protocol  , unsigned int  ) ;
   int (*command)(struct i2c_client * , unsigned int  , void * ) ;
   struct device_driver driver ;
   struct i2c_device_id  const  *id_table ;
   int (*detect)(struct i2c_client * , struct i2c_board_info * ) ;
   unsigned short const   *address_list ;
   struct list_head clients ;
};
#line 216 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client * , enum i2c_slave_event  , u8 * ) ;
};
#line 273
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
} ;
#line 294 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
struct i2c_board_info {
   char type[20U] ;
   unsigned short flags ;
   unsigned short addr ;
   void *platform_data ;
   struct dev_archdata *archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   struct property_entry  const  *properties ;
   int irq ;
};
#line 389 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter * , struct i2c_msg * , int  ) ;
   int (*smbus_xfer)(struct i2c_adapter * , u16  , unsigned short  , char  , u8  ,
                     int  , union i2c_smbus_data * ) ;
   u32 (*functionality)(struct i2c_adapter * ) ;
   int (*reg_slave)(struct i2c_client * ) ;
   int (*unreg_slave)(struct i2c_client * ) ;
};
#line 441 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter * , unsigned int  ) ;
   int (*trylock_bus)(struct i2c_adapter * , unsigned int  ) ;
   void (*unlock_bus)(struct i2c_adapter * , unsigned int  ) ;
};
#line 472 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter * ) ;
   int (*get_scl)(struct i2c_adapter * ) ;
   void (*set_scl)(struct i2c_adapter * , int  ) ;
   int (*get_sda)(struct i2c_adapter * ) ;
   void (*prepare_recovery)(struct i2c_adapter * ) ;
   void (*unprepare_recovery)(struct i2c_adapter * ) ;
   int scl_gpio ;
   int sda_gpio ;
};
#line 511 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 541 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm  const  *algo ;
   void *algo_data ;
   struct i2c_lock_operations  const  *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks  const  *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 827
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
} ;
#line 16 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;
#line 30 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/irq_regs.h"
struct msi_msg;
#line 31
enum irqchip_irq_state;
#line 31
enum irqchip_irq_state;
#line 63
struct msi_desc;
#line 64 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/irq_regs.h"
struct irq_common_data {
   unsigned int state_use_accessors ;
   unsigned int node ;
   void *handler_data ;
   struct msi_desc *msi_desc ;
   cpumask_var_t affinity ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irq.h"
struct irq_data {
   u32 mask ;
   unsigned int irq ;
   unsigned long hwirq ;
   struct irq_common_data *common ;
   struct irq_chip *chip ;
   struct irq_domain *domain ;
   struct irq_data *parent_data ;
   void *chip_data ;
};
#line 338 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irq.h"
struct irq_chip {
   struct device *parent_device ;
   char const   *name ;
   unsigned int (*irq_startup)(struct irq_data * ) ;
   void (*irq_shutdown)(struct irq_data * ) ;
   void (*irq_enable)(struct irq_data * ) ;
   void (*irq_disable)(struct irq_data * ) ;
   void (*irq_ack)(struct irq_data * ) ;
   void (*irq_mask)(struct irq_data * ) ;
   void (*irq_mask_ack)(struct irq_data * ) ;
   void (*irq_unmask)(struct irq_data * ) ;
   void (*irq_eoi)(struct irq_data * ) ;
   int (*irq_set_affinity)(struct irq_data * , struct cpumask  const  * , bool  ) ;
   int (*irq_retrigger)(struct irq_data * ) ;
   int (*irq_set_type)(struct irq_data * , unsigned int  ) ;
   int (*irq_set_wake)(struct irq_data * , unsigned int  ) ;
   void (*irq_bus_lock)(struct irq_data * ) ;
   void (*irq_bus_sync_unlock)(struct irq_data * ) ;
   void (*irq_cpu_online)(struct irq_data * ) ;
   void (*irq_cpu_offline)(struct irq_data * ) ;
   void (*irq_suspend)(struct irq_data * ) ;
   void (*irq_resume)(struct irq_data * ) ;
   void (*irq_pm_shutdown)(struct irq_data * ) ;
   void (*irq_calc_mask)(struct irq_data * ) ;
   void (*irq_print_chip)(struct irq_data * , struct seq_file * ) ;
   int (*irq_request_resources)(struct irq_data * ) ;
   void (*irq_release_resources)(struct irq_data * ) ;
   void (*irq_compose_msi_msg)(struct irq_data * , struct msi_msg * ) ;
   void (*irq_write_msi_msg)(struct irq_data * , struct msi_msg * ) ;
   int (*irq_get_irqchip_state)(struct irq_data * , enum irqchip_irq_state  , bool * ) ;
   int (*irq_set_irqchip_state)(struct irq_data * , enum irqchip_irq_state  , bool  ) ;
   int (*irq_set_vcpu_affinity)(struct irq_data * , void * ) ;
   void (*ipi_send_single)(struct irq_data * , unsigned int  ) ;
   void (*ipi_send_mask)(struct irq_data * , struct cpumask  const  * ) ;
   unsigned long flags ;
};
#line 439
struct irq_affinity_notify;
#line 440
struct proc_dir_entry;
#line 441
struct irqaction;
#line 441 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irq.h"
struct irq_desc {
   struct irq_common_data irq_common_data ;
   struct irq_data irq_data ;
   unsigned int *kstat_irqs ;
   void (*handle_irq)(struct irq_desc * ) ;
   struct irqaction *action ;
   unsigned int status_use_accessors ;
   unsigned int core_internal_state__do_not_mess_with_it ;
   unsigned int depth ;
   unsigned int wake_depth ;
   unsigned int irq_count ;
   unsigned long last_unhandled ;
   unsigned int irqs_unhandled ;
   atomic_t threads_handled ;
   int threads_handled_last ;
   raw_spinlock_t lock ;
   struct cpumask *percpu_enabled ;
   struct cpumask  const  *percpu_affinity ;
   struct cpumask  const  *affinity_hint ;
   struct irq_affinity_notify *affinity_notify ;
   cpumask_var_t pending_mask ;
   unsigned long threads_oneshot ;
   atomic_t threads_active ;
   wait_queue_head_t wait_for_threads ;
   unsigned int nr_actions ;
   unsigned int no_suspend_depth ;
   unsigned int cond_suspend_depth ;
   unsigned int force_resume_depth ;
   struct proc_dir_entry *dir ;
   struct callback_head rcu ;
   struct kobject kobj ;
   int parent_irq ;
   struct module *owner ;
   char const   *name ;
};
#line 133 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/asm-generic/sections.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 775 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irq.h"
struct irq_chip_regs {
   unsigned long enable ;
   unsigned long disable ;
   unsigned long mask ;
   unsigned long ack ;
   unsigned long eoi ;
   unsigned long type ;
   unsigned long polarity ;
};
#line 814 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irq.h"
struct irq_chip_type {
   struct irq_chip chip ;
   struct irq_chip_regs regs ;
   void (*handler)(struct irq_desc * ) ;
   u32 type ;
   u32 mask_cache_priv ;
   u32 *mask_cache ;
};
#line 836 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irq.h"
struct irq_chip_generic {
   raw_spinlock_t lock ;
   void *reg_base ;
   u32 (*reg_readl)(void * ) ;
   void (*reg_writel)(u32  , void * ) ;
   void (*suspend)(struct irq_chip_generic * ) ;
   void (*resume)(struct irq_chip_generic * ) ;
   unsigned int irq_base ;
   unsigned int irq_cnt ;
   u32 mask_cache ;
   u32 type_cache ;
   u32 polarity_cache ;
   u32 wake_enabled ;
   u32 wake_active ;
   unsigned int num_ct ;
   void *private ;
   unsigned long installed ;
   unsigned long unused ;
   struct irq_domain *domain ;
   struct list_head list ;
   struct irq_chip_type chip_types[0U] ;
};
#line 892
enum irq_gc_flags {
    IRQ_GC_INIT_MASK_CACHE = 1,
    IRQ_GC_INIT_NESTED_LOCK = 2,
    IRQ_GC_MASK_CACHE_PER_TYPE = 4,
    IRQ_GC_NO_MASK = 8,
    IRQ_GC_BE_IO = 16
} ;
#line 900 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/irq.h"
struct irq_domain_chip_generic {
   unsigned int irqs_per_chip ;
   unsigned int num_chips ;
   unsigned int irq_flags_to_clear ;
   unsigned int irq_flags_to_set ;
   enum irq_gc_flags gc_flags ;
   struct irq_chip_generic *gc[0U] ;
};
#line 93 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/interrupt.h"
struct irqaction {
   irqreturn_t (*handler)(int  , void * ) ;
   void *dev_id ;
   void *percpu_dev_id ;
   struct irqaction *next ;
   irqreturn_t (*thread_fn)(int  , void * ) ;
   struct task_struct *thread ;
   struct irqaction *secondary ;
   unsigned int irq ;
   unsigned int flags ;
   unsigned long thread_flags ;
   unsigned long thread_mask ;
   char const   *name ;
   struct proc_dir_entry *dir ;
};
#line 214 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/interrupt.h"
struct irq_affinity_notify {
   unsigned int irq ;
   struct kref kref ;
   struct work_struct work ;
   void (*notify)(struct irq_affinity_notify * , cpumask_t const   * ) ;
   void (*release)(struct kref * ) ;
};
#line 404
enum irqchip_irq_state {
    IRQCHIP_STATE_PENDING = 0,
    IRQCHIP_STATE_ACTIVE = 1,
    IRQCHIP_STATE_MASKED = 2,
    IRQCHIP_STATE_LINE_LEVEL = 3
} ;
#line 58 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 66
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
} ;
#line 73 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/uprobes.h"
struct __anonstruct____missing_field_name_333 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 73 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/uprobes.h"
struct __anonstruct____missing_field_name_334 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 73 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/uprobes.h"
union __anonunion____missing_field_name_332 {
   struct __anonstruct____missing_field_name_333 __annonCompField63 ;
   struct __anonstruct____missing_field_name_334 __annonCompField64 ;
};
#line 73
struct uprobe;
#line 73
struct return_instance;
#line 73 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion____missing_field_name_332 __annonCompField65 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 95 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 111
struct xol_area;
#line 112 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_335 {
   struct address_space *mapping ;
   void *s_mem ;
   atomic_t compound_mapcount ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_336 {
   unsigned long index ;
   void *freelist ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_340 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_339 {
   atomic_t _mapcount ;
   unsigned int active ;
   struct __anonstruct____missing_field_name_340 __annonCompField68 ;
   int units ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_338 {
   union __anonunion____missing_field_name_339 __annonCompField69 ;
   atomic_t _refcount ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_337 {
   unsigned long counters ;
   struct __anonstruct____missing_field_name_338 __annonCompField70 ;
};
#line 151
struct dev_pagemap;
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_342 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_343 {
   unsigned long compound_head ;
   unsigned int compound_dtor ;
   unsigned int compound_order ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_344 {
   unsigned long __pad ;
   pgtable_t pmd_huge_pte ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_341 {
   struct list_head lru ;
   struct dev_pagemap *pgmap ;
   struct __anonstruct____missing_field_name_342 __annonCompField72 ;
   struct callback_head callback_head ;
   struct __anonstruct____missing_field_name_343 __annonCompField73 ;
   struct __anonstruct____missing_field_name_344 __annonCompField74 ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_345 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
};
#line 151 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/uprobes.h"
struct page {
   unsigned long flags ;
   union __anonunion____missing_field_name_335 __annonCompField66 ;
   union __anonunion____missing_field_name_336 __annonCompField67 ;
   union __anonunion____missing_field_name_337 __annonCompField71 ;
   union __anonunion____missing_field_name_341 __annonCompField75 ;
   union __anonunion____missing_field_name_345 __annonCompField76 ;
   struct mem_cgroup *mem_cgroup ;
};
#line 266 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types.h"
struct userfaultfd_ctx;
#line 266 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 273 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types.h"
struct __anonstruct_shared_346 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 273
struct anon_vma;
#line 273 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_346 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
};
#line 346 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 351 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 357
struct kioctx_table;
#line 358
struct linux_binfmt;
#line 358
struct mmu_notifier_mm;
#line 358 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
};
#line 598 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_hpet_page ;
   long sym_pvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 15 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 16 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 18 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 20 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 21 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 190 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 198 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 219 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 235 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 314 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 326 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 53 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/elf.h"
struct kernel_param;
#line 58 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 62 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/moduleparam.h"
struct kparam_string;
#line 62
struct kparam_array;
#line 62 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/moduleparam.h"
union __anonunion____missing_field_name_351 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 62 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct module *mod ;
   struct kernel_param_ops  const  *ops ;
   u16 const   perm ;
   s8 level ;
   u8 flags ;
   union __anonunion____missing_field_name_351 __annonCompField77 ;
};
#line 83 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 89 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 470 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 211 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/rbtree_latch.h"
struct mod_arch_specific {

};
#line 38 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/module.h"
struct module_param_attrs;
#line 38 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};
#line 49 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 276
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
} ;
#line 283 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 288 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 304 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
};
#line 318 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 326
struct module_sect_attrs;
#line 326
struct module_notes_attrs;
#line 326
struct trace_event_call;
#line 326
struct trace_enum_map;
#line 326 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   s32 const   *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   s32 const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   s32 const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   s32 const   *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol  const  *gpl_future_syms ;
   s32 const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const  *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 84 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
struct stts751_priv {
   struct device *dev ;
   struct i2c_client *client ;
   struct mutex access_lock ;
   u8 interval ;
   int res ;
   int event_max ;
   int event_min ;
   int therm ;
   int hyst ;
   bool smbus_timeout ;
   int temp ;
   unsigned long last_update ;
   unsigned long last_alert_update ;
   u8 config ;
   bool min_alert ;
   bool max_alert ;
   bool therm_trip ;
   bool data_valid ;
   bool alert_valid ;
   bool notify_max ;
   bool notify_min ;
};
#line 835 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
struct ldv_struct_insmod_3 {
   int signal_pending ;
};
#line 61 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
struct ldv_struct_partially_ordered_scenario_2 {
   struct i2c_driver *arg0 ;
   int signal_pending ;
};
#line 212 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/timer.h"
enum hrtimer_restart;
#line 31 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};
#line 152 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/types.h"
typedef u64 dma_addr_t;
#line 13 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;
#line 14 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 15 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 19 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_46 {
   pteval_t pte ;
};
#line 19 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_46 pte_t;
#line 278 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_48 {
   pudval_t pud ;
};
#line 278 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_48 pud_t;
#line 300 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_49 {
   pmdval_t pmd ;
};
#line 300 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_49 pmd_t;
#line 212 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/timer.h"
enum hrtimer_restart;
#line 544 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm_types.h"
struct vm_fault;
#line 67 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kthread.h"
struct kthread_work;
#line 83 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 92 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work * ) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 279 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 342
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
} ;
#line 348 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct * ) ;
   void (*close)(struct vm_area_struct * ) ;
   int (*mremap)(struct vm_area_struct * ) ;
   int (*fault)(struct vm_fault * ) ;
   int (*huge_fault)(struct vm_fault * , enum page_entry_size  ) ;
   void (*map_pages)(struct vm_fault * , unsigned long  , unsigned long  ) ;
   int (*page_mkwrite)(struct vm_fault * ) ;
   int (*pfn_mkwrite)(struct vm_fault * ) ;
   int (*access)(struct vm_area_struct * , unsigned long  , void * , int  , int  ) ;
   char const   *(*name)(struct vm_area_struct * ) ;
   int (*set_policy)(struct vm_area_struct * , struct mempolicy * ) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct * , unsigned long  ) ;
   struct page *(*find_special_page)(struct vm_area_struct * , unsigned long  ) ;
};
#line 2548 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 21 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 406
struct dma_chan;
#line 407
struct spi_master;
#line 408
struct spi_transfer;
#line 409
struct spi_flash_read_message;
#line 35 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 85 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
   struct spi_statistics statistics ;
};
#line 222
struct spi_message;
#line 276 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   size_t (*max_transfer_size)(struct spi_device * ) ;
   size_t (*max_message_size)(struct spi_device * ) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device * ) ;
   int (*transfer)(struct spi_device * , struct spi_message * ) ;
   void (*cleanup)(struct spi_device * ) ;
   bool (*can_dma)(struct spi_master * , struct spi_device * , struct spi_transfer * ) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master * ) ;
   int (*transfer_one_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_transfer_hardware)(struct spi_master * ) ;
   int (*prepare_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_message)(struct spi_master * , struct spi_message * ) ;
   int (*spi_flash_read)(struct spi_device * , struct spi_flash_read_message * ) ;
   bool (*flash_read_supported)(struct spi_device * ) ;
   void (*set_cs)(struct spi_device * , bool  ) ;
   int (*transfer_one)(struct spi_master * , struct spi_device * , struct spi_transfer * ) ;
   void (*handle_err)(struct spi_master * , struct spi_message * ) ;
   int *cs_gpios ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_master * , unsigned int  ) ;
};
#line 643 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spi/spi.h"
struct spi_transfer {
   void const   *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};
#line 768 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void * ) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 1148 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/spi/spi.h"
struct spi_flash_read_message {
   void *buf ;
   loff_t from ;
   size_t len ;
   size_t retlen ;
   u8 read_opcode ;
   u8 addr_width ;
   u8 dummy_bytes ;
   u8 opcode_nbits ;
   u8 addr_nbits ;
   u8 data_nbits ;
   struct sg_table rx_sg ;
   bool cur_msg_mapped ;
};
#line 25 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/thread.h"
struct ldv_thread_set {
   int number ;
   struct ldv_thread **threads ;
};
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 31 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/ldv/common.h"
extern void ldv_initialize(void) ;
#line 47
int ldv_post_init(int init_ret_val ) ;
#line 75
int ldv_filter_err_code(int ret_val ) ;
#line 110
extern void ldv_check_final_state(void) ;
#line 24 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_ptr_err(void const   *ptr ) ;
#line 23 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_assume(int  ) ;
#line 32 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.h"
void ldv_free(void *s ) ;
#line 34
void *ldv_xmalloc(size_t size ) ;
#line 37
extern void *external_allocated_data(void) ;
#line 39
void *ldv_malloc_unknown_size(void) ;
#line 40
void *ldv_calloc_unknown_size(void) ;
#line 47
void *ldv_xmalloc_unknown_size(size_t size ) ;
#line 22 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_int(void) ;
#line 27
int ldv_undef_int_negative(void) ;
#line 12 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
extern void ldv_check_alloc_flags(gfp_t  ) ;
#line 16 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void *ldv_alloc_macro(gfp_t flags ) 
{ 
  void *tmp ;

  {
  {
#line 18
  ldv_check_alloc_flags(flags);
#line 19
  tmp = ldv_malloc_unknown_size();
  }
#line 19
  return (tmp);
}
}
#line 32 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/err.h"
__inline static long PTR_ERR(void const   *ptr ) ;
#line 41 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/err.h"
__inline static bool IS_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 43
  tmp = __builtin_expect((unsigned long )ptr > 0xfffffffffffff000UL, 0L);
  }
#line 43
  return (tmp != 0L);
}
}
#line 56 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/err.h"
__inline static int PTR_ERR_OR_ZERO(void const   *ptr ) 
{ 
  long tmp ;
  bool tmp___0 ;

  {
  {
#line 58
  tmp___0 = IS_ERR(ptr);
  }
#line 58
  if ((int )tmp___0) {
    {
#line 59
    tmp = PTR_ERR(ptr);
    }
#line 59
    return ((int )tmp);
  } else {
#line 61
    return (0);
  }
}
}
#line 374 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/hwmon.h"
extern struct device *devm_hwmon_device_register_with_groups(struct device * , char const   * ,
                                                             void * , struct attribute_group  const  ** ) ;
#line 34 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/export.h"
extern struct module __this_module ;
#line 33 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key , bool branch ) 
{ 


  {
#line 35
  __asm__  volatile   ("":);
#line 43
  return (0);

#line 45
  return (1);
}
}
#line 63 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/dynamic_debug.h"
extern void __dynamic_dev_dbg(struct _ddebug * , struct device  const  * , char const   * 
                              , ...) ;
#line 282 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernel.h"
extern int kstrtoull(char const   * , unsigned int  , unsigned long long * ) ;
#line 283
extern int kstrtoll(char const   * , unsigned int  , long long * ) ;
#line 301 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernel.h"
__inline static int kstrtoul(char const   *s , unsigned int base , unsigned long *res ) 
{ 
  int tmp ;

  {
  {
#line 309
  tmp = kstrtoull(s, base, (unsigned long long *)res);
  }
#line 309
  return (tmp);
}
}
#line 330 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kernel.h"
__inline static int kstrtol(char const   *s , unsigned int base , long *res ) 
{ 
  int tmp ;

  {
  {
#line 338
  tmp = kstrtoll(s, base, (long long *)res);
  }
#line 338
  return (tmp);
}
}
#line 418
extern int snprintf(char * , size_t  , char const   *  , ...) ;
#line 27 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/string.h"
extern size_t strlcpy(char * , char const   * , size_t  ) ;
#line 133 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/mutex.h"
extern void __mutex_init(struct mutex * , char const   * , struct lock_class_key * ) ;
#line 155
extern void mutex_lock_nested(struct mutex * , unsigned int  ) ;
#line 195
extern void mutex_unlock(struct mutex * ) ;
#line 78 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/jiffies.h"
extern unsigned long volatile   jiffies ;
#line 298
extern unsigned long __msecs_to_jiffies(unsigned int const    ) ;
#line 360 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const   m ) 
{ 
  unsigned long tmp___0 ;

  {
  {
#line 367
  tmp___0 = __msecs_to_jiffies(m);
  }
#line 367
  return (tmp___0);
}
}
#line 285 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/sysfs.h"
extern void sysfs_notify(struct kobject * , char const   * , char const   * ) ;
#line 215 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/kobject.h"
extern int kobject_uevent(struct kobject * , enum kobject_action  ) ;
#line 673 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
__inline static void *ldv_devm_kzalloc_18(struct device *dev , size_t size , gfp_t gfp ) ;
#line 1026 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 1028
  return ((void *)dev->driver_data);
}
}
#line 1031 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev , void *data ) 
{ 


  {
#line 1033
  dev->driver_data = data;
#line 1034
  return;
}
}
#line 1262
extern void dev_warn(struct device  const  * , char const   *  , ...) ;
#line 1264
extern void dev_notice(struct device  const  * , char const   *  , ...) ;
#line 36 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/property.h"
extern bool device_property_present(struct device * , char const   * ) ;
#line 87 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/property.h"
__inline static bool device_property_read_bool(struct device *dev , char const   *propname ) 
{ 
  bool tmp ;

  {
  {
#line 90
  tmp = device_property_present(dev, propname);
  }
#line 90
  return (tmp);
}
}
#line 92 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
extern s32 i2c_smbus_read_byte_data(struct i2c_client  const  * , u8  ) ;
#line 94
extern s32 i2c_smbus_write_byte_data(struct i2c_client  const  * , u8  , u8  ) ;
#line 264 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
__inline static void *i2c_get_clientdata(struct i2c_client  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 266
  tmp = dev_get_drvdata(& dev->dev);
  }
#line 266
  return (tmp);
}
}
#line 269 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
__inline static void i2c_set_clientdata(struct i2c_client *dev , void *data ) 
{ 


  {
  {
#line 271
  dev_set_drvdata(& dev->dev, data);
  }
#line 272
  return;
}
}
#line 704
static int ldv_i2c_register_driver_19(struct module *ldv_func_arg1 , struct i2c_driver *ldv_func_arg2 ) ;
#line 706
extern void i2c_del_driver(struct i2c_driver * ) ;
#line 727 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
__inline static u32 i2c_get_functionality(struct i2c_adapter *adap ) 
{ 
  u32 tmp ;

  {
  {
#line 729
  tmp = (*((adap->algo)->functionality))(adap);
  }
#line 729
  return (tmp);
}
}
#line 733 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/include/linux/i2c.h"
__inline static int i2c_check_functionality(struct i2c_adapter *adap , u32 func ) 
{ 
  u32 tmp ;

  {
  {
#line 735
  tmp = i2c_get_functionality(adap);
  }
#line 735
  return ((tmp & func) == func);
}
}
#line 40 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static unsigned short const   normal_i2c[9U]  = 
#line 40 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
  {      72U,      73U,      56U,      57U, 
        74U,      75U,      58U,      59U, 
        65534U};
#line 79 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int const   stts751_intervals[10U]  = 
#line 79
  {      16000,      8000,      4000,      2000, 
        1000,      500,      250,      125, 
        63,      31};
#line 83 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct i2c_device_id  const  stts751_id[2U]  = {      {{'s', 't', 't', 's', '7', '5', '1', '\000'}, 0UL}};
#line 110 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_to_deg(s16 hw_val ) 
{ 


  {
#line 112
  return (((int )hw_val * 125) / 32);
}
}
#line 115 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static s32 stts751_to_hw(int val ) 
{ 
  int __x ;
  int __d ;

  {
#line 117
  __x = val;
#line 117
  __d = 125;
#line 117
  return (((__x <= 0) ^ (__d > 0) ? (__d / 2 + __x) / __d : (__x - __d / 2) / __d) * 32);
}
}
#line 120 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_adjust_resolution(struct stts751_priv *priv ) 
{ 
  u8 res ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp ;
  int tmp___0 ;
  s32 tmp___3 ;

  {
  {
#line 125
  if ((int )priv->interval == 9) {
#line 125
    goto case_9;
  } else {

  }
#line 129
  if ((int )priv->interval == 8) {
#line 129
    goto case_8;
  } else {

  }
#line 133
  goto switch_default;
  case_9: /* CIL Label */ 
#line 127
  res = 0U;
#line 128
  goto ldv_29905;
  case_8: /* CIL Label */ 
#line 131
  res = 1U;
#line 132
  goto ldv_29905;
  switch_default: /* CIL Label */ 
#line 135
  res = 3U;
#line 136
  goto ldv_29905;
  switch_break: /* CIL Label */ ;
  }
  ldv_29905: ;
#line 139
  if (priv->res == (int )res) {
#line 140
    return (0);
  } else {

  }
  {
#line 142
  priv->config = (unsigned int )priv->config & 243U;
#line 143
  priv->config = (u8 )((int )((signed char )priv->config) | (int )((signed char )((int )res << 2)));
#line 144
  descriptor.modname = "stts751";
#line 144
  descriptor.function = "stts751_adjust_resolution";
#line 144
  descriptor.filename = "drivers/hwmon/stts751.c";
#line 144
  descriptor.format = "setting res %d. config %x";
#line 144
  descriptor.lineno = 145U;
#line 144
  descriptor.flags = 1U;
#line 144
  descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 144
  descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 144
  tmp = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
  }
#line 144
  if ((int )tmp != 0) {
#line 144
    tmp___0 = 0;
  } else {
#line 144
    tmp___0 = 1;
  }
#line 144
  branch = (bool )tmp___0;
#line 144
  if ((int )branch) {
    {
#line 144
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (priv->client)->dev),
                      "setting res %d. config %x", (int )res, (int )priv->config);
    }
  } else {

  }
  {
#line 146
  priv->res = (int )res;
#line 148
  tmp___3 = i2c_smbus_write_byte_data((struct i2c_client  const  *)priv->client, 3,
                                      (int )priv->config);
  }
#line 148
  return (tmp___3);
}
}
#line 152 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_update_temp(struct stts751_priv *priv ) 
{ 
  s32 integer1 ;
  s32 integer2 ;
  s32 frac ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp ;
  int tmp___0 ;
  struct _ddebug descriptor___0 ;
  bool branch___0 ;
  bool tmp___3 ;
  int tmp___4 ;
  struct _ddebug descriptor___1 ;
  bool branch___1 ;
  bool tmp___7 ;
  int tmp___8 ;
  struct _ddebug descriptor___2 ;
  bool branch___2 ;
  bool tmp___11 ;
  int tmp___12 ;

  {
  {
#line 167
  integer1 = i2c_smbus_read_byte_data((struct i2c_client  const  *)priv->client, 0);
  }
#line 168
  if (integer1 < 0) {
    {
#line 169
    descriptor.modname = "stts751";
#line 169
    descriptor.function = "stts751_update_temp";
#line 169
    descriptor.filename = "drivers/hwmon/stts751.c";
#line 169
    descriptor.format = "I2C read failed (temp H). ret: %x\n";
#line 169
    descriptor.lineno = 170U;
#line 169
    descriptor.flags = 1U;
#line 169
    descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 169
    descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 169
    tmp = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
    }
#line 169
    if ((int )tmp != 0) {
#line 169
      tmp___0 = 0;
    } else {
#line 169
      tmp___0 = 1;
    }
#line 169
    branch = (bool )tmp___0;
#line 169
    if ((int )branch) {
      {
#line 169
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (priv->client)->dev),
                        "I2C read failed (temp H). ret: %x\n", integer1);
      }
    } else {

    }
#line 171
    return (integer1);
  } else {

  }
  {
#line 174
  frac = i2c_smbus_read_byte_data((struct i2c_client  const  *)priv->client, 2);
  }
#line 175
  if (frac < 0) {
    {
#line 176
    descriptor___0.modname = "stts751";
#line 176
    descriptor___0.function = "stts751_update_temp";
#line 176
    descriptor___0.filename = "drivers/hwmon/stts751.c";
#line 176
    descriptor___0.format = "I2C read failed (temp L). ret: %x\n";
#line 176
    descriptor___0.lineno = 177U;
#line 176
    descriptor___0.flags = 1U;
#line 176
    descriptor___0.key.dd_key_true.key.enabled.counter = 1;
#line 176
    descriptor___0.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 176
    tmp___3 = arch_static_branch(& descriptor___0.key.dd_key_true.key, 1);
    }
#line 176
    if ((int )tmp___3 != 0) {
#line 176
      tmp___4 = 0;
    } else {
#line 176
      tmp___4 = 1;
    }
#line 176
    branch___0 = (bool )tmp___4;
#line 176
    if ((int )branch___0) {
      {
#line 176
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)(& (priv->client)->dev),
                        "I2C read failed (temp L). ret: %x\n", frac);
      }
    } else {

    }
#line 178
    return (frac);
  } else {

  }
  {
#line 181
  integer2 = i2c_smbus_read_byte_data((struct i2c_client  const  *)priv->client, 0);
  }
#line 182
  if (integer2 < 0) {
    {
#line 183
    descriptor___1.modname = "stts751";
#line 183
    descriptor___1.function = "stts751_update_temp";
#line 183
    descriptor___1.filename = "drivers/hwmon/stts751.c";
#line 183
    descriptor___1.format = "I2C 2nd read failed (temp H). ret: %x\n";
#line 183
    descriptor___1.lineno = 184U;
#line 183
    descriptor___1.flags = 1U;
#line 183
    descriptor___1.key.dd_key_true.key.enabled.counter = 1;
#line 183
    descriptor___1.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 183
    tmp___7 = arch_static_branch(& descriptor___1.key.dd_key_true.key, 1);
    }
#line 183
    if ((int )tmp___7 != 0) {
#line 183
      tmp___8 = 0;
    } else {
#line 183
      tmp___8 = 1;
    }
#line 183
    branch___1 = (bool )tmp___8;
#line 183
    if ((int )branch___1) {
      {
#line 183
      __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)(& (priv->client)->dev),
                        "I2C 2nd read failed (temp H). ret: %x\n", integer2);
      }
    } else {

    }
#line 185
    return (integer2);
  } else {

  }
#line 188
  if (integer1 != integer2) {
    {
#line 189
    frac = i2c_smbus_read_byte_data((struct i2c_client  const  *)priv->client, 2);
    }
#line 191
    if (frac < 0) {
      {
#line 192
      descriptor___2.modname = "stts751";
#line 192
      descriptor___2.function = "stts751_update_temp";
#line 192
      descriptor___2.filename = "drivers/hwmon/stts751.c";
#line 192
      descriptor___2.format = "I2C 2nd read failed (temp L). ret: %x\n";
#line 192
      descriptor___2.lineno = 194U;
#line 192
      descriptor___2.flags = 1U;
#line 192
      descriptor___2.key.dd_key_true.key.enabled.counter = 1;
#line 192
      descriptor___2.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 192
      tmp___11 = arch_static_branch(& descriptor___2.key.dd_key_true.key, 1);
      }
#line 192
      if ((int )tmp___11 != 0) {
#line 192
        tmp___12 = 0;
      } else {
#line 192
        tmp___12 = 1;
      }
#line 192
      branch___2 = (bool )tmp___12;
#line 192
      if ((int )branch___2) {
        {
#line 192
        __dynamic_dev_dbg(& descriptor___2, (struct device  const  *)(& (priv->client)->dev),
                          "I2C 2nd read failed (temp L). ret: %x\n", frac);
        }
      } else {

      }
#line 195
      return (frac);
    } else {

    }
  } else {

  }
  {
#line 199
  priv->temp = stts751_to_deg((int )((s16 )(integer1 << 8)) | (int )((s16 )frac));
  }
#line 200
  return (0);
}
}
#line 203 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_set_temp_reg16(struct stts751_priv *priv , int temp , u8 hreg ,
                                  u8 lreg ) 
{ 
  s32 hwval ;
  int ret ;
  s32 tmp ;

  {
  {
#line 209
  hwval = stts751_to_hw(temp);
#line 211
  ret = i2c_smbus_write_byte_data((struct i2c_client  const  *)priv->client, (int )hreg,
                                  (int )((u8 )(hwval >> 8)));
  }
#line 212
  if (ret != 0) {
#line 213
    return (ret);
  } else {

  }
  {
#line 215
  tmp = i2c_smbus_write_byte_data((struct i2c_client  const  *)priv->client, (int )lreg,
                                  (int )((u8 )hwval));
  }
#line 215
  return (tmp);
}
}
#line 218 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_set_temp_reg8(struct stts751_priv *priv , int temp , u8 reg ) 
{ 
  s32 hwval ;
  s32 tmp ;

  {
  {
#line 222
  hwval = stts751_to_hw(temp);
#line 223
  tmp = i2c_smbus_write_byte_data((struct i2c_client  const  *)priv->client, (int )reg,
                                  (int )((u8 )(hwval >> 8)));
  }
#line 223
  return (tmp);
}
}
#line 226 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_read_reg16(struct stts751_priv *priv , int *temp , u8 hreg , u8 lreg ) 
{ 
  int integer ;
  int frac ;

  {
  {
#line 231
  integer = i2c_smbus_read_byte_data((struct i2c_client  const  *)priv->client, (int )hreg);
  }
#line 232
  if (integer < 0) {
#line 233
    return (integer);
  } else {

  }
  {
#line 235
  frac = i2c_smbus_read_byte_data((struct i2c_client  const  *)priv->client, (int )lreg);
  }
#line 236
  if (frac < 0) {
#line 237
    return (frac);
  } else {

  }
  {
#line 239
  *temp = stts751_to_deg((int )((s16 )(integer << 8)) | (int )((s16 )frac));
  }
#line 241
  return (0);
}
}
#line 244 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_read_reg8(struct stts751_priv *priv , int *temp , u8 reg ) 
{ 
  int integer ;

  {
  {
#line 248
  integer = i2c_smbus_read_byte_data((struct i2c_client  const  *)priv->client, (int )reg);
  }
#line 249
  if (integer < 0) {
#line 250
    return (integer);
  } else {

  }
  {
#line 252
  *temp = stts751_to_deg((int )((s16 )(integer << 8)));
  }
#line 254
  return (0);
}
}
#line 263 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_update_alert(struct stts751_priv *priv ) 
{ 
  int ret ;
  bool conv_done ;
  int cache_time ;
  unsigned long tmp ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp___0 ;
  int tmp___1 ;
  struct _ddebug descriptor___0 ;
  bool branch___0 ;
  bool tmp___4 ;
  int tmp___5 ;
  struct _ddebug descriptor___1 ;
  bool branch___1 ;
  bool tmp___8 ;
  int tmp___9 ;

  {
  {
//ERROR: Buffer over-read
#line 267
  tmp = msecs_to_jiffies((unsigned int const   )stts751_intervals[(int )priv->interval]);
#line 267
  cache_time = (int )tmp;
#line 273
  cache_time = cache_time / 10 + cache_time;
#line 275
  ret = i2c_smbus_read_byte_data((struct i2c_client  const  *)priv->client, 1);
  }
#line 276
  if (ret < 0) {
#line 277
    return (ret);
  } else {

  }
  {
#line 279
  descriptor.modname = "stts751";
#line 279
  descriptor.function = "stts751_update_alert";
#line 279
  descriptor.filename = "drivers/hwmon/stts751.c";
#line 279
  descriptor.format = "status reg %x\n";
#line 279
  descriptor.lineno = 279U;
#line 279
  descriptor.flags = 1U;
#line 279
  descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 279
  descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 279
  tmp___0 = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
  }
#line 279
  if ((int )tmp___0 != 0) {
#line 279
    tmp___1 = 0;
  } else {
#line 279
    tmp___1 = 1;
  }
#line 279
  branch = (bool )tmp___1;
#line 279
  if ((int )branch) {
    {
#line 279
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (priv->client)->dev),
                      "status reg %x\n", ret);
    }
  } else {

  }
#line 280
  conv_done = ((unsigned long )ret & 96UL) != 0UL;
#line 293
  if (((long )((priv->last_alert_update + (unsigned long )cache_time) - (unsigned long )jiffies) < 0L || (int )conv_done) || ! priv->alert_valid) {
    {
#line 295
    priv->max_alert = 0;
#line 296
    priv->min_alert = 0;
#line 297
    priv->alert_valid = 1;
#line 298
    priv->last_alert_update = jiffies;
#line 299
    descriptor___0.modname = "stts751";
#line 299
    descriptor___0.function = "stts751_update_alert";
#line 299
    descriptor___0.filename = "drivers/hwmon/stts751.c";
#line 299
    descriptor___0.format = "invalidating alert cache\n";
#line 299
    descriptor___0.lineno = 299U;
#line 299
    descriptor___0.flags = 1U;
#line 299
    descriptor___0.key.dd_key_true.key.enabled.counter = 1;
#line 299
    descriptor___0.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 299
    tmp___4 = arch_static_branch(& descriptor___0.key.dd_key_true.key, 1);
    }
#line 299
    if ((int )tmp___4 != 0) {
#line 299
      tmp___5 = 0;
    } else {
#line 299
      tmp___5 = 1;
    }
#line 299
    branch___0 = (bool )tmp___5;
#line 299
    if ((int )branch___0) {
      {
#line 299
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)(& (priv->client)->dev),
                        "invalidating alert cache\n");
      }
    } else {

    }
  } else {

  }
  {
#line 302
  priv->max_alert = ((int )priv->max_alert | (((unsigned long )ret & 64UL) != 0UL)) != 0;
#line 303
  priv->min_alert = ((int )priv->min_alert | (((unsigned long )ret & 32UL) != 0UL)) != 0;
#line 304
  priv->therm_trip = (ret & 1) != 0;
#line 306
  descriptor___1.modname = "stts751";
#line 306
  descriptor___1.function = "stts751_update_alert";
#line 306
  descriptor___1.filename = "drivers/hwmon/stts751.c";
#line 306
  descriptor___1.format = "max_alert: %d, min_alert: %d, therm_trip: %d\n";
#line 306
  descriptor___1.lineno = 307U;
#line 306
  descriptor___1.flags = 1U;
#line 306
  descriptor___1.key.dd_key_true.key.enabled.counter = 1;
#line 306
  descriptor___1.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 306
  tmp___8 = arch_static_branch(& descriptor___1.key.dd_key_true.key, 1);
  }
#line 306
  if ((int )tmp___8 != 0) {
#line 306
    tmp___9 = 0;
  } else {
#line 306
    tmp___9 = 1;
  }
#line 306
  branch___1 = (bool )tmp___9;
#line 306
  if ((int )branch___1) {
    {
#line 306
    __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)(& (priv->client)->dev),
                      "max_alert: %d, min_alert: %d, therm_trip: %d\n", (int )priv->max_alert,
                      (int )priv->min_alert, (int )priv->therm_trip);
    }
  } else {

  }
#line 309
  return (0);
}
}
#line 312 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static void stts751_alert(struct i2c_client *client , enum i2c_alert_protocol type ,
                          unsigned int data ) 
{ 
  int ret ;
  struct stts751_priv *priv ;
  void *tmp ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp___0 ;
  int tmp___1 ;

  {
  {
#line 316
  tmp = i2c_get_clientdata((struct i2c_client  const  *)client);
#line 316
  priv = (struct stts751_priv *)tmp;
  }
#line 318
  if ((unsigned int )type != 0U) {
#line 319
    return;
  } else {

  }
  {
#line 321
  descriptor.modname = "stts751";
#line 321
  descriptor.function = "stts751_alert";
#line 321
  descriptor.filename = "drivers/hwmon/stts751.c";
#line 321
  descriptor.format = "alert!";
#line 321
  descriptor.lineno = 321U;
#line 321
  descriptor.flags = 1U;
#line 321
  descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 321
  descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 321
  tmp___0 = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
  }
#line 321
  if ((int )tmp___0 != 0) {
#line 321
    tmp___1 = 0;
  } else {
#line 321
    tmp___1 = 1;
  }
#line 321
  branch = (bool )tmp___1;
#line 321
  if ((int )branch) {
    {
#line 321
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& client->dev), "alert!");
    }
  } else {

  }
  {
#line 323
  mutex_lock_nested(& priv->access_lock, 0U);
#line 324
  ret = stts751_update_alert(priv);
  }
#line 325
  if (ret < 0) {
    {
#line 327
    priv->max_alert = 1;
#line 328
    priv->min_alert = 1;
#line 330
    dev_warn((struct device  const  *)priv->dev, "Alert received, but can\'t communicate to the device. Triggering all alarms!");
    }
  } else {

  }
#line 334
  if ((int )priv->max_alert) {
#line 335
    if ((int )priv->notify_max) {
      {
#line 336
      dev_notice((struct device  const  *)priv->dev, "got alert for HIGH temperature");
      }
    } else {

    }
    {
#line 337
    priv->notify_max = 0;
#line 340
    sysfs_notify(& (priv->dev)->kobj, (char const   *)0, "temp1_max_alarm");
    }
  } else {

  }
#line 343
  if ((int )priv->min_alert) {
#line 344
    if ((int )priv->notify_min) {
      {
#line 345
      dev_notice((struct device  const  *)priv->dev, "got alert for LOW temperature");
      }
    } else {

    }
    {
#line 346
    priv->notify_min = 0;
#line 349
    sysfs_notify(& (priv->dev)->kobj, (char const   *)0, "temp1_min_alarm");
    }
  } else {

  }
#line 352
  if ((int )priv->min_alert || (int )priv->max_alert) {
    {
#line 353
    kobject_uevent(& (priv->dev)->kobj, 2);
    }
  } else {

  }
  {
#line 355
  mutex_unlock(& priv->access_lock);
  }
#line 356
  return;
}
}
#line 358 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_update(struct stts751_priv *priv ) 
{ 
  int ret ;
  int cache_time ;
  unsigned long tmp ;

  {
  {
#line 361
  tmp = msecs_to_jiffies((unsigned int const   )stts751_intervals[(int )priv->interval]);
#line 361
  cache_time = (int )tmp;
  }
#line 363
  if ((long )((priv->last_update + (unsigned long )cache_time) - (unsigned long )jiffies) < 0L || ! priv->data_valid) {
    {
#line 365
    ret = stts751_update_temp(priv);
    }
#line 366
    if (ret != 0) {
#line 367
      return (ret);
    } else {

    }
    {
#line 369
    ret = stts751_update_alert(priv);
    }
#line 370
    if (ret != 0) {
#line 371
      return (ret);
    } else {

    }
#line 372
    priv->data_valid = 1;
#line 373
    priv->last_update = jiffies;
  } else {

  }
#line 376
  return (0);
}
}
#line 379 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t show_max_alarm(struct device *dev , struct device_attribute *attr ,
                              char *buf ) 
{ 
  int ret ;
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;

  {
  {
#line 383
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 383
  priv = (struct stts751_priv *)tmp;
#line 385
  mutex_lock_nested(& priv->access_lock, 0U);
#line 386
  ret = stts751_update(priv);
  }
#line 387
  if (ret == 0) {
#line 388
    priv->notify_max = 1;
  } else {

  }
  {
#line 389
  mutex_unlock(& priv->access_lock);
  }
#line 390
  if (ret < 0) {
#line 391
    return ((ssize_t )ret);
  } else {

  }
  {
#line 393
  tmp___0 = snprintf(buf, 4095UL, "%d\n", (int )priv->max_alert);
  }
#line 393
  return ((ssize_t )tmp___0);
}
}
#line 396 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t show_min_alarm(struct device *dev , struct device_attribute *attr ,
                              char *buf ) 
{ 
  int ret ;
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;

  {
  {
#line 400
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 400
  priv = (struct stts751_priv *)tmp;
#line 402
  mutex_lock_nested(& priv->access_lock, 0U);
#line 403
  ret = stts751_update(priv);
  }
#line 404
  if (ret == 0) {
#line 405
    priv->notify_min = 1;
  } else {

  }
  {
#line 406
  mutex_unlock(& priv->access_lock);
  }
#line 407
  if (ret < 0) {
#line 408
    return ((ssize_t )ret);
  } else {

  }
  {
#line 410
  tmp___0 = snprintf(buf, 4095UL, "%d\n", (int )priv->min_alert);
  }
#line 410
  return ((ssize_t )tmp___0);
}
}
#line 413 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t show_input(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  int ret ;
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;

  {
  {
#line 417
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 417
  priv = (struct stts751_priv *)tmp;
#line 419
  mutex_lock_nested(& priv->access_lock, 0U);
#line 420
  ret = stts751_update(priv);
#line 421
  mutex_unlock(& priv->access_lock);
  }
#line 422
  if (ret < 0) {
#line 423
    return ((ssize_t )ret);
  } else {

  }
  {
#line 425
  tmp___0 = snprintf(buf, 4095UL, "%d\n", priv->temp);
  }
#line 425
  return ((ssize_t )tmp___0);
}
}
#line 428 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t show_therm(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;

  {
  {
#line 431
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 431
  priv = (struct stts751_priv *)tmp;
#line 433
  tmp___0 = snprintf(buf, 4095UL, "%d\n", priv->therm);
  }
#line 433
  return ((ssize_t )tmp___0);
}
}
#line 436 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t set_therm(struct device *dev , struct device_attribute *attr , char const   *buf ,
                         size_t count ) 
{ 
  int ret ;
  long temp ;
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;
  long __UNIQUE_ID_min1_10 ;
  long __UNIQUE_ID_min1_8 ;
  long __UNIQUE_ID_min2_9 ;
  long __UNIQUE_ID_min2_11 ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp___1 ;
  int tmp___2 ;

  {
  {
#line 441
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 441
  priv = (struct stts751_priv *)tmp;
#line 443
  tmp___0 = kstrtol(buf, 10U, & temp);
  }
#line 443
  if (tmp___0 < 0) {
#line 444
    return (-22L);
  } else {

  }
  {
#line 447
  __UNIQUE_ID_min1_8 = temp;
#line 447
  __UNIQUE_ID_min2_9 = -64000L;
#line 447
  __UNIQUE_ID_min1_10 = __UNIQUE_ID_min1_8 > __UNIQUE_ID_min2_9 ? __UNIQUE_ID_min1_8 : __UNIQUE_ID_min2_9;
#line 447
  __UNIQUE_ID_min2_11 = 127937L;
#line 447
  temp = __UNIQUE_ID_min1_10 < __UNIQUE_ID_min2_11 ? __UNIQUE_ID_min1_10 : __UNIQUE_ID_min2_11;
#line 448
  mutex_lock_nested(& priv->access_lock, 0U);
#line 449
  ret = stts751_set_temp_reg8(priv, (int )temp, 32);
  }
#line 450
  if (ret != 0) {
#line 451
    goto exit;
  } else {

  }
  {
#line 453
  descriptor.modname = "stts751";
#line 453
  descriptor.function = "set_therm";
#line 453
  descriptor.filename = "drivers/hwmon/stts751.c";
#line 453
  descriptor.format = "setting therm %ld";
#line 453
  descriptor.lineno = 453U;
#line 453
  descriptor.flags = 1U;
#line 453
  descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 453
  descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 453
  tmp___1 = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
  }
#line 453
  if ((int )tmp___1 != 0) {
#line 453
    tmp___2 = 0;
  } else {
#line 453
    tmp___2 = 1;
  }
#line 453
  branch = (bool )tmp___2;
#line 453
  if ((int )branch) {
    {
#line 453
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (priv->client)->dev),
                      "setting therm %ld", temp);
    }
  } else {

  }
#line 459
  priv->hyst = (int )((unsigned int )temp + (unsigned int )(priv->hyst - priv->therm));
#line 460
  priv->therm = (int )temp;
  exit: 
  {
#line 463
  mutex_unlock(& priv->access_lock);
  }
#line 464
  if (ret != 0) {
#line 465
    return ((ssize_t )ret);
  } else {

  }
#line 467
  return ((ssize_t )count);
}
}
#line 470 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t show_hyst(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;

  {
  {
#line 473
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 473
  priv = (struct stts751_priv *)tmp;
#line 475
  tmp___0 = snprintf(buf, 4095UL, "%d\n", priv->hyst);
  }
#line 475
  return ((ssize_t )tmp___0);
}
}
#line 478 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t set_hyst(struct device *dev , struct device_attribute *attr , char const   *buf ,
                        size_t count ) 
{ 
  int ret ;
  long temp ;
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;
  long __UNIQUE_ID_min1_14 ;
  long __UNIQUE_ID_min1_12 ;
  long __UNIQUE_ID_min2_13 ;
  long __UNIQUE_ID_min2_15 ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp___1 ;
  int tmp___2 ;

  {
  {
#line 484
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 484
  priv = (struct stts751_priv *)tmp;
#line 486
  tmp___0 = kstrtol(buf, 10U, & temp);
  }
#line 486
  if (tmp___0 < 0) {
#line 487
    return (-22L);
  } else {

  }
  {
#line 489
  mutex_lock_nested(& priv->access_lock, 0U);
#line 491
  __UNIQUE_ID_min1_12 = temp;
#line 491
  __UNIQUE_ID_min2_13 = -64000L;
#line 491
  __UNIQUE_ID_min1_14 = __UNIQUE_ID_min1_12 > __UNIQUE_ID_min2_13 ? __UNIQUE_ID_min1_12 : __UNIQUE_ID_min2_13;
#line 491
  __UNIQUE_ID_min2_15 = (long )priv->therm;
#line 491
  temp = __UNIQUE_ID_min1_14 < __UNIQUE_ID_min2_15 ? __UNIQUE_ID_min1_14 : __UNIQUE_ID_min2_15;
#line 492
  priv->hyst = (int )temp;
#line 493
  descriptor.modname = "stts751";
#line 493
  descriptor.function = "set_hyst";
#line 493
  descriptor.filename = "drivers/hwmon/stts751.c";
#line 493
  descriptor.format = "setting hyst %ld";
#line 493
  descriptor.lineno = 493U;
#line 493
  descriptor.flags = 1U;
#line 493
  descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 493
  descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 493
  tmp___1 = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
  }
#line 493
  if ((int )tmp___1 != 0) {
#line 493
    tmp___2 = 0;
  } else {
#line 493
    tmp___2 = 1;
  }
#line 493
  branch = (bool )tmp___2;
#line 493
  if ((int )branch) {
    {
#line 493
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (priv->client)->dev),
                      "setting hyst %ld", temp);
    }
  } else {

  }
  {
#line 494
  temp = (long )priv->therm - temp;
#line 495
  ret = stts751_set_temp_reg8(priv, (int )temp, 33);
#line 496
  mutex_unlock(& priv->access_lock);
  }
#line 497
  if (ret != 0) {
#line 498
    return ((ssize_t )ret);
  } else {

  }
#line 500
  return ((ssize_t )count);
}
}
#line 503 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t show_therm_trip(struct device *dev , struct device_attribute *attr ,
                               char *buf ) 
{ 
  int ret ;
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;

  {
  {
#line 507
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 507
  priv = (struct stts751_priv *)tmp;
#line 509
  mutex_lock_nested(& priv->access_lock, 0U);
#line 510
  ret = stts751_update(priv);
#line 511
  mutex_unlock(& priv->access_lock);
  }
#line 512
  if (ret < 0) {
#line 513
    return ((ssize_t )ret);
  } else {

  }
  {
#line 515
  tmp___0 = snprintf(buf, 4095UL, "%d\n", (int )priv->therm_trip);
  }
#line 515
  return ((ssize_t )tmp___0);
}
}
#line 518 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t show_max(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;

  {
  {
#line 521
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 521
  priv = (struct stts751_priv *)tmp;
#line 523
  tmp___0 = snprintf(buf, 4095UL, "%d\n", priv->event_max);
  }
#line 523
  return ((ssize_t )tmp___0);
}
}
#line 526 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t set_max(struct device *dev , struct device_attribute *attr , char const   *buf ,
                       size_t count ) 
{ 
  int ret ;
  long temp ;
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;
  long __UNIQUE_ID_min1_18 ;
  long __UNIQUE_ID_min1_16 ;
  long __UNIQUE_ID_min2_17 ;
  long __UNIQUE_ID_min2_19 ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp___1 ;
  int tmp___2 ;

  {
  {
#line 531
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 531
  priv = (struct stts751_priv *)tmp;
#line 533
  tmp___0 = kstrtol(buf, 10U, & temp);
  }
#line 533
  if (tmp___0 < 0) {
#line 534
    return (-22L);
  } else {

  }
  {
#line 536
  mutex_lock_nested(& priv->access_lock, 0U);
#line 538
  __UNIQUE_ID_min1_16 = temp;
#line 538
  __UNIQUE_ID_min2_17 = (long )priv->event_min;
#line 538
  __UNIQUE_ID_min1_18 = __UNIQUE_ID_min1_16 > __UNIQUE_ID_min2_17 ? __UNIQUE_ID_min1_16 : __UNIQUE_ID_min2_17;
#line 538
  __UNIQUE_ID_min2_19 = 127937L;
#line 538
  temp = __UNIQUE_ID_min1_18 < __UNIQUE_ID_min2_19 ? __UNIQUE_ID_min1_18 : __UNIQUE_ID_min2_19;
#line 539
  ret = stts751_set_temp_reg16(priv, (int )temp, 5, 6);
  }
#line 541
  if (ret != 0) {
#line 542
    goto exit;
  } else {

  }
  {
#line 544
  descriptor.modname = "stts751";
#line 544
  descriptor.function = "set_max";
#line 544
  descriptor.filename = "drivers/hwmon/stts751.c";
#line 544
  descriptor.format = "setting event max %ld";
#line 544
  descriptor.lineno = 544U;
#line 544
  descriptor.flags = 1U;
#line 544
  descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 544
  descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 544
  tmp___1 = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
  }
#line 544
  if ((int )tmp___1 != 0) {
#line 544
    tmp___2 = 0;
  } else {
#line 544
    tmp___2 = 1;
  }
#line 544
  branch = (bool )tmp___2;
#line 544
  if ((int )branch) {
    {
#line 544
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (priv->client)->dev),
                      "setting event max %ld", temp);
    }
  } else {

  }
#line 545
  priv->event_max = (int )temp;
#line 546
  ret = (int )count;
  exit: 
  {
#line 548
  mutex_unlock(& priv->access_lock);
  }
#line 549
  return ((ssize_t )ret);
}
}
#line 552 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t show_min(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;

  {
  {
#line 555
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 555
  priv = (struct stts751_priv *)tmp;
#line 557
  tmp___0 = snprintf(buf, 4095UL, "%d\n", priv->event_min);
  }
#line 557
  return ((ssize_t )tmp___0);
}
}
#line 560 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t set_min(struct device *dev , struct device_attribute *attr , char const   *buf ,
                       size_t count ) 
{ 
  int ret ;
  long temp ;
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;
  long __UNIQUE_ID_min1_22 ;
  long __UNIQUE_ID_min1_20 ;
  long __UNIQUE_ID_min2_21 ;
  long __UNIQUE_ID_min2_23 ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp___1 ;
  int tmp___2 ;

  {
  {
#line 565
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 565
  priv = (struct stts751_priv *)tmp;
#line 567
  tmp___0 = kstrtol(buf, 10U, & temp);
  }
#line 567
  if (tmp___0 < 0) {
#line 568
    return (-22L);
  } else {

  }
  {
#line 570
  mutex_lock_nested(& priv->access_lock, 0U);
#line 572
  __UNIQUE_ID_min1_20 = temp;
#line 572
  __UNIQUE_ID_min2_21 = -64000L;
#line 572
  __UNIQUE_ID_min1_22 = __UNIQUE_ID_min1_20 > __UNIQUE_ID_min2_21 ? __UNIQUE_ID_min1_20 : __UNIQUE_ID_min2_21;
#line 572
  __UNIQUE_ID_min2_23 = (long )priv->event_max;
#line 572
  temp = __UNIQUE_ID_min1_22 < __UNIQUE_ID_min2_23 ? __UNIQUE_ID_min1_22 : __UNIQUE_ID_min2_23;
#line 573
  ret = stts751_set_temp_reg16(priv, (int )temp, 7, 8);
  }
#line 575
  if (ret != 0) {
#line 576
    goto exit;
  } else {

  }
  {
#line 578
  descriptor.modname = "stts751";
#line 578
  descriptor.function = "set_min";
#line 578
  descriptor.filename = "drivers/hwmon/stts751.c";
#line 578
  descriptor.format = "setting event min %ld";
#line 578
  descriptor.lineno = 578U;
#line 578
  descriptor.flags = 1U;
#line 578
  descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 578
  descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 578
  tmp___1 = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
  }
#line 578
  if ((int )tmp___1 != 0) {
#line 578
    tmp___2 = 0;
  } else {
#line 578
    tmp___2 = 1;
  }
#line 578
  branch = (bool )tmp___2;
#line 578
  if ((int )branch) {
    {
#line 578
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (priv->client)->dev),
                      "setting event min %ld", temp);
    }
  } else {

  }
#line 579
  priv->event_min = (int )temp;
#line 580
  ret = (int )count;
  exit: 
  {
#line 582
  mutex_unlock(& priv->access_lock);
  }
#line 583
  return ((ssize_t )ret);
}
}
#line 586 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t show_interval(struct device *dev , struct device_attribute *attr ,
                             char *buf ) 
{ 
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;

  {
  {
#line 589
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 589
  priv = (struct stts751_priv *)tmp;
#line 591
  tmp___0 = snprintf(buf, 4095UL, "%d\n", stts751_intervals[(int )priv->interval]);
  }
#line 591
  return ((ssize_t )tmp___0);
}
}
#line 595 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static ssize_t set_interval(struct device *dev , struct device_attribute *attr , char const   *buf ,
                            size_t count ) 
{ 
  unsigned long val ;
  int idx ;
  int ret ;
  struct stts751_priv *priv ;
  void *tmp ;
  int tmp___0 ;
  unsigned long __fc_i ;
  unsigned long __fc_as ;
  unsigned long __fc_x ;
  int const   *__fc_a ;
  int __x ;
  int __d ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp___1 ;
  int tmp___2 ;
  struct _ddebug descriptor___0 ;
  bool branch___0 ;
  bool tmp___5 ;
  int tmp___6 ;
  struct _ddebug descriptor___1 ;
  bool branch___1 ;
  bool tmp___9 ;
  int tmp___10 ;

  {
  {
#line 600
  ret = (int )count;
#line 601
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 601
  priv = (struct stts751_priv *)tmp;
#line 603
  tmp___0 = kstrtoul(buf, 10U, & val);
  }
#line 603
  if (tmp___0 < 0) {
#line 604
    return (-22L);
  } else {

  }
#line 606
  __fc_as = 9UL;
#line 606
  __fc_x = val;
#line 606
  __fc_a = (int const   *)(& stts751_intervals);
#line 606
  __fc_i = 0UL;
#line 606
  goto ldv_30176;
  ldv_30175: 
#line 606
  __x = (int )*(__fc_a + __fc_i) + (int )*(__fc_a + (__fc_i + 1UL));
#line 606
  __d = 2;
#line 606
  if ((unsigned long )((__x <= 0) ^ (__d > 0) ? (__d / 2 + __x) / __d : (__x - __d / 2) / __d) <= __fc_x) {
#line 606
    goto ldv_30174;
  } else {

  }
#line 606
  __fc_i = __fc_i + 1UL;
  ldv_30176: ;
#line 606
  if (__fc_i < __fc_as) {
#line 608
    goto ldv_30175;
  } else {

  }
  ldv_30174: 
  {
#line 606
  idx = (int )__fc_i;
#line 609
  descriptor.modname = "stts751";
#line 609
  descriptor.function = "set_interval";
#line 609
  descriptor.filename = "drivers/hwmon/stts751.c";
#line 609
  descriptor.format = "setting interval. req:%lu, idx: %d, val: %d";
#line 609
  descriptor.lineno = 610U;
#line 609
  descriptor.flags = 1U;
#line 609
  descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 609
  descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 609
  tmp___1 = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
  }
#line 609
  if ((int )tmp___1 != 0) {
#line 609
    tmp___2 = 0;
  } else {
#line 609
    tmp___2 = 1;
  }
#line 609
  branch = (bool )tmp___2;
#line 609
  if ((int )branch) {
    {
#line 609
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (priv->client)->dev),
                      "setting interval. req:%lu, idx: %d, val: %d", val, idx, stts751_intervals[idx]);
    }
  } else {

  }
  {
#line 612
  mutex_lock_nested(& priv->access_lock, 0U);
  }
#line 613
  if ((int )priv->interval == idx) {
#line 614
    goto exit;
  } else {

  }
#line 625
  if ((int )priv->interval < idx) {
    {
#line 626
    descriptor___0.modname = "stts751";
#line 626
    descriptor___0.function = "set_interval";
#line 626
    descriptor___0.filename = "drivers/hwmon/stts751.c";
#line 626
    descriptor___0.format = "lower resolution, then modify convrate";
#line 626
    descriptor___0.lineno = 626U;
#line 626
    descriptor___0.flags = 1U;
#line 626
    descriptor___0.key.dd_key_true.key.enabled.counter = 1;
#line 626
    descriptor___0.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 626
    tmp___5 = arch_static_branch(& descriptor___0.key.dd_key_true.key, 1);
    }
#line 626
    if ((int )tmp___5 != 0) {
#line 626
      tmp___6 = 0;
    } else {
#line 626
      tmp___6 = 1;
    }
#line 626
    branch___0 = (bool )tmp___6;
#line 626
    if ((int )branch___0) {
      {
#line 626
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)(& (priv->client)->dev),
                        "lower resolution, then modify convrate");
      }
    } else {

    }
    {
#line 627
    priv->interval = (u8 )idx;
#line 628
    ret = stts751_adjust_resolution(priv);
    }
#line 629
    if (ret != 0) {
#line 630
      goto exit;
    } else {

    }
  } else {

  }
  {
#line 633
  ret = i2c_smbus_write_byte_data((struct i2c_client  const  *)priv->client, 4, (int )((u8 )idx));
  }
#line 634
  if (ret != 0) {
#line 635
    goto exit;
  } else {

  }
#line 637
  if ((int )priv->interval != idx) {
    {
#line 638
    descriptor___1.modname = "stts751";
#line 638
    descriptor___1.function = "set_interval";
#line 638
    descriptor___1.filename = "drivers/hwmon/stts751.c";
#line 638
    descriptor___1.format = "modify convrate, then raise resolution";
#line 638
    descriptor___1.lineno = 638U;
#line 638
    descriptor___1.flags = 1U;
#line 638
    descriptor___1.key.dd_key_true.key.enabled.counter = 1;
#line 638
    descriptor___1.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 638
    tmp___9 = arch_static_branch(& descriptor___1.key.dd_key_true.key, 1);
    }
#line 638
    if ((int )tmp___9 != 0) {
#line 638
      tmp___10 = 0;
    } else {
#line 638
      tmp___10 = 1;
    }
#line 638
    branch___1 = (bool )tmp___10;
#line 638
    if ((int )branch___1) {
      {
#line 638
      __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)(& (priv->client)->dev),
                        "modify convrate, then raise resolution");
      }
    } else {

    }
    {
#line 639
    priv->interval = (u8 )idx;
#line 640
    ret = stts751_adjust_resolution(priv);
    }
#line 641
    if (ret != 0) {
#line 642
      goto exit;
    } else {

    }
  } else {

  }
#line 644
  ret = (int )count;
  exit: 
  {
#line 646
  mutex_unlock(& priv->access_lock);
  }
#line 648
  return ((ssize_t )ret);
}
}
#line 651 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_detect(struct i2c_client *new_client , struct i2c_board_info *info ) 
{ 
  struct i2c_adapter *adapter ;
  char const   *name ;
  int tmp ;
  int tmp___0 ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp___1 ;
  int tmp___2 ;

  {
  {
#line 654
  adapter = new_client->adapter;
#line 658
  tmp___0 = i2c_check_functionality(adapter, 1572864U);
  }
#line 658
  if (tmp___0 == 0) {
#line 659
    return (-19);
  } else {

  }
  {
#line 661
  tmp = i2c_smbus_read_byte_data((struct i2c_client  const  *)new_client, 254);
  }
#line 662
  if (tmp != 83) {
#line 663
    return (-19);
  } else {

  }
  {
#line 666
  tmp = i2c_smbus_read_byte_data((struct i2c_client  const  *)new_client, 2);
  }
#line 667
  if ((tmp & 15) != 0) {
#line 668
    return (-19);
  } else {

  }
  {
#line 670
  tmp = i2c_smbus_read_byte_data((struct i2c_client  const  *)new_client, 6);
  }
#line 671
  if ((tmp & 15) != 0) {
#line 672
    return (-19);
  } else {

  }
  {
#line 674
  tmp = i2c_smbus_read_byte_data((struct i2c_client  const  *)new_client, 8);
  }
#line 675
  if ((tmp & 15) != 0) {
#line 676
    return (-19);
  } else {

  }
  {
#line 679
  tmp = i2c_smbus_read_byte_data((struct i2c_client  const  *)new_client, 34);
  }
#line 680
  if ((tmp & 127) != 0) {
#line 681
    return (-19);
  } else {

  }
  {
#line 683
  tmp = i2c_smbus_read_byte_data((struct i2c_client  const  *)new_client, 253);
  }
  {
#line 686
  if (tmp == 0) {
#line 686
    goto case_0;
  } else {

  }
#line 689
  if (tmp == 1) {
#line 689
    goto case_1;
  } else {

  }
#line 692
  goto switch_default;
  case_0: /* CIL Label */ 
#line 687
  name = "STTS751-0";
#line 688
  goto ldv_30200;
  case_1: /* CIL Label */ 
#line 690
  name = "STTS751-1";
#line 691
  goto ldv_30200;
  switch_default: /* CIL Label */ ;
#line 693
  return (-19);
  switch_break: /* CIL Label */ ;
  }
  ldv_30200: 
  {
#line 695
  descriptor.modname = "stts751";
#line 695
  descriptor.function = "stts751_detect";
#line 695
  descriptor.filename = "drivers/hwmon/stts751.c";
#line 695
  descriptor.format = "Chip %s detected";
#line 695
  descriptor.lineno = 695U;
#line 695
  descriptor.flags = 1U;
#line 695
  descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 695
  descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 695
  tmp___1 = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
  }
#line 695
  if ((int )tmp___1 != 0) {
#line 695
    tmp___2 = 0;
  } else {
#line 695
    tmp___2 = 1;
  }
#line 695
  branch = (bool )tmp___2;
#line 695
  if ((int )branch) {
    {
#line 695
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& new_client->dev),
                      "Chip %s detected", name);
    }
  } else {

  }
  {
#line 697
  strlcpy((char *)(& info->type), (char const   *)(& stts751_id[0].name), 20UL);
  }
#line 698
  return (0);
}
}
#line 701 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_read_chip_config(struct stts751_priv *priv ) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 706
  ret = i2c_smbus_read_byte_data((struct i2c_client  const  *)priv->client, 3);
  }
#line 707
  if (ret < 0) {
#line 708
    return (ret);
  } else {

  }
  {
#line 709
  priv->config = (u8 )ret;
#line 710
  priv->res = (ret & 12) >> 2;
#line 712
  ret = i2c_smbus_read_byte_data((struct i2c_client  const  *)priv->client, 4);
  }
#line 713
  if (ret < 0) {
#line 714
    return (ret);
  } else {

  }
  {
//WARNING: assign value with unchecked upper bound
#line 715
  priv->interval = (u8 )ret;
#line 717
  ret = stts751_read_reg16(priv, & priv->event_max, 5, 6);
  }
#line 719
  if (ret != 0) {
#line 720
    return (ret);
  } else {

  }
  {
#line 722
  ret = stts751_read_reg16(priv, & priv->event_min, 7, 8);
  }
#line 724
  if (ret != 0) {
#line 725
    return (ret);
  } else {

  }
  {
#line 727
  ret = stts751_read_reg8(priv, & priv->therm, 32);
  }
#line 728
  if (ret != 0) {
#line 729
    return (ret);
  } else {

  }
  {
#line 731
  ret = stts751_read_reg8(priv, & tmp, 33);
  }
#line 732
  if (ret != 0) {
#line 733
    return (ret);
  } else {

  }
#line 734
  priv->hyst = priv->therm - tmp;
#line 736
  return (0);
}
}
#line 739 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_input  =    {{{"temp1_input", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                          {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
     & show_input, (ssize_t (*)(struct device * , struct device_attribute * , char const   * ,
                                size_t  ))0}, 0};
#line 740 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_min  =    {{{"temp1_min", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                        {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
     & show_min, & set_min}, 0};
#line 741 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_max  =    {{{"temp1_max", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                        {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
     & show_max, & set_max}, 0};
#line 742 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_min_alarm  =    {{{"temp1_min_alarm", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                              {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
     & show_min_alarm, (ssize_t (*)(struct device * , struct device_attribute * ,
                                    char const   * , size_t  ))0}, 0};
#line 743 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_max_alarm  =    {{{"temp1_max_alarm", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                              {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
     & show_max_alarm, (ssize_t (*)(struct device * , struct device_attribute * ,
                                    char const   * , size_t  ))0}, 0};
#line 744 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_crit  =    {{{"temp1_crit", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                         {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
     & show_therm, & set_therm}, 0};
#line 745 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_crit_hyst  =    {{{"temp1_crit_hyst", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                              {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
     & show_hyst, & set_hyst}, 0};
#line 746 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_crit_alarm  =    {{{"temp1_crit_alarm", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                               {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
     & show_therm_trip, (ssize_t (*)(struct device * , struct device_attribute * ,
                                     char const   * , size_t  ))0}, 0};
#line 748 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct sensor_device_attribute sensor_dev_attr_update_interval  =    {{{"update_interval", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                              {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
     & show_interval, & set_interval}, 0};
#line 750 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct attribute *stts751_attrs[10U]  = 
#line 750
  {      & sensor_dev_attr_temp1_input.dev_attr.attr,      & sensor_dev_attr_temp1_min.dev_attr.attr,      & sensor_dev_attr_temp1_max.dev_attr.attr,      & sensor_dev_attr_temp1_min_alarm.dev_attr.attr, 
        & sensor_dev_attr_temp1_max_alarm.dev_attr.attr,      & sensor_dev_attr_temp1_crit.dev_attr.attr,      & sensor_dev_attr_temp1_crit_hyst.dev_attr.attr,      & sensor_dev_attr_temp1_crit_alarm.dev_attr.attr, 
        & sensor_dev_attr_update_interval.dev_attr.attr,      (struct attribute *)0};
#line 762 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct attribute_group  const  stts751_group  =    {0, 0, 0, (struct attribute **)(& stts751_attrs), 0};
#line 762 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct attribute_group  const  *stts751_groups[2U]  = {      & stts751_group,      (struct attribute_group  const  *)0};
#line 764 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_probe(struct i2c_client *client , struct i2c_device_id  const  *id ) 
{ 
  struct stts751_priv *priv ;
  int ret ;
  bool smbus_nto ;
  int rev_id ;
  void *tmp ;
  struct lock_class_key __key ;
  bool tmp___0 ;
  struct _ddebug descriptor ;
  bool branch ;
  bool tmp___1 ;
  int tmp___2 ;
  int tmp___5 ;

  {
  {
#line 772
  tmp = ldv_devm_kzalloc_18(& client->dev, 232UL, 20971712U);
#line 772
  priv = (struct stts751_priv *)tmp;
  }
#line 773
  if ((unsigned long )priv == (unsigned long )((struct stts751_priv *)0)) {
#line 774
    return (-12);
  } else {

  }
  {
#line 776
  priv->client = client;
#line 777
  priv->notify_max = 1;
#line 778
  priv->notify_min = 1;
#line 779
  i2c_set_clientdata(client, (void *)priv);
#line 780
  __mutex_init(& priv->access_lock, "&priv->access_lock", & __key);
#line 782
  tmp___0 = device_property_present(& client->dev, "smbus-timeout-disable");
  }
#line 782
  if ((int )tmp___0) {
    {
#line 784
    smbus_nto = device_property_read_bool(& client->dev, "smbus-timeout-disable");
#line 787
    ret = i2c_smbus_write_byte_data((struct i2c_client  const  *)client, 34, (int )smbus_nto ? 0 : 128);
    }
#line 789
    if (ret != 0) {
#line 790
      return (ret);
    } else {

    }
  } else {

  }
  {
#line 793
  rev_id = i2c_smbus_read_byte_data((struct i2c_client  const  *)client, 255);
  }
#line 794
  if (rev_id < 0) {
#line 795
    return (-19);
  } else {

  }
#line 796
  if (rev_id != 1) {
    {
#line 797
    descriptor.modname = "stts751";
#line 797
    descriptor.function = "stts751_probe";
#line 797
    descriptor.filename = "drivers/hwmon/stts751.c";
#line 797
    descriptor.format = "Chip revision 0x%x is untested\n";
#line 797
    descriptor.lineno = 798U;
#line 797
    descriptor.flags = 1U;
#line 797
    descriptor.key.dd_key_true.key.enabled.counter = 1;
#line 797
    descriptor.key.dd_key_true.key.__annonCompField4.entries = (struct jump_entry *)1;
#line 797
    tmp___1 = arch_static_branch(& descriptor.key.dd_key_true.key, 1);
    }
#line 797
    if ((int )tmp___1 != 0) {
#line 797
      tmp___2 = 0;
    } else {
#line 797
      tmp___2 = 1;
    }
#line 797
    branch = (bool )tmp___2;
#line 797
    if ((int )branch) {
      {
#line 797
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& client->dev), "Chip revision 0x%x is untested\n",
                        rev_id);
      }
    } else {

    }
  } else {

  }
  {
#line 801
  ret = stts751_read_chip_config(priv);
  }
#line 802
  if (ret != 0) {
#line 803
    return (ret);
  } else {

  }
  {
#line 805
  priv->config = (unsigned int )priv->config & 63U;
#line 806
  ret = i2c_smbus_write_byte_data((struct i2c_client  const  *)client, 3, (int )priv->config);
  }
#line 807
  if (ret != 0) {
#line 808
    return (ret);
  } else {

  }
  {
#line 810
  priv->dev = devm_hwmon_device_register_with_groups(& client->dev, (char const   *)(& client->name),
                                                     (void *)priv, (struct attribute_group  const  **)(& stts751_groups));
#line 813
  tmp___5 = PTR_ERR_OR_ZERO((void const   *)priv->dev);
  }
#line 813
  return (tmp___5);
}
}
#line 816 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
struct i2c_device_id  const  __mod_i2c__stts751_id_device_table[2U]  ;
#line 818 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static struct i2c_driver stts751_driver  = 
#line 818
     {1U, 0, & stts751_probe, 0, 0, 0, & stts751_alert, 0, {"stts751", 0, 0, 0, (_Bool)0,
                                                          0, 0, 0, 0, 0, 0, 0, 0,
                                                          0, 0, 0}, (struct i2c_device_id  const  *)(& stts751_id),
    & stts751_detect, (unsigned short const   *)(& normal_i2c), {0, 0}};
#line 830 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static int stts751_driver_init(void) 
{ 
  int tmp ;

  {
  {
#line 830
  tmp = ldv_i2c_register_driver_19(& __this_module, & stts751_driver);
  }
#line 830
  return (tmp);
}
}
#line 830 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/lkbce/drivers/hwmon/stts751.c"
static void stts751_driver_exit(void) 
{ 


  {
  {
#line 830
  i2c_del_driver(& stts751_driver);
  }
#line 831
  return;
}
}
#line 68 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_dispatch_default_deregister_1_3_3(void) ;
#line 69
void ldv_dispatch_insmod_deregister_5_2(void) ;
#line 70
void ldv_dispatch_insmod_register_5_3(void) ;
#line 71
void ldv_dispatch_register_4_3(struct i2c_driver *arg0 ) ;
#line 72
int ldv_emg_i2c_register_driver(struct module *arg0 , struct i2c_driver *arg1 ) ;
#line 73
void ldv_insmod_3(void *arg0 ) ;
#line 74
void ldv_insmod_stts751_driver_exit_3_2(void (*arg0)(void) ) ;
#line 75
int ldv_insmod_stts751_driver_init_3_8(int (*arg0)(void) ) ;
#line 76
void ldv_main_5(void *arg0 ) ;
#line 77
void ldv_partially_ordered_scenario_2(void *arg0 ) ;
#line 78
void ldv_partially_ordered_scenario_callback_2_17(s32 (*arg0)(struct i2c_client * ,
                                                              struct i2c_board_info * ) ,
                                                  struct i2c_client *arg1 , struct i2c_board_info *arg2 ) ;
#line 79
void ldv_partially_ordered_scenario_callback_2_4(void (*arg0)(struct i2c_client * ,
                                                              enum i2c_alert_protocol  ,
                                                              u32  ) , struct i2c_client *arg1 ,
                                                 enum i2c_alert_protocol *arg2 , unsigned int arg3 ) ;
#line 80
int ldv_partially_ordered_scenario_probe_2_11(s32 (*arg0)(struct i2c_client * , struct i2c_device_id * ) ,
                                              struct i2c_client *arg1 , struct i2c_device_id *arg2 ) ;
#line 81
void ldv_partially_ordered_scenario_release_2_2(int (*arg0)(struct i2c_client * ) ,
                                                struct i2c_client *arg1 ) ;
#line 82
int main(void) ;
#line 85 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
struct ldv_thread ldv_thread_2  ;
#line 86 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
struct ldv_thread ldv_thread_3  ;
#line 87 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
struct ldv_thread ldv_thread_5  ;
#line 93 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_dispatch_default_deregister_1_3_3(void) 
{ 


  {
#line 96
  return;
}
}
#line 100 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_dispatch_insmod_deregister_5_2(void) 
{ 


  {
#line 103
  return;
}
}
#line 107 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_dispatch_insmod_register_5_3(void) 
{ 
  struct ldv_struct_insmod_3 *cf_arg_3 ;
  void *tmp ;

  {
  {
#line 109
  tmp = ldv_xmalloc(4UL);
#line 109
  cf_arg_3 = (struct ldv_struct_insmod_3 *)tmp;
#line 110
  ldv_insmod_3((void *)cf_arg_3);
  }
#line 111
  return;
}
}
#line 115 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_dispatch_register_4_3(struct i2c_driver *arg0 ) 
{ 
  struct ldv_struct_partially_ordered_scenario_2 *cf_arg_2 ;
  void *tmp ;

  {
  {
#line 117
  tmp = ldv_xmalloc(16UL);
#line 117
  cf_arg_2 = (struct ldv_struct_partially_ordered_scenario_2 *)tmp;
#line 118
  cf_arg_2->arg0 = arg0;
#line 119
  ldv_partially_ordered_scenario_2((void *)cf_arg_2);
  }
#line 120
  return;
}
}
#line 124 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
int ldv_emg_i2c_register_driver(struct module *arg0 , struct i2c_driver *arg1 ) 
{ 
  struct i2c_driver *ldv_4_i2c_driver_i2c_driver ;
  void *tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
  {
#line 130
  tmp = external_allocated_data();
#line 130
  ldv_4_i2c_driver_i2c_driver = (struct i2c_driver *)tmp;
#line 133
  tmp___1 = ldv_undef_int();
  }
#line 133
  if (tmp___1 != 0) {
    {
#line 135
    ldv_4_i2c_driver_i2c_driver = arg1;
#line 139
    ldv_dispatch_register_4_3(ldv_4_i2c_driver_i2c_driver);
    }
#line 143
    return (0);
  } else {
    {
#line 150
    tmp___0 = ldv_undef_int_negative();
    }
#line 150
    return (tmp___0);
  }
}
}
#line 160 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_insmod_3(void *arg0 ) 
{ 
  int ldv_3_reg_guard_1_default ;
  int ldv_3_ret_default ;
  void (*ldv_3_stts751_driver_exit_default)(void) ;
  int (*ldv_3_stts751_driver_init_default)(void) ;
  void *tmp ;
  void *tmp___0 ;
  int tmp___1 ;

  {
  {
#line 169
  tmp = external_allocated_data();
#line 169
  ldv_3_stts751_driver_exit_default = (void (*)(void))tmp;
#line 170
  tmp___0 = external_allocated_data();
#line 170
  ldv_3_stts751_driver_init_default = (int (*)(void))tmp___0;
#line 172
  ldv_free(arg0);
#line 177
  ldv_3_ret_default = ldv_insmod_stts751_driver_init_3_8(ldv_3_stts751_driver_init_default);
#line 179
  ldv_3_ret_default = ldv_post_init(ldv_3_ret_default);
#line 182
  tmp___1 = ldv_undef_int();
  }
#line 182
  if (tmp___1 != 0) {
    {
#line 184
    __VERIFIER_assume(ldv_3_ret_default != 0);
    }
#line 192
    return;
  } else {
    {
#line 196
    __VERIFIER_assume(ldv_3_ret_default == 0);
#line 200
    ldv_3_reg_guard_1_default = ldv_undef_int();
    }
#line 204
    if (ldv_3_reg_guard_1_default != 0) {
      {
#line 205
      ldv_dispatch_default_deregister_1_3_3();
      }
    } else {

    }
    {
#line 211
    ldv_insmod_stts751_driver_exit_3_2(ldv_3_stts751_driver_exit_default);
    }
#line 219
    return;
  }
#line 222
  return;
}
}
#line 227 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_insmod_stts751_driver_exit_3_2(void (*arg0)(void) ) 
{ 


  {
  {
#line 228
  stts751_driver_exit();
  }
#line 229
  return;
}
}
#line 232 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
int ldv_insmod_stts751_driver_init_3_8(int (*arg0)(void) ) 
{ 
  int tmp ;

  {
  {
#line 233
  tmp = stts751_driver_init();
  }
#line 233
  return (tmp);
}
}
#line 237 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_main_5(void *arg0 ) 
{ 


  {
  {
#line 242
  ldv_initialize();
#line 246
  ldv_dispatch_insmod_register_5_3();
#line 250
  ldv_dispatch_insmod_deregister_5_2();
#line 254
  ldv_check_final_state();
#line 255
  __VERIFIER_assume(0);
  }
#line 259
  return;
#line 261
  return;
}
}
#line 266 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_partially_ordered_scenario_2(void *arg0 ) 
{ 
  void (*ldv_2_callback_alert)(struct i2c_client * , enum i2c_alert_protocol  , u32  ) ;
  s32 (*ldv_2_callback_detect)(struct i2c_client * , struct i2c_board_info * ) ;
  struct i2c_driver *ldv_2_container_i2c_driver ;
  struct i2c_device_id *ldv_2_ldv_param_11_1_default ;
  struct i2c_board_info *ldv_2_ldv_param_17_1_default ;
  enum i2c_alert_protocol *ldv_2_ldv_param_4_1_default ;
  unsigned int ldv_2_ldv_param_4_2_default ;
  struct i2c_client *ldv_2_resource_client ;
  int ldv_2_ret_default ;
  struct ldv_struct_partially_ordered_scenario_2 *data ;
  void *tmp ;
  void *tmp___0 ;
  void *tmp___1 ;
  void *tmp___2 ;
  void *tmp___3 ;
  void *tmp___4 ;
  void *tmp___5 ;
  void *tmp___6 ;
  void *tmp___7 ;
  int tmp___8 ;
  int tmp___9 ;
  void *tmp___10 ;
  void *tmp___11 ;
  int tmp___12 ;
  int tmp___13 ;

  {
  {
#line 279
  data = (struct ldv_struct_partially_ordered_scenario_2 *)arg0;
#line 283
  tmp = external_allocated_data();
#line 283
  ldv_2_callback_alert = (void (*)(struct i2c_client * , enum i2c_alert_protocol  ,
                                   u32  ))tmp;
#line 284
  tmp___0 = external_allocated_data();
#line 284
  ldv_2_callback_detect = (s32 (*)(struct i2c_client * , struct i2c_board_info * ))tmp___0;
#line 285
  tmp___1 = external_allocated_data();
#line 285
  ldv_2_container_i2c_driver = (struct i2c_driver *)tmp___1;
#line 286
  tmp___2 = external_allocated_data();
#line 286
  ldv_2_ldv_param_11_1_default = (struct i2c_device_id *)tmp___2;
#line 287
  tmp___3 = external_allocated_data();
#line 287
  ldv_2_ldv_param_17_1_default = (struct i2c_board_info *)tmp___3;
#line 288
  tmp___4 = external_allocated_data();
#line 288
  ldv_2_ldv_param_4_1_default = (enum i2c_alert_protocol *)tmp___4;
#line 289
  tmp___5 = external_allocated_data();
#line 289
  ldv_2_resource_client = (struct i2c_client *)tmp___5;
#line 290
  ldv_2_ret_default = ldv_undef_int();
  }
#line 293
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_partially_ordered_scenario_2 *)0)) {
    {
#line 294
    ldv_2_container_i2c_driver = data->arg0;
#line 295
    ldv_free((void *)data);
    }
  } else {

  }
  {
#line 300
  tmp___6 = ldv_xmalloc(1488UL);
#line 300
  ldv_2_resource_client = (struct i2c_client *)tmp___6;
  }
#line 307
  goto ldv_main_2;
#line 309
  return;
  ldv_main_2: 
  {
#line 315
  tmp___9 = ldv_undef_int();
  }
#line 315
  if (tmp___9 != 0) {
    {
#line 317
    tmp___7 = ldv_xmalloc_unknown_size(0UL);
#line 317
    ldv_2_ldv_param_11_1_default = (struct i2c_device_id *)tmp___7;
#line 322
    ldv_2_ret_default = ldv_partially_ordered_scenario_probe_2_11((s32 (*)(struct i2c_client * ,
                                                                           struct i2c_device_id * ))ldv_2_container_i2c_driver->probe,
                                                                  ldv_2_resource_client,
                                                                  ldv_2_ldv_param_11_1_default);
#line 324
    ldv_2_ret_default = ldv_filter_err_code(ldv_2_ret_default);
#line 328
    ldv_free((void *)ldv_2_ldv_param_11_1_default);
#line 331
    tmp___8 = ldv_undef_int();
    }
#line 331
    if (tmp___8 != 0) {
      {
#line 333
      __VERIFIER_assume(ldv_2_ret_default == 0);
      }
#line 340
      goto ldv_call_2;
    } else {
      {
#line 344
      __VERIFIER_assume(ldv_2_ret_default != 0);
      }
#line 351
      goto ldv_main_2;
    }
  } else {
    {
#line 356
    ldv_free((void *)ldv_2_resource_client);
    }
#line 364
    return;
  }
#line 367
  return;
  ldv_call_2: 
  {
#line 373
  tmp___13 = ldv_undef_int();
  }
#line 373
  if (tmp___13 != 0) {
#line 375
    if ((unsigned long )ldv_2_container_i2c_driver->remove != (unsigned long )((int (*)(struct i2c_client * ))0)) {
      {
#line 377
      ldv_partially_ordered_scenario_release_2_2(ldv_2_container_i2c_driver->remove,
                                                 ldv_2_resource_client);
      }
    } else {

    }
#line 385
    goto ldv_main_2;
  } else {
    {
#line 389
    tmp___10 = ldv_xmalloc_unknown_size(0UL);
#line 389
    ldv_2_ldv_param_4_1_default = (enum i2c_alert_protocol *)tmp___10;
#line 392
    tmp___12 = ldv_undef_int();
    }
#line 392
    if (tmp___12 != 0) {
      {
#line 394
      tmp___11 = ldv_xmalloc_unknown_size(0UL);
#line 394
      ldv_2_ldv_param_17_1_default = (struct i2c_board_info *)tmp___11;
#line 399
      ldv_partially_ordered_scenario_callback_2_17(ldv_2_callback_detect, ldv_2_resource_client,
                                                   ldv_2_ldv_param_17_1_default);
#line 403
      ldv_free((void *)ldv_2_ldv_param_17_1_default);
      }
    } else {
      {
#line 410
      ldv_partially_ordered_scenario_callback_2_4(ldv_2_callback_alert, ldv_2_resource_client,
                                                  ldv_2_ldv_param_4_1_default, ldv_2_ldv_param_4_2_default);
      }
    }
  }
  {
#line 416
  ldv_free((void *)ldv_2_ldv_param_4_1_default);
  }
#line 423
  goto ldv_call_2;
#line 425
  return;
}
}
#line 430 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_partially_ordered_scenario_callback_2_17(s32 (*arg0)(struct i2c_client * ,
                                                              struct i2c_board_info * ) ,
                                                  struct i2c_client *arg1 , struct i2c_board_info *arg2 ) 
{ 


  {
  {
#line 431
  stts751_detect(arg1, arg2);
  }
#line 432
  return;
}
}
#line 435 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_partially_ordered_scenario_callback_2_4(void (*arg0)(struct i2c_client * ,
                                                              enum i2c_alert_protocol  ,
                                                              u32  ) , struct i2c_client *arg1 ,
                                                 enum i2c_alert_protocol *arg2 , unsigned int arg3 ) 
{ 


  {
  {
#line 436
  stts751_alert(arg1, *arg2, arg3);
  }
#line 437
  return;
}
}
#line 440 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
int ldv_partially_ordered_scenario_probe_2_11(s32 (*arg0)(struct i2c_client * , struct i2c_device_id * ) ,
                                              struct i2c_client *arg1 , struct i2c_device_id *arg2 ) 
{ 
  int tmp ;

  {
  {
#line 441
  tmp = stts751_probe(arg1, (struct i2c_device_id  const  *)arg2);
  }
#line 441
  return (tmp);
}
}
#line 445 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
void ldv_partially_ordered_scenario_release_2_2(int (*arg0)(struct i2c_client * ) ,
                                                struct i2c_client *arg1 ) 
{ 


  {
  {
#line 446
  (*arg0)(arg1);
  }
#line 447
  return;
}
}
#line 450 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
int main(void) 
{ 


  {
  {
#line 452
  ldv_main_5((void *)0);
  }
#line 453
  return (0);
}
}
#line 466 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
__inline static long PTR_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 469
  tmp = ldv_ptr_err(ptr);
  }
#line 469
  return (tmp);
}
}
#line 603 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
__inline static void *ldv_devm_kzalloc_18(struct device *dev , size_t size , gfp_t gfp ) 
{ 
  void *res ;
  void *tmp ;

  {
  {
#line 607
  tmp = ldv_calloc_unknown_size();
#line 607
  res = tmp;
  }
#line 608
  return (res);
}
}
#line 612 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/avtg/drivers/hwmon/stts751.ko/generic:memory/weaver/.tmp_stts751.c.aux"
static int ldv_i2c_register_driver_19(struct module *ldv_func_arg1 , struct i2c_driver *ldv_func_arg2 ) 
{ 
  int tmp ;

  {
  {
#line 616
  tmp = ldv_emg_i2c_register_driver(ldv_func_arg1, ldv_func_arg2);
  }
#line 616
  return (tmp);
}
}
#line 1 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/generic/memory.c"
void ldv_after_alloc(void *res ) 
{ 


  {
#line 3
  return;
}
}
#line 35 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_xzalloc(size_t size ) ;
#line 26 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 28
  if ((unsigned long )dev != (unsigned long )((struct device  const  *)0) && (unsigned long )dev->p != (unsigned long )((struct device_private */* const  */)0)) {
#line 29
    return ((dev->p)->driver_data);
  } else {

  }
#line 30
  return ((void *)0);
}
}
#line 39 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev , void *data ) 
{ 
  void *tmp ;

  {
  {
#line 41
  tmp = ldv_xzalloc(8UL);
#line 41
  dev->p = (struct device_private *)tmp;
#line 42
  (dev->p)->driver_data = data;
  }
#line 43
  return (0);
}
}
#line 31 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_zalloc(size_t size ) ;
#line 23 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host , unsigned int size ) 
{ 
  struct spi_master *master ;
  void *tmp ;

  {
  {
#line 27
  tmp = ldv_zalloc((unsigned long )size + 2728UL);
#line 27
  master = (struct spi_master *)tmp;
  }
#line 29
  if ((unsigned long )master == (unsigned long )((struct spi_master *)0)) {
#line 30
    return ((struct spi_master *)0);
  } else {

  }
  {
#line 32
  ldv_dev_set_drvdata(& master->dev, (void *)(master + 1UL));
  }
#line 34
  return (master);
}
}
#line 20 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err(void const   *ptr ) 
{ 


  {
#line 22
  return ((unsigned long )ptr > 4294967295UL);
}
}
#line 25 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/err.c"
void *ldv_err_ptr(long error ) 
{ 


  {
#line 27
  return ((void *)(4294967295L - error));
}
}
#line 30 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/err.c"
long ldv_ptr_err(void const   *ptr ) 
{ 


  {
#line 32
  return ((long )(4294967295UL - (unsigned long )ptr));
}
}
#line 35 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err_or_null(void const   *ptr ) 
{ 
  long tmp ;
  int tmp___0 ;

  {
#line 37
  if ((unsigned long )ptr == (unsigned long )((void const   *)0)) {
#line 37
    tmp___0 = 1;
  } else {
    {
#line 37
    tmp = ldv_is_err(ptr);
    }
#line 37
    if (tmp != 0L) {
#line 37
      tmp___0 = 1;
    } else {
#line 37
      tmp___0 = 0;
    }
  }
#line 37
  return ((long )tmp___0);
}
}
#line 67 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/ldv/common.h"
int ldv_post_probe(int probe_ret_val ) ;
#line 21 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/ldv/common.c"
static int ldv_filter_positive_int(int val ) 
{ 


  {
  {
#line 23
  __VERIFIER_assume(val <= 0);
  }
#line 24
  return (val);
}
}
#line 31 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_init(int init_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 33
  tmp = ldv_filter_positive_int(init_ret_val);
  }
#line 33
  return (tmp);
}
}
#line 37 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 39
  tmp = ldv_filter_positive_int(probe_ret_val);
  }
#line 39
  return (tmp);
}
}
#line 43 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val ) 
{ 
  int tmp ;

  {
  {
#line 45
  tmp = ldv_filter_positive_int(ret_val);
  }
#line 45
  return (tmp);
}
}
#line 24 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/linux/mm/kzalloc.c"
void *ldv_kzalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 28
  ldv_check_alloc_flags(flags);
#line 29
  res = ldv_zalloc(size);
#line 30
  ldv_after_alloc(res);
  }
#line 32
  return (res);
}
}
#line 27 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/common.h"
extern void ldv_assert(char const   * , int  ) ;
#line 24 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/gcc.c"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 26
  return (exp);
}
}
#line 35 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/gcc.c"
void __builtin_trap(void) 
{ 


  {
  {
#line 37
  ldv_assert("", 0);
  }
#line 38
  return;
}
}
#line 29 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_malloc(size_t size ) ;
#line 30
void *ldv_calloc(size_t nmemb , size_t size ) ;
#line 41
void *ldv_zalloc_unknown_size(void) ;
#line 25 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
extern void *malloc(size_t  ) ;
#line 26
extern void *calloc(size_t  , size_t  ) ;
#line 27
extern void free(void * ) ;
#line 28
extern void *memset(void * , int  , size_t  ) ;
#line 30 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 32
  tmp___1 = ldv_undef_int();
  }
#line 32
  if (tmp___1 != 0) {
    {
#line 33
    tmp = malloc(size);
#line 33
    res = tmp;
#line 34
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 35
    tmp___0 = ldv_is_err((void const   *)res);
#line 35
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 36
    return (res);
  } else {
#line 39
    return ((void *)0);
  }
}
}
#line 43 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc(size_t nmemb , size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 45
  tmp___1 = ldv_undef_int();
  }
#line 45
  if (tmp___1 != 0) {
    {
#line 46
    tmp = calloc(nmemb, size);
#line 46
    res = tmp;
#line 47
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 48
    tmp___0 = ldv_is_err((void const   *)res);
#line 48
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 49
    return (res);
  } else {
#line 52
    return ((void *)0);
  }
}
}
#line 56 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc(size_t size ) 
{ 
  void *tmp ;

  {
  {
#line 58
  tmp = ldv_calloc(1UL, size);
  }
#line 58
  return (tmp);
}
}
#line 61 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
void ldv_free(void *s ) 
{ 


  {
  {
#line 63
  free(s);
  }
#line 64
  return;
}
}
#line 66 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 68
  tmp = malloc(size);
#line 68
  res = tmp;
#line 69
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 70
  tmp___0 = ldv_is_err((void const   *)res);
#line 70
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 71
  return (res);
}
}
#line 74 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xzalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 76
  tmp = calloc(1UL, size);
#line 76
  res = tmp;
#line 77
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 78
  tmp___0 = ldv_is_err((void const   *)res);
#line 78
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 79
  return (res);
}
}
#line 82 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 84
  tmp___1 = ldv_undef_int();
  }
#line 84
  if (tmp___1 != 0) {
    {
#line 85
    tmp = external_allocated_data();
#line 85
    res = tmp;
#line 86
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 87
    tmp___0 = ldv_is_err((void const   *)res);
#line 87
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 88
    return (res);
  } else {
#line 91
    return ((void *)0);
  }
}
}
#line 95 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 97
  tmp___1 = ldv_undef_int();
  }
#line 97
  if (tmp___1 != 0) {
    {
#line 98
    tmp = external_allocated_data();
#line 98
    res = tmp;
#line 99
    memset(res, 0, 8UL);
#line 100
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 101
    tmp___0 = ldv_is_err((void const   *)res);
#line 101
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 102
    return (res);
  } else {
#line 105
    return ((void *)0);
  }
}
}
#line 109 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc_unknown_size(void) 
{ 
  void *tmp ;

  {
  {
#line 111
  tmp = ldv_calloc_unknown_size();
  }
#line 111
  return (tmp);
}
}
#line 114 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 116
  tmp = external_allocated_data();
#line 116
  res = tmp;
#line 117
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 118
  tmp___0 = ldv_is_err((void const   *)res);
#line 118
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 119
  return (res);
}
}
#line 23 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/nondet.h"
void *ldv_undef_ptr(void) ;
#line 24
unsigned long ldv_undef_ulong(void) ;
#line 30
int ldv_undef_int_nonpositive(void) ;
#line 24 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/nondet.c"
extern int __VERIFIER_nondet_int(void) ;
#line 36
extern unsigned long __VERIFIER_nondet_ulong(void) ;
#line 37
extern void *__VERIFIER_nondet_pointer(void) ;
#line 40 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int(void) 
{ 
  int tmp ;

  {
  {
#line 41
  tmp = __VERIFIER_nondet_int();
  }
#line 41
  return (tmp);
}
}
#line 44 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr(void) 
{ 
  void *tmp ;

  {
  {
#line 45
  tmp = __VERIFIER_nondet_pointer();
  }
#line 45
  return (tmp);
}
}
#line 48 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long ldv_undef_ulong(void) 
{ 
  unsigned long tmp ;

  {
  {
#line 49
  tmp = __VERIFIER_nondet_ulong();
  }
#line 49
  return (tmp);
}
}
#line 52 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_negative(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 54
  tmp = ldv_undef_int();
#line 54
  ret = tmp;
#line 55
  __VERIFIER_assume(ret < 0);
  }
#line 56
  return (ret);
}
}
#line 59 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_nonpositive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 61
  tmp = ldv_undef_int();
#line 61
  ret = tmp;
#line 62
  __VERIFIER_assume(ret <= 0);
  }
#line 63
  return (ret);
}
}
#line 34 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/thread.h"
int ldv_thread_create(struct ldv_thread *ldv_thread , void (*function)(void * ) ,
                      void *data ) ;
#line 37
int ldv_thread_create_N(struct ldv_thread_set *ldv_thread_set , void (*function)(void * ) ,
                        void *data ) ;
#line 40
int ldv_thread_join(struct ldv_thread *ldv_thread , void (*function)(void * ) ) ;
#line 43
int ldv_thread_join_N(struct ldv_thread_set *ldv_thread_set , void (*function)(void * ) ) ;
#line 21 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/thread.c"
int ldv_thread_create(struct ldv_thread *ldv_thread , void (*function)(void * ) ,
                      void *data ) 
{ 


  {
#line 23
  if ((unsigned long )function != (unsigned long )((void (*)(void * ))0)) {
    {
#line 24
    (*function)(data);
    }
  } else {

  }
#line 25
  return (0);
}
}
#line 29 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/thread.c"
int ldv_thread_create_N(struct ldv_thread_set *ldv_thread_set , void (*function)(void * ) ,
                        void *data ) 
{ 
  int i ;

  {
#line 33
  if ((unsigned long )function != (unsigned long )((void (*)(void * ))0)) {
#line 34
    i = 0;
#line 34
    goto ldv_832;
    ldv_831: 
    {
#line 35
    (*function)(data);
#line 34
    i = i + 1;
    }
    ldv_832: ;
#line 34
    if (ldv_thread_set->number > i) {
#line 36
      goto ldv_831;
    } else {

    }

  } else {

  }
#line 38
  return (0);
}
}
#line 42 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/thread.c"
int ldv_thread_join(struct ldv_thread *ldv_thread , void (*function)(void * ) ) 
{ 


  {
#line 44
  return (0);
}
}
#line 48 "/home/debian/klever-work/native-scheduler-work-dir/scheduler/jobs/1b8c3a300cb8950b0dcf90b528381400/klever-core-work-dir/job/root/verifier/thread.c"
int ldv_thread_join_N(struct ldv_thread_set *ldv_thread_set , void (*function)(void * ) ) 
{ 


  {
#line 50
  return (0);
}
}
