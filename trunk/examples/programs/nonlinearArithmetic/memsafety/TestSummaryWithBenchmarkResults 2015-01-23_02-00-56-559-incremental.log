/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/960521-1_1_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 626), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 630), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 626), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 55 locations, 17 error locations. Automizer needed 39.9s and 13 iterations. Automata difference (including EdgeChecker) took 37.8s. Computation of Hoare annotation took 0.0s. Minimization removed 118 states and took 0.0s. Biggest automaton had 87 states and ocurred in iteration 12.	InterpolantCoveringCapability: 28/42	ICC %: 0.6666666666666666	EdgeCheckerBenchmarkData: EdgeChecker queries: 1372In 127Ca 4Re trivial, 0In 0Ca 0Re lazy, 770In 27Ca 0Re nontrivialSat,104In 12Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 37.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.3s InterpolantComputationTime: 1.5s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 229 NumberOfCheckSat: 0	Conjuncts in SSA: 1672 Conjuncts in UnsatCore: 86	Size of predicates FP: 986 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/960521-1_1_false-valid-free.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_FREE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 626), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 630), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 626), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 55 locations, 17 error locations. Automizer needed 39.6s and 13 iterations. Automata difference (including EdgeChecker) took 37.9s. Computation of Hoare annotation took 0.0s. Minimization removed 119 states and took 0.0s. Biggest automaton had 87 states and ocurred in iteration 12.	InterpolantCoveringCapability: 28/42	ICC %: 0.6666666666666666	EdgeCheckerBenchmarkData: EdgeChecker queries: 1389In 127Ca 4Re trivial, 0In 0Ca 0Re lazy, 762In 27Ca 0Re nontrivialSat,103In 12Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 37.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.2s InterpolantComputationTime: 1.2s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 229 NumberOfCheckSat: 0	Conjuncts in SSA: 1672 Conjuncts in UnsatCore: 88	Size of predicates FP: 986 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/960521-1_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 626), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 626), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 630), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 58 locations, 19 error locations. Automizer needed 39.6s and 15 iterations. Automata difference (including EdgeChecker) took 37.7s. Computation of Hoare annotation took 0.0s. Minimization removed 159 states and took 0.0s. Biggest automaton had 93 states and ocurred in iteration 12.	InterpolantCoveringCapability: 39/53	ICC %: 0.7358490566037735	EdgeCheckerBenchmarkData: EdgeChecker queries: 1550In 147Ca 4Re trivial, 0In 0Ca 0Re lazy, 1074In 30Ca 0Re nontrivialSat,121In 12Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 37.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.2s InterpolantComputationTime: 1.4s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 279 NumberOfCheckSat: 0	Conjuncts in SSA: 1966 Conjuncts in UnsatCore: 107	Size of predicates FP: 1320 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/list-ext_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Timout or Toolchain cancelled by user]

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/list-ext_false-not-label.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: a call of __VERIFIER_error() is reachable 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 81 locations, 26 error locations. Automizer needed 1.4s and 7 iterations. Automata difference (including EdgeChecker) took 0.7s. Computation of Hoare annotation took 0.0s. Minimization removed 138 states and took 0.0s. Biggest automaton had 76 states and ocurred in iteration 2.	InterpolantCoveringCapability: 10/10	ICC %: 1.0	EdgeCheckerBenchmarkData: EdgeChecker queries: 796In 47Ca 4Re trivial, 0In 0Ca 0Re lazy, 548In 6Ca 0Re nontrivialSat,109In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.4s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 112 NumberOfCheckSat: 0	Conjuncts in SSA: 488 Conjuncts in UnsatCore: 55	Size of predicates FP: 329 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/list-ext_flag_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 666), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that call of __VERIFIER_error() unreachable (line 671), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 627), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 666), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 98 locations, 38 error locations. Automizer needed 63.4s and 9 iterations. Automata difference (including EdgeChecker) took 13.0s. Computation of Hoare annotation took 0.0s. Minimization removed 103 states and took 0.0s. Biggest automaton had 96 states and ocurred in iteration 5.	InterpolantCoveringCapability: 6/6	ICC %: 1.0	EdgeCheckerBenchmarkData: EdgeChecker queries: 1176In 59Ca 0Re trivial, 0In 0Ca 0Re lazy, 909In 2Ca 0Re nontrivialSat,124In 1Ca 0Re nontrivialUnsat,0In 1Ca 0Re nontrivialUnknown. EdgeChecker time: 12.8s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 50.2s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 146 NumberOfCheckSat: 0	Conjuncts in SSA: 713 Conjuncts in UnsatCore: 71	Size of predicates FP: 507 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/list-ext_flag_false-not-label.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: not all allocated memory was freed 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 78 locations, 28 error locations. Automizer needed 0.4s and 5 iterations. Automata difference (including EdgeChecker) took 0.2s. Computation of Hoare annotation took 0.0s. Minimization removed 31 states and took 0.0s. Biggest automaton had 84 states and ocurred in iteration 2.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 420In 26Ca 5Re trivial, 0In 0Ca 0Re lazy, 263In 0Ca 0Re nontrivialSat,48In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.1s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 61 NumberOfCheckSat: 0	Conjuncts in SSA: 220 Conjuncts in UnsatCore: 24	Size of predicates FP: 131 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/simple-ext_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Timout or Toolchain cancelled by user]

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/simple-ext_false-not-label.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: a call of __VERIFIER_error() is reachable 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 55 locations, 16 error locations. Automizer needed 0.8s and 7 iterations. Automata difference (including EdgeChecker) took 0.3s. Computation of Hoare annotation took 0.0s. Minimization removed 62 states and took 0.0s. Biggest automaton had 53 states and ocurred in iteration 2.	InterpolantCoveringCapability: 6/6	ICC %: 1.0	EdgeCheckerBenchmarkData: EdgeChecker queries: 337In 40Ca 4Re trivial, 0In 0Ca 0Re lazy, 269In 0Ca 0Re nontrivialSat,62In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 92 NumberOfCheckSat: 0	Conjuncts in SSA: 399 Conjuncts in UnsatCore: 42	Size of predicates FP: 210 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0019_1_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0019_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0158_1_false-valid-free.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_FREE UltimateResult: UNSAFE_FREE   free of unallocated memory possible 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 24 locations, 6 error locations. Automizer needed 0.0s and 1 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 19 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: No data available	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 7 NumberOfCheckSat: 0	Conjuncts in SSA: 0 Conjuncts in UnsatCore: 0	Size of predicates FP: 0 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0158_1_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: UNSAFE_MEMTRACK   not all allocated memory was freed 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 18 locations, 2 error locations. Automizer needed 0.0s and 2 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 14 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 9In 2Ca 2Re trivial, 0In 0Ca 0Re lazy, 0In 0Ca 0Re nontrivialSat,0In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 15 NumberOfCheckSat: 0	Conjuncts in SSA: 74 Conjuncts in UnsatCore: 1	Size of predicates FP: 6 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0158_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSAFE_FREE   free of unallocated memory possible 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 21 locations, 4 error locations. Automizer needed 0.0s and 1 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 16 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: No data available	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 7 NumberOfCheckSat: 0	Conjuncts in SSA: 0 Conjuncts in UnsatCore: 0	Size of predicates FP: 0 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0214_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: identifier is not declared (neither a variable nor a function name)]

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0217_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: identifier is not declared (neither a variable nor a function name)]

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0232_1_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 649), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 649), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 649), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 649), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 647)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 128 locations, 57 error locations. Automizer needed 34.0s and 20 iterations. Automata difference (including EdgeChecker) took 29.4s. Computation of Hoare annotation took 0.0s. Minimization removed 43 states and took 0.0s. Biggest automaton had 108 states and ocurred in iteration 4.	InterpolantCoveringCapability: 6/14	ICC %: 0.42857142857142855	EdgeCheckerBenchmarkData: EdgeChecker queries: 3033In 280Ca 10Re trivial, 0In 0Ca 0Re lazy, 3375In 83Ca 8Re nontrivialSat,212In 11Ca 1Re nontrivialUnsat,2In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 26.9s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.3s InterpolantComputationTime: 4.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 373 NumberOfCheckSat: 0	Conjuncts in SSA: 2553 Conjuncts in UnsatCore: 266	Size of predicates FP: 1889 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0232_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 127 locations, 57 error locations. Automizer needed 35.0s and 19 iterations. Automata difference (including EdgeChecker) took 29.3s. Computation of Hoare annotation took 0.0s. Minimization removed 43 states and took 0.0s. Biggest automaton had 105 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 3335In 259Ca 15Re trivial, 0In 0Ca 0Re lazy, 3839In 125Ca 0Re nontrivialSat,177In 15Ca 0Re nontrivialUnsat,2In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 27.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.3s InterpolantComputationTime: 5.2s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 341 NumberOfCheckSat: 0	Conjuncts in SSA: 2360 Conjuncts in UnsatCore: 273	Size of predicates FP: 2102 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0504_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 790 column 2011: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/list-ext-properties/test-0513_1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 688), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 691), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 691), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 674), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 666), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 663), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 677), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 677), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 663), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 689), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 663), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 677), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 663), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 678), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 674), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 691), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 677), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 663), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 687), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 688), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 663), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 671), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 689), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 671), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 691), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 666), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 678), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 687), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 284 locations, 145 error locations. Automizer needed 38.3s and 8 iterations. Automata difference (including EdgeChecker) took 37.8s. Computation of Hoare annotation took 0.0s. Minimization removed 331 states and took 0.0s. Biggest automaton had 303 states and ocurred in iteration 2.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 2012In 38Ca 4Re trivial, 0In 0Ca 0Re lazy, 1259In 0Ca 0Re nontrivialSat,113In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 37.5s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 71 NumberOfCheckSat: 0	Conjuncts in SSA: 467 Conjuncts in UnsatCore: 27	Size of predicates FP: 212 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/Avery-2006FLOPS-Tabel1_true-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 560), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 560), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 131 locations, 55 error locations. Automizer needed 38.6s and 12 iterations. Automata difference (including EdgeChecker) took 36.6s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 102 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 650In 81Ca 4Re trivial, 0In 0Ca 0Re lazy, 375In 0Ca 0Re nontrivialSat,35In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.5s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.7s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 144 NumberOfCheckSat: 0	Conjuncts in SSA: 1184 Conjuncts in UnsatCore: 68	Size of predicates FP: 598 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/Ben-Amram-2010LMCS-Ex2.3-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 101 locations, 43 error locations. Automizer needed 37.6s and 10 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 80 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 299In 44Ca 3Re trivial, 0In 0Ca 0Re lazy, 223In 0Ca 0Re nontrivialSat,31In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 1.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 108 NumberOfCheckSat: 0	Conjuncts in SSA: 692 Conjuncts in UnsatCore: 51	Size of predicates FP: 449 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/BradleyMannaSipma-2005CAV-Fig1-alloca_unknown-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 115 locations, 49 error locations. Automizer needed 37.5s and 10 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 93 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 441In 44Ca 3Re trivial, 0In 0Ca 0Re lazy, 244In 0Ca 0Re nontrivialSat,35In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 108 NumberOfCheckSat: 0	Conjuncts in SSA: 696 Conjuncts in UnsatCore: 51	Size of predicates FP: 449 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/BradleyMannaSipma-2005CAV-Fig1-modified-alloca_unknown-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 541)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 85 locations, 35 error locations. Automizer needed 36.8s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 71 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 707In 52Ca 3Re trivial, 0In 0Ca 0Re lazy, 175In 5Ca 0Re nontrivialSat,6In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 90 NumberOfCheckSat: 0	Conjuncts in SSA: 544 Conjuncts in UnsatCore: 38	Size of predicates FP: 231 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/BradleyMannaSipma-2005ICALP-Fig1-alloca_unknown-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 75 locations, 31 error locations. Automizer needed 37.0s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 64 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 283In 54Ca 3Re trivial, 0In 0Ca 0Re lazy, 154In 0Ca 0Re nontrivialSat,23In 2Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 0.4s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 112 NumberOfCheckSat: 0	Conjuncts in SSA: 676 Conjuncts in UnsatCore: 37	Size of predicates FP: 312 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/BrockschmidtCookFuhs-2013CAV-Fig1-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 62 locations, 25 error locations. Automizer needed 37.9s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 51 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 222In 40Ca 3Re trivial, 0In 0Ca 0Re lazy, 156In 0Ca 0Re nontrivialSat,14In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 84 NumberOfCheckSat: 0	Conjuncts in SSA: 585 Conjuncts in UnsatCore: 52	Size of predicates FP: 437 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/BrockschmidtCookFuhs-2013CAV-Introduction-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 48 locations, 19 error locations. Automizer needed 36.7s and 8 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 40 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 128In 36Ca 3Re trivial, 0In 0Ca 0Re lazy, 89In 0Ca 0Re nontrivialSat,12In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.4s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 74 NumberOfCheckSat: 0	Conjuncts in SSA: 436 Conjuncts in UnsatCore: 38	Size of predicates FP: 225 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/ChenFlurMukhopadhyay-2012SAS-Fig1-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 69 locations, 29 error locations. Automizer needed 37.3s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 54 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 175In 42Ca 4Re trivial, 0In 0Ca 0Re lazy, 152In 0Ca 0Re nontrivialSat,19In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.8s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 79 NumberOfCheckSat: 0	Conjuncts in SSA: 580 Conjuncts in UnsatCore: 49	Size of predicates FP: 292 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/CookSeeZuleger-2013TACAS-Fig3-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 52 locations, 19 error locations. Automizer needed 36.7s and 8 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 41 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 172In 34Ca 3Re trivial, 0In 0Ca 0Re lazy, 88In 0Ca 0Re nontrivialSat,12In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 70 NumberOfCheckSat: 0	Conjuncts in SSA: 436 Conjuncts in UnsatCore: 34	Size of predicates FP: 231 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/CookSeeZuleger-2013TACAS-Fig7a-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 75 locations, 29 error locations. Automizer needed 37.6s and 10 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 1 states and took 0.0s. Biggest automaton had 58 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 377In 46Ca 3Re trivial, 0In 0Ca 0Re lazy, 196In 0Ca 0Re nontrivialSat,22In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 1.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 104 NumberOfCheckSat: 0	Conjuncts in SSA: 687 Conjuncts in UnsatCore: 51	Size of predicates FP: 538 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/CookSeeZuleger-2013TACAS-Fig7b-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 76 locations, 29 error locations. Automizer needed 38.1s and 12 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 1 states and took 0.0s. Biggest automaton had 59 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 485In 50Ca 3Re trivial, 0In 0Ca 0Re lazy, 198In 0Ca 0Re nontrivialSat,19In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.5s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 124 NumberOfCheckSat: 0	Conjuncts in SSA: 819 Conjuncts in UnsatCore: 55	Size of predicates FP: 635 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/GulwaniJainKoskinen-2009PLDI-Fig1-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 82 locations, 35 error locations. Automizer needed 36.7s and 8 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 9 states and took 0.0s. Biggest automaton had 67 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 299In 36Ca 3Re trivial, 0In 0Ca 0Re lazy, 171In 0Ca 0Re nontrivialSat,20In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 75 NumberOfCheckSat: 0	Conjuncts in SSA: 470 Conjuncts in UnsatCore: 35	Size of predicates FP: 201 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/HarrisLalNoriRajamani-2010SAS-Fig1-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 563), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 566), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 566), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 566), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 566), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 563), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 566), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 570), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 566), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 143 locations, 63 error locations. Automizer needed 30.1s and 13 iterations. Automata difference (including EdgeChecker) took 25.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 115 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 819In 116Ca 4Re trivial, 0In 0Ca 0Re lazy, 498In 0Ca 0Re nontrivialSat,36In 0Ca 0Re nontrivialUnsat,2In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 25.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.2s InterpolantComputationTime: 4.6s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 146 NumberOfCheckSat: 0	Conjuncts in SSA: 1281 Conjuncts in UnsatCore: 83	Size of predicates FP: 837 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/HarrisLalNoriRajamani-2010SAS-Fig2-alloca_unknown-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 574), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 567), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 595), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 592), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 594), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 595), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 565), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 575), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 592), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 565), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 574), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 573), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 570), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 575), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 577), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 567), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 592), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 573), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 577), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 595), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 561), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 577), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 577), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 595), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 595), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 592), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 561), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 595), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 594), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 570), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 572)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 112 locations, 43 error locations. Automizer needed 37.5s and 11 iterations. Automata difference (including EdgeChecker) took 36.7s. Computation of Hoare annotation took 0.0s. Minimization removed 57 states and took 0.0s. Biggest automaton had 105 states and ocurred in iteration 1.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 1206In 136Ca 3Re trivial, 0In 0Ca 0Re lazy, 331In 20Ca 0Re nontrivialSat,31In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.6s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 0.5s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 152 NumberOfCheckSat: 0	Conjuncts in SSA: 744 Conjuncts in UnsatCore: 47	Size of predicates FP: 586 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/HarrisLalNoriRajamani-2010SAS-Fig3-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 41 locations, 11 error locations. Automizer needed 63.9s and 5 iterations. Automata difference (including EdgeChecker) took 12.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 34 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 61In 27Ca 0Re trivial, 0In 0Ca 0Re lazy, 28In 3Ca 0Re nontrivialSat,6In 1Ca 0Re nontrivialUnsat,0In 1Ca 0Re nontrivialUnknown. EdgeChecker time: 12.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 51.7s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 46 NumberOfCheckSat: 0	Conjuncts in SSA: 322 Conjuncts in UnsatCore: 20	Size of predicates FP: 148 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/KroeningSharyginaTsitovichWintersteiger-2010CAV-Fig1-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 61 locations, 25 error locations. Automizer needed 36.6s and 7 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 51 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 127In 32Ca 3Re trivial, 0In 0Ca 0Re lazy, 92In 0Ca 0Re nontrivialSat,17In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 63 NumberOfCheckSat: 0	Conjuncts in SSA: 381 Conjuncts in UnsatCore: 33	Size of predicates FP: 189 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/LarrazOliverasRodriguez-CarbonellRubio-2013FMCAD-Fig1-alloca_unknown-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 110 locations, 45 error locations. Automizer needed 37.3s and 9 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 13 states and took 0.0s. Biggest automaton had 87 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 758In 44Ca 3Re trivial, 0In 0Ca 0Re lazy, 265In 0Ca 0Re nontrivialSat,33In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.7s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 96 NumberOfCheckSat: 0	Conjuncts in SSA: 627 Conjuncts in UnsatCore: 44	Size of predicates FP: 408 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/Masse-alloca_unknown-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 36 locations, 13 error locations. Automizer needed 62.4s and 6 iterations. Automata difference (including EdgeChecker) took 12.1s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 31 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 73In 19Ca 0Re trivial, 0In 0Ca 0Re lazy, 31In 1Ca 0Re nontrivialSat,8In 1Ca 0Re nontrivialUnsat,0In 1Ca 0Re nontrivialUnknown. EdgeChecker time: 12.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 50.2s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 49 NumberOfCheckSat: 0	Conjuncts in SSA: 247 Conjuncts in UnsatCore: 21	Size of predicates FP: 132 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/NoriSharma-2013FSE-Fig7-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 107 locations, 45 error locations. Automizer needed 30.0s and 3 iterations. Automata difference (including EdgeChecker) took 19.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 79 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 101In 12Ca 2Re trivial, 0In 0Ca 0Re lazy, 92In 0Ca 0Re nontrivialSat,6In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 19.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 10.6s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 19 NumberOfCheckSat: 0	Conjuncts in SSA: 295 Conjuncts in UnsatCore: 30	Size of predicates FP: 173 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/NoriSharma-2013FSE-Fig8-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 119 locations, 53 error locations. Automizer needed 35.2s and 4 iterations. Automata difference (including EdgeChecker) took 18.8s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 91 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 152In 16Ca 2Re trivial, 0In 0Ca 0Re lazy, 142In 0Ca 0Re nontrivialSat,6In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 18.8s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 16.2s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 26 NumberOfCheckSat: 0	Conjuncts in SSA: 396 Conjuncts in UnsatCore: 44	Size of predicates FP: 275 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/PodelskiRybalchenko-2004VMCAI-Ex2-alloca_false-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 33 locations, 11 error locations. Automizer needed 63.2s and 5 iterations. Automata difference (including EdgeChecker) took 12.1s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 28 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 43In 17Ca 0Re trivial, 0In 0Ca 0Re lazy, 28In 1Ca 0Re nontrivialSat,6In 1Ca 0Re nontrivialUnsat,0In 1Ca 0Re nontrivialUnknown. EdgeChecker time: 12.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 51.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 46 NumberOfCheckSat: 0	Conjuncts in SSA: 222 Conjuncts in UnsatCore: 20	Size of predicates FP: 148 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/TelAviv-Amir-Minimum-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 84 locations, 37 error locations. Automizer needed 36.8s and 7 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 70 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 188In 32Ca 3Re trivial, 0In 0Ca 0Re lazy, 166In 0Ca 0Re nontrivialSat,30In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 63 NumberOfCheckSat: 0	Conjuncts in SSA: 388 Conjuncts in UnsatCore: 33	Size of predicates FP: 225 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/Toulouse-BranchesToLoop-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 79 locations, 31 error locations. Automizer needed 40.0s and 9 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 60 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 282In 42Ca 4Re trivial, 0In 0Ca 0Re lazy, 157In 0Ca 0Re nontrivialSat,17In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 3.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 94 NumberOfCheckSat: 0	Conjuncts in SSA: 788 Conjuncts in UnsatCore: 61	Size of predicates FP: 756 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/Toulouse-MultiBranchesToLoop-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 572), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 582), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 566), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 572), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 577), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 587), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 569), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 592), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 593), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 574), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 567), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 592), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 567), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 582), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 587), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 593), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 561), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 589), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 591), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 592), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 579), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 593), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 569), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 584), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 586), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 567), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 579), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 582), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 587), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 587), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 572), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 567), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 576), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 582), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 584), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 584), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 592), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 592), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 586), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 571), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 581), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 579), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 579), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 569), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 572), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 569), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 591), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 577), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 574), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 577), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 589), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 593), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 593), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 589), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 571), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 574), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 593), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 591), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 584), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 589), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 576), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 577), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 581), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 574), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 591), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 592), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 566), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 561)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 239 locations, 111 error locations. Automizer needed 34.7s and 14 iterations. Automata difference (including EdgeChecker) took 27.7s. Computation of Hoare annotation took 0.0s. Minimization removed 38 states and took 0.0s. Biggest automaton had 188 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 3706In 144Ca 3Re trivial, 0In 0Ca 0Re lazy, 3691In 0Ca 0Re nontrivialSat,205In 0Ca 0Re nontrivialUnsat,2In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 26.8s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.4s InterpolantComputationTime: 6.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 528 NumberOfCheckSat: 0	Conjuncts in SSA: 2558 Conjuncts in UnsatCore: 132	Size of predicates FP: 5850 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/Urban-2013WST-Fig1-alloca_false-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: [ShortDescription: Timeout LongDescription: Timout or Toolchain cancelled by user]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/Urban-2013WST-Fig2-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 49 locations, 19 error locations. Automizer needed 36.6s and 8 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 41 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 166In 34Ca 3Re trivial, 0In 0Ca 0Re lazy, 92In 0Ca 0Re nontrivialSat,12In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 67 NumberOfCheckSat: 0	Conjuncts in SSA: 413 Conjuncts in UnsatCore: 34	Size of predicates FP: 218 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/Urban-2013WST-Fig2-modified1000-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 49 locations, 19 error locations. Automizer needed 36.7s and 7 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 41 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 135In 30Ca 3Re trivial, 0In 0Ca 0Re lazy, 94In 0Ca 0Re nontrivialSat,10In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 60 NumberOfCheckSat: 0	Conjuncts in SSA: 365 Conjuncts in UnsatCore: 32	Size of predicates FP: 232 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/Urban-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 75 locations, 31 error locations. Automizer needed 36.8s and 7 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 61 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 176In 30Ca 3Re trivial, 0In 0Ca 0Re lazy, 137In 0Ca 0Re nontrivialSat,22In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.4s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 63 NumberOfCheckSat: 0	Conjuncts in SSA: 388 Conjuncts in UnsatCore: 32	Size of predicates FP: 250 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/Velroyen-alloca_false-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 55 locations, 23 error locations. Automizer needed 62.1s and 6 iterations. Automata difference (including EdgeChecker) took 12.1s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 49 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 123In 19Ca 0Re trivial, 0In 0Ca 0Re lazy, 51In 1Ca 0Re nontrivialSat,18In 1Ca 0Re nontrivialUnsat,0In 1Ca 0Re nontrivialUnknown. EdgeChecker time: 12.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 49.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 49 NumberOfCheckSat: 0	Conjuncts in SSA: 250 Conjuncts in UnsatCore: 21	Size of predicates FP: 132 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/a.01-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 558), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 83 locations, 35 error locations. Automizer needed 37.4s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 68 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 225In 60Ca 3Re trivial, 0In 0Ca 0Re lazy, 181In 0Ca 0Re nontrivialSat,23In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 91 NumberOfCheckSat: 0	Conjuncts in SSA: 724 Conjuncts in UnsatCore: 48	Size of predicates FP: 364 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/a.04-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 68 locations, 27 error locations. Automizer needed 37.4s and 10 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 54 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 225In 69Ca 4Re trivial, 0In 0Ca 0Re lazy, 148In 0Ca 0Re nontrivialSat,17In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 110 NumberOfCheckSat: 0	Conjuncts in SSA: 836 Conjuncts in UnsatCore: 52	Size of predicates FP: 360 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/a.05-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 68 locations, 27 error locations. Automizer needed 37.2s and 10 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 54 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 223In 66Ca 3Re trivial, 0In 0Ca 0Re lazy, 149In 0Ca 0Re nontrivialSat,15In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.8s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 110 NumberOfCheckSat: 0	Conjuncts in SSA: 836 Conjuncts in UnsatCore: 51	Size of predicates FP: 417 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/a.06-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 557), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 87 locations, 37 error locations. Automizer needed 38.8s and 11 iterations. Automata difference (including EdgeChecker) took 36.5s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 69 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 302In 75Ca 4Re trivial, 0In 0Ca 0Re lazy, 249In 0Ca 0Re nontrivialSat,22In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 2.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 120 NumberOfCheckSat: 0	Conjuncts in SSA: 1071 Conjuncts in UnsatCore: 65	Size of predicates FP: 545 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/a.07-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 93 locations, 39 error locations. Automizer needed 39.1s and 12 iterations. Automata difference (including EdgeChecker) took 36.5s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 73 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 363In 81Ca 4Re trivial, 0In 0Ca 0Re lazy, 262In 0Ca 0Re nontrivialSat,25In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 2.2s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 138 NumberOfCheckSat: 0	Conjuncts in SSA: 1196 Conjuncts in UnsatCore: 68	Size of predicates FP: 586 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/a.08-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 75 locations, 31 error locations. Automizer needed 37.5s and 10 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 60 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 229In 69Ca 4Re trivial, 0In 0Ca 0Re lazy, 164In 0Ca 0Re nontrivialSat,21In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 110 NumberOfCheckSat: 0	Conjuncts in SSA: 836 Conjuncts in UnsatCore: 52	Size of predicates FP: 360 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/a.09_assume-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 559), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 104 locations, 45 error locations. Automizer needed 37.8s and 10 iterations. Automata difference (including EdgeChecker) took 36.5s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 84 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 473In 69Ca 4Re trivial, 0In 0Ca 0Re lazy, 248In 0Ca 0Re nontrivialSat,28In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 102 NumberOfCheckSat: 0	Conjuncts in SSA: 856 Conjuncts in UnsatCore: 52	Size of predicates FP: 330 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/a.10-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 82 locations, 35 error locations. Automizer needed 37.3s and 10 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 67 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 251In 66Ca 3Re trivial, 0In 0Ca 0Re lazy, 183In 0Ca 0Re nontrivialSat,23In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.8s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 110 NumberOfCheckSat: 0	Conjuncts in SSA: 840 Conjuncts in UnsatCore: 51	Size of predicates FP: 417 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/add_last-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 42 locations, 15 error locations. Automizer needed 51.0s and 7 iterations. Automata difference (including EdgeChecker) took 12.3s. Computation of Hoare annotation took 0.0s. Minimization removed 11 states and took 0.0s. Biggest automaton had 35 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 105In 29Ca 0Re trivial, 0In 0Ca 0Re lazy, 97In 1Ca 0Re nontrivialSat,13In 1Ca 0Re nontrivialUnsat,0In 1Ca 0Re nontrivialUnknown. EdgeChecker time: 12.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 38.7s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 60 NumberOfCheckSat: 0	Conjuncts in SSA: 361 Conjuncts in UnsatCore: 40	Size of predicates FP: 221 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/add_last_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 42 locations, 15 error locations. Automizer needed 0.1s and 5 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 35 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 71In 18Ca 3Re trivial, 0In 0Ca 0Re lazy, 46In 0Ca 0Re nontrivialSat,9In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 38 NumberOfCheckSat: 0	Conjuncts in SSA: 194 Conjuncts in UnsatCore: 16	Size of predicates FP: 46 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/array01-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/array02-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/array03-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/aviad_true-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 85 locations, 35 error locations. Automizer needed 37.9s and 10 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 68 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 260In 63Ca 3Re trivial, 0In 0Ca 0Re lazy, 177In 0Ca 0Re nontrivialSat,22In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 116 NumberOfCheckSat: 0	Conjuncts in SSA: 800 Conjuncts in UnsatCore: 51	Size of predicates FP: 478 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.01-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 68 locations, 27 error locations. Automizer needed 37.3s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 54 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 192In 60Ca 3Re trivial, 0In 0Ca 0Re lazy, 142In 0Ca 0Re nontrivialSat,16In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 94 NumberOfCheckSat: 0	Conjuncts in SSA: 736 Conjuncts in UnsatCore: 48	Size of predicates FP: 382 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.02-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 75 locations, 31 error locations. Automizer needed 37.9s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 60 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 188In 57Ca 3Re trivial, 0In 0Ca 0Re lazy, 162In 0Ca 0Re nontrivialSat,18In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 94 NumberOfCheckSat: 0	Conjuncts in SSA: 736 Conjuncts in UnsatCore: 48	Size of predicates FP: 463 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.03-no-inv_assume-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 71 locations, 29 error locations. Automizer needed 36.6s and 7 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 59 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 170In 45Ca 3Re trivial, 0In 0Ca 0Re lazy, 114In 0Ca 0Re nontrivialSat,18In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 67 NumberOfCheckSat: 0	Conjuncts in SSA: 488 Conjuncts in UnsatCore: 32	Size of predicates FP: 213 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.03_assume-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 87 locations, 37 error locations. Automizer needed 36.9s and 8 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 72 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 266In 54Ca 3Re trivial, 0In 0Ca 0Re lazy, 153In 0Ca 0Re nontrivialSat,28In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.4s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 80 NumberOfCheckSat: 0	Conjuncts in SSA: 570 Conjuncts in UnsatCore: 36	Size of predicates FP: 209 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.04-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 75 locations, 31 error locations. Automizer needed 37.2s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 60 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 190In 60Ca 4Re trivial, 0In 0Ca 0Re lazy, 161In 0Ca 0Re nontrivialSat,19In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.7s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 94 NumberOfCheckSat: 0	Conjuncts in SSA: 772 Conjuncts in UnsatCore: 49	Size of predicates FP: 406 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.05-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 63 locations, 23 error locations. Automizer needed 36.6s and 8 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 49 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 151In 54Ca 3Re trivial, 0In 0Ca 0Re lazy, 91In 0Ca 0Re nontrivialSat,15In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 92 NumberOfCheckSat: 0	Conjuncts in SSA: 606 Conjuncts in UnsatCore: 36	Size of predicates FP: 257 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.06-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 78 locations, 31 error locations. Automizer needed 37.6s and 10 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 61 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 245In 66Ca 3Re trivial, 0In 0Ca 0Re lazy, 165In 0Ca 0Re nontrivialSat,20In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 110 NumberOfCheckSat: 0	Conjuncts in SSA: 840 Conjuncts in UnsatCore: 51	Size of predicates FP: 417 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.07-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 557), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 93 locations, 39 error locations. Automizer needed 39.7s and 12 iterations. Automata difference (including EdgeChecker) took 36.6s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 73 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 348In 78Ca 4Re trivial, 0In 0Ca 0Re lazy, 256In 0Ca 0Re nontrivialSat,23In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.5s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 2.8s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 138 NumberOfCheckSat: 0	Conjuncts in SSA: 1196 Conjuncts in UnsatCore: 69	Size of predicates FP: 740 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.09-no-inv_assume-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 561), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 108 locations, 47 error locations. Automizer needed 37.7s and 9 iterations. Automata difference (including EdgeChecker) took 36.5s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 88 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 348In 63Ca 4Re trivial, 0In 0Ca 0Re lazy, 235In 0Ca 0Re nontrivialSat,32In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 1.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 94 NumberOfCheckSat: 0	Conjuncts in SSA: 748 Conjuncts in UnsatCore: 49	Size of predicates FP: 325 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.09_assume-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 560), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 560), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 560), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 564), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 560), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 128 locations, 57 error locations. Automizer needed 37.6s and 10 iterations. Automata difference (including EdgeChecker) took 36.5s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 104 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 511In 69Ca 4Re trivial, 0In 0Ca 0Re lazy, 286In 0Ca 0Re nontrivialSat,40In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 110 NumberOfCheckSat: 0	Conjuncts in SSA: 852 Conjuncts in UnsatCore: 52	Size of predicates FP: 360 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.10-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 561), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 83 locations, 35 error locations. Automizer needed 37.7s and 10 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 68 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 270In 66Ca 3Re trivial, 0In 0Ca 0Re lazy, 182In 0Ca 0Re nontrivialSat,24In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.1s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 110 NumberOfCheckSat: 0	Conjuncts in SSA: 836 Conjuncts in UnsatCore: 51	Size of predicates FP: 417 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.11-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 560), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 560), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 562), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 96 locations, 43 error locations. Automizer needed 37.7s and 10 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 80 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 271In 66Ca 4Re trivial, 0In 0Ca 0Re lazy, 216In 0Ca 0Re nontrivialSat,31In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 110 NumberOfCheckSat: 0	Conjuncts in SSA: 836 Conjuncts in UnsatCore: 52	Size of predicates FP: 441 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.12-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 561), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 86 locations, 35 error locations. Automizer needed 37.5s and 10 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 69 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 307In 63Ca 3Re trivial, 0In 0Ca 0Re lazy, 186In 0Ca 0Re nontrivialSat,22In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 112 NumberOfCheckSat: 0	Conjuncts in SSA: 860 Conjuncts in UnsatCore: 50	Size of predicates FP: 504 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.13-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 561), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 561), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 563), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 107 locations, 47 error locations. Automizer needed 39.1s and 12 iterations. Automata difference (including EdgeChecker) took 36.6s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 87 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 442In 78Ca 4Re trivial, 0In 0Ca 0Re lazy, 312In 0Ca 0Re nontrivialSat,31In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.5s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 2.2s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 143 NumberOfCheckSat: 0	Conjuncts in SSA: 1228 Conjuncts in UnsatCore: 68	Size of predicates FP: 767 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.14-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 86 locations, 35 error locations. Automizer needed 37.3s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 69 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 232In 57Ca 3Re trivial, 0In 0Ca 0Re lazy, 180In 0Ca 0Re nontrivialSat,22In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.8s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 97 NumberOfCheckSat: 0	Conjuncts in SSA: 751 Conjuncts in UnsatCore: 48	Size of predicates FP: 490 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.15-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 101 locations, 43 error locations. Automizer needed 39.5s and 11 iterations. Automata difference (including EdgeChecker) took 36.6s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 81 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 340In 72Ca 4Re trivial, 0In 0Ca 0Re lazy, 277In 0Ca 0Re nontrivialSat,27In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.5s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 2.6s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 120 NumberOfCheckSat: 0	Conjuncts in SSA: 1074 Conjuncts in UnsatCore: 66	Size of predicates FP: 699 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.16-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 84 locations, 35 error locations. Automizer needed 37.6s and 10 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 68 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 267In 66Ca 3Re trivial, 0In 0Ca 0Re lazy, 188In 0Ca 0Re nontrivialSat,23In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 106 NumberOfCheckSat: 0	Conjuncts in SSA: 820 Conjuncts in UnsatCore: 51	Size of predicates FP: 396 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.17-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 560), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 99 locations, 43 error locations. Automizer needed 39.6s and 11 iterations. Automata difference (including EdgeChecker) took 36.8s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 80 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 342In 72Ca 3Re trivial, 0In 0Ca 0Re lazy, 287In 0Ca 0Re nontrivialSat,27In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.7s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 2.6s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 117 NumberOfCheckSat: 0	Conjuncts in SSA: 1059 Conjuncts in UnsatCore: 65	Size of predicates FP: 650 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/b.18-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 82 locations, 33 error locations. Automizer needed 36.7s and 7 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 69 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 180In 45Ca 3Re trivial, 0In 0Ca 0Re lazy, 125In 0Ca 0Re nontrivialSat,24In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 76 NumberOfCheckSat: 0	Conjuncts in SSA: 518 Conjuncts in UnsatCore: 32	Size of predicates FP: 267 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/bubble_sort_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 43 locations, 13 error locations. Automizer needed 0.0s and 2 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 40 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 35In 3Ca 3Re trivial, 0In 0Ca 0Re lazy, 0In 0Ca 0Re nontrivialSat,0In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 24 NumberOfCheckSat: 0	Conjuncts in SSA: 46 Conjuncts in UnsatCore: 1	Size of predicates FP: 11 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/bubblesort-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/bubblesort_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 43 locations, 13 error locations. Automizer needed 0.0s and 1 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 40 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: No data available	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 12 NumberOfCheckSat: 0	Conjuncts in SSA: 0 Conjuncts in UnsatCore: 0	Size of predicates FP: 0 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/c.01-no-inv-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 558), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 83 locations, 35 error locations. Automizer needed 37.6s and 10 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 68 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 260In 66Ca 3Re trivial, 0In 0Ca 0Re lazy, 183In 0Ca 0Re nontrivialSat,24In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 1.1s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 106 NumberOfCheckSat: 0	Conjuncts in SSA: 820 Conjuncts in UnsatCore: 51	Size of predicates FP: 396 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/c.01_assume-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 558), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 83 locations, 35 error locations. Automizer needed 36.8s and 7 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 70 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 192In 45Ca 3Re trivial, 0In 0Ca 0Re lazy, 135In 0Ca 0Re nontrivialSat,24In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 70 NumberOfCheckSat: 0	Conjuncts in SSA: 491 Conjuncts in UnsatCore: 32	Size of predicates FP: 231 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/c.02-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 90 locations, 39 error locations. Automizer needed 37.4s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 74 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 219In 57Ca 3Re trivial, 0In 0Ca 0Re lazy, 195In 0Ca 0Re nontrivialSat,26In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 91 NumberOfCheckSat: 0	Conjuncts in SSA: 724 Conjuncts in UnsatCore: 48	Size of predicates FP: 436 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/c.03-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 560), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 91 locations, 39 error locations. Automizer needed 39.2s and 11 iterations. Automata difference (including EdgeChecker) took 36.5s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 73 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 318In 75Ca 4Re trivial, 0In 0Ca 0Re lazy, 256In 0Ca 0Re nontrivialSat,24In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 2.4s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 117 NumberOfCheckSat: 0	Conjuncts in SSA: 1059 Conjuncts in UnsatCore: 65	Size of predicates FP: 533 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/c.07-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 561), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 110 locations, 47 error locations. Automizer needed 30.5s and 14 iterations. Automata difference (including EdgeChecker) took 24.8s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 85 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 493In 93Ca 4Re trivial, 0In 0Ca 0Re lazy, 371In 0Ca 0Re nontrivialSat,28In 0Ca 0Re nontrivialUnsat,2In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 24.7s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.3s InterpolantComputationTime: 5.2s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 160 NumberOfCheckSat: 0	Conjuncts in SSA: 1582 Conjuncts in UnsatCore: 86	Size of predicates FP: 901 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/c.08-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 83 locations, 35 error locations. Automizer needed 37.7s and 10 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 68 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 261In 69Ca 4Re trivial, 0In 0Ca 0Re lazy, 183In 0Ca 0Re nontrivialSat,24In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 106 NumberOfCheckSat: 0	Conjuncts in SSA: 820 Conjuncts in UnsatCore: 52	Size of predicates FP: 345 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/count_down-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 48 locations, 13 error locations. Automizer needed 63.3s and 11 iterations. Automata difference (including EdgeChecker) took 12.4s. Computation of Hoare annotation took 0.0s. Minimization removed 17 states and took 0.0s. Biggest automaton had 48 states and ocurred in iteration 10.	InterpolantCoveringCapability: 8/14	ICC %: 0.5714285714285714	EdgeCheckerBenchmarkData: EdgeChecker queries: 434In 65Ca 0Re trivial, 0In 0Ca 0Re lazy, 257In 1Ca 0Re nontrivialSat,30In 1Ca 0Re nontrivialUnsat,0In 1Ca 0Re nontrivialUnknown. EdgeChecker time: 12.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 50.6s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 145 NumberOfCheckSat: 0	Conjuncts in SSA: 670 Conjuncts in UnsatCore: 50	Size of predicates FP: 562 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/count_down_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 48 locations, 13 error locations. Automizer needed 0.1s and 4 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 38 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 75In 12Ca 2Re trivial, 0In 0Ca 0Re lazy, 31In 0Ca 0Re nontrivialSat,2In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 31 NumberOfCheckSat: 0	Conjuncts in SSA: 145 Conjuncts in UnsatCore: 10	Size of predicates FP: 33 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrcat-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrcat_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 30 locations, 7 error locations. Automizer needed 0.0s and 1 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 28 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: No data available	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 9 NumberOfCheckSat: 0	Conjuncts in SSA: 0 Conjuncts in UnsatCore: 0	Size of predicates FP: 0 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrchr-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: CHAR pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrchr_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrcmp-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: CHAR pointer  to UCHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrcpy-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrcpy_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 25 locations, 5 error locations. Automizer needed 0.0s and 1 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 23 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: No data available	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 9 NumberOfCheckSat: 0	Conjuncts in SSA: 0 Conjuncts in UnsatCore: 0	Size of predicates FP: 0 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrcspn-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrlen-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrlen_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrncat-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrncat_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 39 locations, 11 error locations. Automizer needed 0.0s and 1 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 36 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: No data available	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 9 NumberOfCheckSat: 0	Conjuncts in SSA: 0 Conjuncts in UnsatCore: 0	Size of predicates FP: 0 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrncmp-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: CHAR pointer  to UCHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrncpy-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrncpy_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 53 locations, 17 error locations. Automizer needed 0.1s and 4 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 44 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 72In 18Ca 4Re trivial, 0In 0Ca 0Re lazy, 38In 0Ca 0Re nontrivialSat,7In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 41 NumberOfCheckSat: 0	Conjuncts in SSA: 222 Conjuncts in UnsatCore: 8	Size of predicates FP: 47 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrpbrk-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: CHAR pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrpbrk_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/cstrspn-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/diff-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/diff_usafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 36 locations, 9 error locations. Automizer needed 0.0s and 2 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 33 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 28In 3Ca 3Re trivial, 0In 0Ca 0Re lazy, 0In 0Ca 0Re nontrivialSat,0In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 24 NumberOfCheckSat: 0	Conjuncts in SSA: 78 Conjuncts in UnsatCore: 1	Size of predicates FP: 11 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/easySum-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 72 locations, 29 error locations. Automizer needed 37.3s and 10 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 57 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 231In 69Ca 4Re trivial, 0In 0Ca 0Re lazy, 160In 0Ca 0Re nontrivialSat,18In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 0.8s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 110 NumberOfCheckSat: 0	Conjuncts in SSA: 796 Conjuncts in UnsatCore: 56	Size of predicates FP: 364 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/ex1-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 270 column 860: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/ex2-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 594 column 889: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/ex3a-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 412 column 879: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/ex3b-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 425 column 876: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/fermat-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 941 column 823: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/flag-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 554), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 556), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 81 locations, 33 error locations. Automizer needed 38.9s and 12 iterations. Automata difference (including EdgeChecker) took 36.5s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 63 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 328In 81Ca 4Re trivial, 0In 0Ca 0Re lazy, 223In 0Ca 0Re nontrivialSat,18In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 2.2s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 130 NumberOfCheckSat: 0	Conjuncts in SSA: 1116 Conjuncts in UnsatCore: 68	Size of predicates FP: 556 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/gcd1-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 557), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 110 locations, 49 error locations. Automizer needed 37.8s and 10 iterations. Automata difference (including EdgeChecker) took 36.6s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 92 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 359In 69Ca 4Re trivial, 0In 0Ca 0Re lazy, 254In 0Ca 0Re nontrivialSat,38In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.5s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 144 NumberOfCheckSat: 0	Conjuncts in SSA: 928 Conjuncts in UnsatCore: 52	Size of predicates FP: 600 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/genady-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 52 locations, 21 error locations. Automizer needed 36.7s and 8 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 42 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 117In 36Ca 3Re trivial, 0In 0Ca 0Re lazy, 86In 0Ca 0Re nontrivialSat,14In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 76 NumberOfCheckSat: 0	Conjuncts in SSA: 454 Conjuncts in UnsatCore: 40	Size of predicates FP: 219 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/insertion_sort_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 40 locations, 11 error locations. Automizer needed 0.0s and 1 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 35 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: No data available	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 10 NumberOfCheckSat: 0	Conjuncts in SSA: 0 Conjuncts in UnsatCore: 0	Size of predicates FP: 0 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/insertionsort-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/insertionsort_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 41 locations, 11 error locations. Automizer needed 0.0s and 1 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 35 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: No data available	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 10 NumberOfCheckSat: 0	Conjuncts in SSA: 0 Conjuncts in UnsatCore: 0	Size of predicates FP: 0 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/java_AG313-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 555), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 553), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 90 locations, 37 error locations. Automizer needed 37.3s and 9 iterations. Automata difference (including EdgeChecker) took 36.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 72 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 324In 63Ca 4Re trivial, 0In 0Ca 0Re lazy, 190In 0Ca 0Re nontrivialSat,22In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.7s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 85 NumberOfCheckSat: 0	Conjuncts in SSA: 712 Conjuncts in UnsatCore: 49	Size of predicates FP: 289 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/java_Break-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 54 locations, 21 error locations. Automizer needed 36.6s and 8 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 43 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 124In 36Ca 3Re trivial, 0In 0Ca 0Re lazy, 86In 0Ca 0Re nontrivialSat,13In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 80 NumberOfCheckSat: 0	Conjuncts in SSA: 466 Conjuncts in UnsatCore: 36	Size of predicates FP: 233 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/java_BubbleSort-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/java_BubbleSort_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 43 locations, 13 error locations. Automizer needed 0.0s and 2 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 40 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 35In 3Ca 3Re trivial, 0In 0Ca 0Re lazy, 0In 0Ca 0Re nontrivialSat,0In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 24 NumberOfCheckSat: 0	Conjuncts in SSA: 46 Conjuncts in UnsatCore: 1	Size of predicates FP: 11 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/java_Continue1-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 57 locations, 23 error locations. Automizer needed 36.6s and 7 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 46 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 112In 32Ca 3Re trivial, 0In 0Ca 0Re lazy, 89In 0Ca 0Re nontrivialSat,15In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 63 NumberOfCheckSat: 0	Conjuncts in SSA: 393 Conjuncts in UnsatCore: 33	Size of predicates FP: 189 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/java_LogBuiltIn-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 57 locations, 21 error locations. Automizer needed 36.8s and 7 iterations. Automata difference (including EdgeChecker) took 36.2s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 45 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 109In 45Ca 3Re trivial, 0In 0Ca 0Re lazy, 82In 0Ca 0Re nontrivialSat,12In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.4s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 70 NumberOfCheckSat: 0	Conjuncts in SSA: 463 Conjuncts in UnsatCore: 32	Size of predicates FP: 231 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/java_Nested-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 80 locations, 35 error locations. Automizer needed 37.8s and 12 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 3 states and took 0.0s. Biggest automaton had 65 states and ocurred in iteration 0.	InterpolantCoveringCapability: 9/9	ICC %: 1.0	EdgeCheckerBenchmarkData: EdgeChecker queries: 386In 56Ca 3Re trivial, 0In 0Ca 0Re lazy, 237In 0Ca 0Re nontrivialSat,26In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.1s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 151 NumberOfCheckSat: 0	Conjuncts in SSA: 913 Conjuncts in UnsatCore: 61	Size of predicates FP: 739 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/java_Sequence-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 539), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 80 locations, 35 error locations. Automizer needed 38.7s and 12 iterations. Automata difference (including EdgeChecker) took 36.7s. Computation of Hoare annotation took 0.0s. Minimization removed 8 states and took 0.0s. Biggest automaton had 65 states and ocurred in iteration 0.	InterpolantCoveringCapability: 71/74	ICC %: 0.9594594594594594	EdgeCheckerBenchmarkData: EdgeChecker queries: 525In 68Ca 4Re trivial, 0In 0Ca 0Re lazy, 355In 0Ca 0Re nontrivialSat,46In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.5s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 1.6s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 227 NumberOfCheckSat: 0	Conjuncts in SSA: 1138 Conjuncts in UnsatCore: 73	Size of predicates FP: 1139 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/knapsack_alloca_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/knapsack_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 55 locations, 21 error locations. Automizer needed 0.0s and 2 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 53 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 49In 3Ca 3Re trivial, 0In 0Ca 0Re lazy, 0In 0Ca 0Re nontrivialSat,0In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 24 NumberOfCheckSat: 0	Conjuncts in SSA: 76 Conjuncts in UnsatCore: 1	Size of predicates FP: 11 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/lis-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/lis_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/min_rf-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 540), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 541), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 123 locations, 59 error locations. Automizer needed 37.6s and 8 iterations. Automata difference (including EdgeChecker) took 36.5s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 102 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 310In 36Ca 3Re trivial, 0In 0Ca 0Re lazy, 241In 0Ca 0Re nontrivialSat,33In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 76 NumberOfCheckSat: 0	Conjuncts in SSA: 538 Conjuncts in UnsatCore: 41	Size of predicates FP: 282 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/mult_array-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 234 column 787: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/mult_array_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 262 column 781: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cbzero-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cmemchr-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: UCHAR pointer  to VOID pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cmemrchr-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to UCHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cmemset-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstpcpy-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstpncpy-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrcat-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrcmp-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: CHAR pointer  to UCHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrcpy-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrcspn-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrlcpy-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrlen-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrncat-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrncmp-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: CHAR pointer  to UCHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrncpy-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrnlen-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrpbrk-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: CHAR pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrspn-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/openbsd_cstrstr-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: CHAR pointer  to UCHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/rec_strlen-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/reverse_array_alloca_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 65 locations, 23 error locations. Automizer needed 0.2s and 5 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 8 states and took 0.0s. Biggest automaton had 51 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 192In 16Ca 3Re trivial, 0In 0Ca 0Re lazy, 82In 0Ca 0Re nontrivialSat,8In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 44 NumberOfCheckSat: 0	Conjuncts in SSA: 223 Conjuncts in UnsatCore: 17	Size of predicates FP: 78 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/reverse_array_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 65 locations, 23 error locations. Automizer needed 0.1s and 4 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 8 states and took 0.0s. Biggest automaton had 51 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 151In 10Ca 2Re trivial, 0In 0Ca 0Re lazy, 45In 0Ca 0Re nontrivialSat,3In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 31 NumberOfCheckSat: 0	Conjuncts in SSA: 167 Conjuncts in UnsatCore: 10	Size of predicates FP: 38 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/selection_sort_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 43 locations, 13 error locations. Automizer needed 0.0s and 3 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 37 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 71In 9Ca 2Re trivial, 0In 0Ca 0Re lazy, 7In 0Ca 0Re nontrivialSat,1In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 35 NumberOfCheckSat: 0	Conjuncts in SSA: 97 Conjuncts in UnsatCore: 4	Size of predicates FP: 25 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/selectionsort-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/selectionsort_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 43 locations, 13 error locations. Automizer needed 0.0s and 3 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 37 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 71In 9Ca 2Re trivial, 0In 0Ca 0Re lazy, 7In 0Ca 0Re nontrivialSat,1In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 35 NumberOfCheckSat: 0	Conjuncts in SSA: 97 Conjuncts in UnsatCore: 4	Size of predicates FP: 29 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/stroeder1-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/stroeder1_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 24 locations, 3 error locations. Automizer needed 0.0s and 1 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 20 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: No data available	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 10 NumberOfCheckSat: 0	Conjuncts in SSA: 0 Conjuncts in UnsatCore: 0	Size of predicates FP: 0 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/stroeder2-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to INT pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/stroeder2_unsafe_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 33 locations, 7 error locations. Automizer needed 0.0s and 1 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 29 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: No data available	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 11 NumberOfCheckSat: 0	Conjuncts in SSA: 0 Conjuncts in UnsatCore: 0	Size of predicates FP: 0 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/strreplace-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/subseq-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/substring-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: unsupported cast: VOID pointer  to CHAR pointer]

/home/matthias/ultimate/trunk/examples/svcomp/memory-alloca/twisted-alloca_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 547), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 558), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 548), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 544), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 564), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 552), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 566), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 542), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 550), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 559), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 557), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 545), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 549), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 543), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 546), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 551)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 95 locations, 39 error locations. Automizer needed 38.9s and 13 iterations. Automata difference (including EdgeChecker) took 36.5s. Computation of Hoare annotation took 0.0s. Minimization removed 4 states and took 0.0s. Biggest automaton had 76 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 534In 90Ca 4Re trivial, 0In 0Ca 0Re lazy, 308In 0Ca 0Re nontrivialSat,26In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.4s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.2s InterpolantComputationTime: 2.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 175 NumberOfCheckSat: 0	Conjuncts in SSA: 1306 Conjuncts in UnsatCore: 71	Size of predicates FP: 713 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety-ext/dll_extends_pointer_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Timout or Toolchain cancelled by user]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety-ext/skiplist_2lvl_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Timout or Toolchain cancelled by user]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety-ext/skiplist_3lvl_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Timout or Toolchain cancelled by user]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety-ext/tree_cnstr_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction: AssertionError: invalid Hoare triple in FP: de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singleTraceCheck.TraceCheckerSpWp.computeInterpolantsUsingUnsatCore(TraceCheckerSpWp.java:365)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety-ext/tree_dsw_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 674), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 670), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 685), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 688), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 678), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 670), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 685), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 673), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 670), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 666), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 678), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 657), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 673), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 677), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 674), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 670), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 685), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 685), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 678), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 678), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 619), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 674), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 685), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 685), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 688), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 666), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 673), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 678), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 632), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 657), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 670), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 674), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 674), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 657), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 685), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 688), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 673), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 674), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 657), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 657), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 688), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 671), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 657), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 673), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 632), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 671), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 677), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 673), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 632), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 670), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 632), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 685), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 651), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 678), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 437 locations, 237 error locations. Automizer needed 40.1s and 1 iterations. Automata difference (including EdgeChecker) took 12.1s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 381 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 43In 4Ca 2Re trivial, 0In 0Ca 0Re lazy, 62In 0Ca 0Re nontrivialSat,5In 0Ca 0Re nontrivialUnsat,1In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 12.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 27.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 6 NumberOfCheckSat: 0	Conjuncts in SSA: 77 Conjuncts in UnsatCore: 10	Size of predicates FP: 52 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety-ext/tree_of_cslls_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction: AssertionError: invalid Hoare triple in FP: de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singleTraceCheck.TraceCheckerSpWp.computeInterpolantsUsingUnsatCore(TraceCheckerSpWp.java:365)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety-ext/tree_parent_ptr_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction: AssertionError: invalid Hoare triple in FP: de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singleTraceCheck.TraceCheckerSpWp.computeInterpolantsUsingUnsatCore(TraceCheckerSpWp.java:365)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety-ext/tree_stack_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction: AssertionError: invalid Hoare triple in FP: de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singleTraceCheck.TraceCheckerSpWp.computeInterpolantsUsingUnsatCore(TraceCheckerSpWp.java:365)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/20020406-1_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: UNSAFE_DEREF   pointer dereference may fail 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 204 locations, 59 error locations. Automizer needed 1.6s and 10 iterations. Automata difference (including EdgeChecker) took 0.9s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 177 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 2266In 901Ca 150Re trivial, 0In 0Ca 0Re lazy, 770In 24Ca 29Re nontrivialSat,9In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.8s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 0.4s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 114 NumberOfCheckSat: 0	Conjuncts in SSA: 661 Conjuncts in UnsatCore: 48	Size of predicates FP: 247 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/20051113-1.c_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Timout or Toolchain cancelled by user]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/960521-1_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 629), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 53 locations, 17 error locations. Automizer needed 29.9s and 29 iterations. Automata difference (including EdgeChecker) took 20.0s. Computation of Hoare annotation took 0.0s. Minimization removed 377 states and took 0.0s. Biggest automaton had 114 states and ocurred in iteration 27.	InterpolantCoveringCapability: 0/2157	ICC %: 0.0	EdgeCheckerBenchmarkData: EdgeChecker queries: 6492In 513Ca 16Re trivial, 0In 0Ca 0Re lazy, 7424In 183Ca 0Re nontrivialSat,2162In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 11.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.2s SatisfiabilityAnalysisTime: 0.7s InterpolantComputationTime: 8.8s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 816 NumberOfCheckSat: 0	Conjuncts in SSA: 4834 Conjuncts in UnsatCore: 349	Size of predicates FP: 9239 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/960521-1_false-valid-free.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_FREE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 629)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 53 locations, 17 error locations. Automizer needed 29.9s and 30 iterations. Automata difference (including EdgeChecker) took 17.8s. Computation of Hoare annotation took 0.0s. Minimization removed 408 states and took 0.0s. Biggest automaton had 120 states and ocurred in iteration 29.	InterpolantCoveringCapability: 0/2379	ICC %: 0.0	EdgeCheckerBenchmarkData: EdgeChecker queries: 7030In 544Ca 15Re trivial, 0In 0Ca 0Re lazy, 8161In 196Ca 0Re nontrivialSat,2398In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 11.8s	TraceCheckerBenchmark: SsaConstructionTime: 0.2s SatisfiabilityAnalysisTime: 0.7s InterpolantComputationTime: 10.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 866 NumberOfCheckSat: 0	Conjuncts in SSA: 5063 Conjuncts in UnsatCore: 362	Size of predicates FP: 9522 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/960521-1_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 53 locations, 17 error locations. Automizer needed 30.0s and 32 iterations. Automata difference (including EdgeChecker) took 18.2s. Computation of Hoare annotation took 0.0s. Minimization removed 462 states and took 0.0s. Biggest automaton had 120 states and ocurred in iteration 30.	InterpolantCoveringCapability: 0/2954	ICC %: 0.0	EdgeCheckerBenchmarkData: EdgeChecker queries: 8184In 612Ca 17Re trivial, 0In 0Ca 0Re lazy, 9261In 225Ca 0Re nontrivialSat,2668In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 12.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.2s SatisfiabilityAnalysisTime: 0.8s InterpolantComputationTime: 10.6s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 972 NumberOfCheckSat: 0	Conjuncts in SSA: 5544 Conjuncts in UnsatCore: 407	Size of predicates FP: 10826 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/lockfree-3.0_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 624), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 624), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 688), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 178 locations, 77 error locations. Automizer needed 29.9s and 18 iterations. Automata difference (including EdgeChecker) took 23.5s. Computation of Hoare annotation took 0.0s. Minimization removed 355 states and took 0.1s. Biggest automaton had 497 states and ocurred in iteration 15.	InterpolantCoveringCapability: 2/2	ICC %: 1.0	EdgeCheckerBenchmarkData: EdgeChecker queries: 4515In 188Ca 0Re trivial, 0In 0Ca 0Re lazy, 2548In 36Ca 26Re nontrivialSat,170In 48Ca 21Re nontrivialUnsat,44In 3Ca 2Re nontrivialUnknown. EdgeChecker time: 21.5s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.4s InterpolantComputationTime: 5.5s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 218 NumberOfCheckSat: 0	Conjuncts in SSA: 3268 Conjuncts in UnsatCore: 132	Size of predicates FP: 1173 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/lockfree-3.1_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 701), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 624), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 688), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 705), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 624), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 705), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 701), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 188 locations, 83 error locations. Automizer needed 29.9s and 19 iterations. Automata difference (including EdgeChecker) took 18.9s. Computation of Hoare annotation took 0.0s. Minimization removed 462 states and took 0.1s. Biggest automaton had 676 states and ocurred in iteration 18.	InterpolantCoveringCapability: 2/5	ICC %: 0.4	EdgeCheckerBenchmarkData: EdgeChecker queries: 4983In 202Ca 0Re trivial, 0In 0Ca 0Re lazy, 2717In 33Ca 10Re nontrivialSat,187In 50Ca 11Re nontrivialUnsat,27In 6Ca 3Re nontrivialUnknown. EdgeChecker time: 14.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.4s InterpolantComputationTime: 10.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 242 NumberOfCheckSat: 0	Conjuncts in SSA: 3520 Conjuncts in UnsatCore: 146	Size of predicates FP: 1439 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/lockfree-3.2_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 705), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 624), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 705), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 701), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 624), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 701), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 688), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 191 locations, 85 error locations. Automizer needed 30.1s and 18 iterations. Automata difference (including EdgeChecker) took 23.9s. Computation of Hoare annotation took 0.0s. Minimization removed 402 states and took 0.1s. Biggest automaton had 531 states and ocurred in iteration 14.	InterpolantCoveringCapability: 2/2	ICC %: 1.0	EdgeCheckerBenchmarkData: EdgeChecker queries: 4830In 186Ca 0Re trivial, 0In 0Ca 0Re lazy, 2900In 32Ca 15Re nontrivialSat,181In 41Ca 13Re nontrivialUnsat,45In 3Ca 1Re nontrivialUnknown. EdgeChecker time: 22.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.4s InterpolantComputationTime: 5.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 221 NumberOfCheckSat: 0	Conjuncts in SSA: 3292 Conjuncts in UnsatCore: 137	Size of predicates FP: 1188 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/lockfree-3.3_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 624), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 624), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 688), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 705), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 705), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 701), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 675), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 658), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 697), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 676), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 701), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 672)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 191 locations, 85 error locations. Automizer needed 30.0s and 18 iterations. Automata difference (including EdgeChecker) took 23.1s. Computation of Hoare annotation took 0.0s. Minimization removed 434 states and took 0.0s. Biggest automaton had 530 states and ocurred in iteration 14.	InterpolantCoveringCapability: 2/2	ICC %: 1.0	EdgeCheckerBenchmarkData: EdgeChecker queries: 4782In 186Ca 0Re trivial, 0In 0Ca 0Re lazy, 2819In 34Ca 16Re nontrivialSat,176In 43Ca 13Re nontrivialUnsat,22In 3Ca 0Re nontrivialUnknown. EdgeChecker time: 20.9s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.4s InterpolantComputationTime: 6.1s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 221 NumberOfCheckSat: 0	Conjuncts in SSA: 3292 Conjuncts in UnsatCore: 132	Size of predicates FP: 1182 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0019_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: UNSAFE_MEMTRACK   not all allocated memory was freed 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 60 locations, 23 error locations. Automizer needed 3.9s and 12 iterations. Automata difference (including EdgeChecker) took 1.5s. Computation of Hoare annotation took 0.0s. Minimization removed 1 states and took 0.0s. Biggest automaton had 51 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 604In 173Ca 18Re trivial, 0In 0Ca 0Re lazy, 800In 57Ca 9Re nontrivialSat,48In 3Ca 2Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.7s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 2.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 170 NumberOfCheckSat: 0	Conjuncts in SSA: 943 Conjuncts in UnsatCore: 170	Size of predicates FP: 681 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0019_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 626), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 626), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 635)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 52 locations, 19 error locations. Automizer needed 31.4s and 12 iterations. Automata difference (including EdgeChecker) took 27.1s. Computation of Hoare annotation took 0.0s. Minimization removed 6 states and took 0.0s. Biggest automaton had 46 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 559In 208Ca 14Re trivial, 0In 0Ca 0Re lazy, 800In 75Ca 0Re nontrivialSat,40In 7Ca 0Re nontrivialUnsat,2In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 24.8s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 4.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 183 NumberOfCheckSat: 0	Conjuncts in SSA: 1146 Conjuncts in UnsatCore: 240	Size of predicates FP: 949 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0102_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction: AssertionError: invalid Hoare triple in FP: de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singleTraceCheck.TraceCheckerSpWp.computeInterpolantsUsingUnsatCore(TraceCheckerSpWp.java:365)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0102_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction: AssertionError: invalid Hoare triple in FP: de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singleTraceCheck.TraceCheckerSpWp.computeInterpolantsUsingUnsatCore(TraceCheckerSpWp.java:365)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0134_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 695), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 707), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 632), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 695), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 707), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 666), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 632), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 666), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 707), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 649), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 707), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 707), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 707), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 714), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 649)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 205 locations, 73 error locations. Automizer needed 29.9s and 14 iterations. Automata difference (including EdgeChecker) took 19.3s. Computation of Hoare annotation took 0.0s. Minimization removed 530 states and took 0.0s. Biggest automaton had 257 states and ocurred in iteration 7.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 7251In 1149Ca 0Re trivial, 0In 0Ca 0Re lazy, 6965In 574Ca 8Re nontrivialSat,105In 89Ca 0Re nontrivialUnsat,6In 7Ca 2Re nontrivialUnknown. EdgeChecker time: 12.2s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.2s InterpolantComputationTime: 10.1s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 234 NumberOfCheckSat: 0	Conjuncts in SSA: 1994 Conjuncts in UnsatCore: 249	Size of predicates FP: 1703 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0137_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 632), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 716), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 717), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 632), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 717), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 711), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 711), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 716), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 711), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 666), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 717), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 717), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 702), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 716), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 715), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 717), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 715), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 666), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 695), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 717), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 717), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 702), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 715), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 711), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 715), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 711), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 711), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 625), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 717), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 686), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 690), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 719), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 695), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 716), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 218 locations, 83 error locations. Automizer needed 29.9s and 14 iterations. Automata difference (including EdgeChecker) took 18.8s. Computation of Hoare annotation took 0.0s. Minimization removed 408 states and took 0.0s. Biggest automaton had 227 states and ocurred in iteration 7.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 7138In 899Ca 0Re trivial, 0In 0Ca 0Re lazy, 6555In 401Ca 8Re nontrivialSat,97In 74Ca 0Re nontrivialUnsat,6In 5Ca 2Re nontrivialUnknown. EdgeChecker time: 11.8s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.3s InterpolantComputationTime: 10.5s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 234 NumberOfCheckSat: 0	Conjuncts in SSA: 1994 Conjuncts in UnsatCore: 251	Size of predicates FP: 1705 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0158_false-valid-free.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_FREE UltimateResult: UNSAFE_FREE   free of unallocated memory possible 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 56 locations, 27 error locations. Automizer needed 0.8s and 6 iterations. Automata difference (including EdgeChecker) took 0.3s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 49 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 106In 38Ca 5Re trivial, 0In 0Ca 0Re lazy, 166In 0Ca 0Re nontrivialSat,48In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.1s InterpolantComputationTime: 0.3s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 78 NumberOfCheckSat: 0	Conjuncts in SSA: 375 Conjuncts in UnsatCore: 27	Size of predicates FP: 217 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0158_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: SUCCESS
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: UNSAFE_MEMTRACK   not all allocated memory was freed 
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 42 locations, 19 error locations. Automizer needed 0.1s and 4 iterations. Automata difference (including EdgeChecker) took 0.0s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 37 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 17In 12Ca 2Re trivial, 0In 0Ca 0Re lazy, 42In 0Ca 0Re nontrivialSat,17In 0Ca 0Re nontrivialUnsat,0In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 0.0s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.0s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 41 NumberOfCheckSat: 0	Conjuncts in SSA: 159 Conjuncts in UnsatCore: 8	Size of predicates FP: 53 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0158_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 619), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 621), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 45 locations, 21 error locations. Automizer needed 36.9s and 6 iterations. Automata difference (including EdgeChecker) took 36.4s. Computation of Hoare annotation took 0.0s. Minimization removed 0 states and took 0.0s. Biggest automaton had 40 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 70In 46Ca 7Re trivial, 0In 0Ca 0Re lazy, 144In 0Ca 0Re nontrivialSat,27In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 36.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.4s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 70 NumberOfCheckSat: 0	Conjuncts in SSA: 422 Conjuncts in UnsatCore: 30	Size of predicates FP: 212 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0214_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: identifier is not declared (neither a variable nor a function name)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0217_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: identifier is not declared (neither a variable nor a function name)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0218_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: UNSUPPORTED_SYNTAX   [ShortDescription: Unsupported Syntax LongDescription: identifier is not declared (neither a variable nor a function name)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0219_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 503 column 895: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0220_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 519 column 895: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0232_false-valid-free.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_FREE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 649), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 633), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 649), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 649), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 650), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 649), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 145 locations, 69 error locations. Automizer needed 30.4s and 21 iterations. Automata difference (including EdgeChecker) took 22.1s. Computation of Hoare annotation took 0.0s. Minimization removed 78 states and took 0.0s. Biggest automaton had 123 states and ocurred in iteration 0.	InterpolantCoveringCapability: 6/14	ICC %: 0.42857142857142855	EdgeCheckerBenchmarkData: EdgeChecker queries: 4560In 334Ca 16Re trivial, 0In 0Ca 0Re lazy, 6073In 164Ca 0Re nontrivialSat,259In 22Ca 0Re nontrivialUnsat,1In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 17.8s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.3s InterpolantComputationTime: 7.8s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 396 NumberOfCheckSat: 0	Conjuncts in SSA: 2381 Conjuncts in UnsatCore: 409	Size of predicates FP: 2843 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0232_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 121 locations, 55 error locations. Automizer needed 31.1s and 16 iterations. Automata difference (including EdgeChecker) took 27.8s. Computation of Hoare annotation took 0.0s. Minimization removed 33 states and took 0.0s. Biggest automaton had 101 states and ocurred in iteration 0.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 2122In 213Ca 11Re trivial, 0In 0Ca 0Re lazy, 2561In 77Ca 9Re nontrivialSat,150In 10Ca 1Re nontrivialUnsat,2In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 26.5s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.2s InterpolantComputationTime: 2.8s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 267 NumberOfCheckSat: 0	Conjuncts in SSA: 1615 Conjuncts in UnsatCore: 198	Size of predicates FP: 1278 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0232_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 627), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 635), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 645), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 639), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 629), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 131 locations, 61 error locations. Automizer needed 41.1s and 20 iterations. Automata difference (including EdgeChecker) took 32.9s. Computation of Hoare annotation took 0.0s. Minimization removed 65 states and took 0.0s. Biggest automaton had 110 states and ocurred in iteration 0.	InterpolantCoveringCapability: 6/14	ICC %: 0.42857142857142855	EdgeCheckerBenchmarkData: EdgeChecker queries: 3675In 327Ca 16Re trivial, 0In 0Ca 0Re lazy, 5338In 163Ca 0Re nontrivialSat,250In 22Ca 0Re nontrivialUnsat,2In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 29.3s	TraceCheckerBenchmark: SsaConstructionTime: 0.1s SatisfiabilityAnalysisTime: 0.3s InterpolantComputationTime: 7.6s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 370 NumberOfCheckSat: 0	Conjuncts in SSA: 2229 Conjuncts in UnsatCore: 409	Size of predicates FP: 2803 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0234_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 847 column 895: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0234_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 839 column 895: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0235_false-valid-deref.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_DEREF UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 917 column 895: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0235_false-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: UNSAFE_MEMTRACK UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 925 column 895: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0235_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 905 column 895: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0236_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 957 column 895: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0237_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder: SMTLIBException: line 1001 column 895: logic does not support nonlinear arithmetic: de.uni_freiburg.informatik.ultimate.smtsolver.external.Parser$Action$.CUP$do_action(Parser.java:1338)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0504_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     ExpectedResult: SAFE UltimateResult: EXCEPTION_OR_ERROR   [de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction: AssertionError: invalid Hoare triple in FP: de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singleTraceCheck.TraceCheckerSpWp.computeInterpolantsUsingUnsatCore(TraceCheckerSpWp.java:365)]

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0513_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 657), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 671), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 638), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 657), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 659), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 628), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 670), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 670), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 653), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 657), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 677), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 677), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 634), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 652), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 660), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 670), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 640), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 657), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 682), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 631), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 673), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 661), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 673), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 662), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 633), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 670), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 637), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 655), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 630), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 636), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 654), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 671)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 257 locations, 133 error locations. Automizer needed 38.9s and 8 iterations. Automata difference (including EdgeChecker) took 38.2s. Computation of Hoare annotation took 0.0s. Minimization removed 265 states and took 0.0s. Biggest automaton had 277 states and ocurred in iteration 2.	InterpolantCoveringCapability: 0/0	ICC %: NaN	EdgeCheckerBenchmarkData: EdgeChecker queries: 1548In 38Ca 4Re trivial, 0In 0Ca 0Re lazy, 1129In 0Ca 0Re nontrivialSat,106In 0Ca 0Re nontrivialUnsat,3In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 37.9s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.0s InterpolantComputationTime: 0.5s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 71 NumberOfCheckSat: 0	Conjuncts in SSA: 463 Conjuncts in UnsatCore: 27	Size of predicates FP: 216 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-0521_true-valid-memsafety.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: UNKNOWN
	Message:     ExpectedResult: SAFE UltimateResult: TIMEOUT   [ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 778), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 719), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 775), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 770), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 705), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 720), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 773), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 663), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 712), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 685), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 773), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 758), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 696), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 740), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 746), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 708), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 715), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 770), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 644), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 715), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 695), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 726), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 721), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 724), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 756), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 719), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 708), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 756), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 762), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 702), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 744), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 724), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 773), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 757), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 702), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 733), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 643), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 720), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 741), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 722), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 648), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 713), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 757), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 663), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that all allocated memory was freed (line 632), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 665), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 771), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 720), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 741), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 777), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 761), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 685), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 726), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 702), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 712), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 705), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 733), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 762), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 696), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 696), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 668), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 770), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 746), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 760), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 702), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 705), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 693), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 740), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 719), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 744), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 770), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 684), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 756), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 745), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 777), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 778), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 696), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 771), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 745), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 714), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 741), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 742), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 720), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 714), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 721), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 775), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 669), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 719), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 756), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 708), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 713), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 773), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 702), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 721), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 715), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 758), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 715), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 693), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 757), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 757), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 693), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 713), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 719), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 681), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 705), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 721), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 773), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 760), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 742), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 663), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 699), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 724), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 646), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 719), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 716), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 703), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 722), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 693), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 692), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 761), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 695), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 656), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 740), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 663), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 774), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 693), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 683), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 647), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 708), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 740), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 694), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 641), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 680), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 713), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 698), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 679), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 724), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 716), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 667), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 642), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 770), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 704), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 693), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 770), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 664), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 702), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 773), ShortDescription: Timeout LongDescription: Unable to prove that pointer dereference always succeeds (line 741), ShortDescription: Timeout LongDescription: Unable to prove that free always succeeds (line 774)]
	Benchmarks:
		TraceAbstraction: Ultimate Automizer benchmark data: CFG has 436 locations, 205 error locations. Automizer needed 34.3s and 16 iterations. Automata difference (including EdgeChecker) took 31.0s. Computation of Hoare annotation took 0.0s. Minimization removed 523 states and took 0.0s. Biggest automaton had 367 states and ocurred in iteration 13.	InterpolantCoveringCapability: 2/4	ICC %: 0.5	EdgeCheckerBenchmarkData: EdgeChecker queries: 13224In 121Ca 0Re trivial, 0In 0Ca 0Re lazy, 6249In 14Ca 12Re nontrivialSat,135In 0Ca 0Re nontrivialUnsat,2In 0Ca 0Re nontrivialUnknown. EdgeChecker time: 29.1s	TraceCheckerBenchmark: SsaConstructionTime: 0.0s SatisfiabilityAnalysisTime: 0.2s InterpolantComputationTime: 2.9s NumberOfCodeBlocks: 0 NumberOfCodeBlocksAsserted: 244 NumberOfCheckSat: 0	Conjuncts in SSA: 1364 Conjuncts in UnsatCore: 161	Size of predicates FP: 1155 Size of predicates BP: 0 	

/home/matthias/ultimate/trunk/examples/svcomp/memsafety/test-memleak_nexttime-valid-memtrack.i
	/home/matthias/ultimate/trunk/examples/settings/automizer/ForwardPredicates_SvcompMemsafety.epf
	Test result: FAIL
	Message:     Neither filename nor path nor first line contains a keyword that defines the expected result UltimateResult: [de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator: EmptyStackException: null: java.util.Stack.peek(Stack.java:102)]

