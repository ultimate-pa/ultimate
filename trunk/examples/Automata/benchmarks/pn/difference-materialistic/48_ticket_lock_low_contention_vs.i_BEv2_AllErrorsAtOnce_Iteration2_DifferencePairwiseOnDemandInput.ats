// Testfile dumped by Ultimate at 2020/02/07 00:31:36
//
// inputs of difference operation in iteration 2

PetriNet diff = differencePairwiseOnDemand(net, nwa);
PetriNet net = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a75 a76 a77 a78 a79 a80 a81 a82 a83 a84 a85 a86 a87 a88 a89 a90 a91 a92 a93 a94 a95 a96 a97 a98 a99 a100 a101 a102 a103 a104 a105 a106 a107 a108 a109 a110 a111 a112 a113 a114 a115 a116 a117 a118 a119 a120 a121 a122 a123 a124 a125 a126 a127 a128 a129 a130 a131 a132 a133 a134 a135 a136 a137 a138 a139 a140 a141 a142 a143 a144 a145 a146 a147 a148 a149 a150 a151 a152 a153 a154 a155 a156 a157 a158 a159 a160 a161 a162 a163 },
	places = {p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17 p18 p19 p20 p21 p22 p23 p24 p25 p26 p27 p28 p29 p30 p31 p32 p33 p34 p35 p36 p37 p38 p39 p40 p41 p42 p43 p44 p45 p46 p47 p48 p49 p50 p51 p52 p53 p54 p55 p56 p57 p58 p59 p60 p61 p62 p63 p64 p65 p66 p67 p68 p69 p70 p71 p72 p73 p74 p75 p76 p77 p78 p79 p80 p81 p82 p83 p84 p85 p86 p87 p88 p89 p90 p91 p92 p93 p94 p95 p96 p97 p98 p99 p100 p101 p102 p103 p104 p105 p106 p107 p108 p109 p110 p111 p112 p113 p114 p115 p116 p117 p118 p119 p120 p121 p122 p123 p124 p125 p126 p127 p128 p129 p130 p131 p132 p133 p134 p135 p136 p137 p138 p139 p140 p141 p142 p143 p144 p145 p146 p147 p148 p149 },
	transitions = {
		({p0 } a0 {p66 })
		({p1 } a124 {p125 })
		({p2 } a155 {p9 })
		({p3 } a138 {p74 })
		({p4 } a120 {p1 })
		({p4 } a121 {p134 })
		({p5 } a137 {p3 })
		({p6 } a1 {p7 })
		({p6 } a2 {p118 })
		({p7 } a5 {p127 })
		({p9 } a156 {p17 })
		({p10 } a6 {p116 })
		({p11 } a7 {p12 })
		({p12 } a8 {p13 })
		({p13 p141 p143 p145 p147 p149 } a158 {p141 p143 p97 p145 p147 p149 })
		({p13 p140 } a159 {p14 p141 p86 })
		({p13 p141 p142 } a160 {p14 p138 p141 p143 })
		({p13 p141 p143 p144 } a161 {p14 p33 p141 p143 p145 })
		({p13 p141 p143 p145 p146 } a162 {p75 p14 p141 p143 p145 p147 })
		({p13 p141 p143 p145 p147 p148 } a163 {p14 p123 p141 p143 p145 p147 p149 })
		({p14 } a9 {p15 })
		({p15 } a11 {p18 })
		({p16 } a13 {p101 })
		({p17 } a157 {})
		({p18 } a15 {p20 })
		({p18 } a16 {p11 })
		({p19 } a17 {p49 })
		({p20 } a18 {p16 })
		({p21 } a78 {p37 })
		({p21 } a79 {p34 })
		({p22 } a94 {p89 })
		({p23 } a93 {p22 })
		({p24 } a59 {p45 })
		({p25 } a150 {p120 })
		({p26 } a112 {p62 })
		({p27 } a58 {p40 })
		({p28 } a111 {p26 })
		({p29 } a54 {p27 })
		({p29 } a55 {p24 })
		({p30 } a131 {p129 })
		({p31 } a130 {p30 })
		({p32 } a109 {p85 })
		({p33 } a92 {p23 })
		({p34 } a84 {p68 })
		({p35 } a129 {p31 })
		({p36 } a108 {p32 })
		({p37 } a82 {p8 })
		({p38 } a107 {p36 })
		({p39 } a27 {p43 })
		({p40 } a53 {p76 })
		({p41 } a148 {p64 })
		({p42 } a144 {p41 })
		({p42 } a145 {p25 })
		({p43 } a28 {p46 })
		({p44 } a66 {p113 })
		({p45 } a52 {p29 })
		({p46 } a29 {p126 })
		({p47 } a134 {p63 })
		({p48 } a30 {p60 })
		({p49 } a31 {p53 })
		({p51 } a32 {p0 })
		({p52 } a33 {p78 })
		({p53 } a34 {p124 })
		({p54 } a133 {p47 })
		({p55 } a116 {p132 })
		({p56 } a36 {p58 })
		({p57 } a115 {p55 })
		({p58 } a38 {p133 })
		({p60 } a40 {p61 })
		({p61 } a42 {p52 })
		({p62 } a113 {})
		({p63 } a135 {})
		({p65 } a3 {p15 })
		({p66 } a4 {p112 })
		({p67 } a86 {p96 })
		({p68 } a85 {p67 })
		({p69 } a71 {p70 })
		({p70 } a72 {p108 })
		({p71 } a60 {p107 })
		({p72 } a154 {p2 })
		({p73 } a141 {p42 })
		({p74 } a140 {p80 })
		({p75 } a114 {p57 })
		({p76 } a56 {p71 })
		({p76 } a57 {p90 })
		({p77 } a90 {p106 })
		({p78 } a12 {})
		({p79 } a89 {p77 })
		({p80 } a142 {p93 })
		({p80 } a143 {p88 })
		({p81 } a14 {p39 })
		({p82 } a102 {p87 })
		({p83 } a98 {p82 })
		({p83 } a99 {p92 })
		({p84 } a128 {p35 })
		({p85 } a110 {p28 })
		({p86 } a70 {p69 })
		({p87 } a97 {p121 })
		({p88 } a147 {p74 })
		({p89 } a96 {p83 })
		({p90 } a62 {p131 })
		({p91 } a126 {p50 })
		({p92 } a103 {p89 })
		({p93 } a146 {p73 })
		({p94 } a122 {p91 })
		({p94 } a123 {p84 })
		({p95 } a19 {p10 })
		({p96 } a87 {p117 })
		({p98 } a20 {p99 })
		({p98 } a21 {p81 })
		({p99 } a22 {p59 })
		({p101 } a24 {p102 })
		({p102 } a25 {p19 })
		({p103 } a26 {p48 })
		({p104 } a69 {})
		({p105 } a49 {p114 })
		({p106 } a91 {})
		({p108 } a74 {p139 })
		({p109 } a81 {p108 })
		({p110 } a68 {p104 })
		({p111 } a35 {p65 })
		({p112 } a37 {p111 })
		({p113 } a67 {p110 })
		({p114 } a50 {p45 })
		({p115 } a75 {p21 })
		({p116 } a39 {p51 })
		({p117 } a88 {p79 })
		({p118 } a41 {p124 })
		({p119 } a104 {p100 })
		({p120 } a151 {p137 })
		({p121 } a100 {p119 })
		({p121 } a101 {p135 })
		({p122 } a65 {p44 })
		({p123 } a136 {p5 })
		({p124 } a44 {p6 })
		({p125 } a119 {p94 })
		({p126 } a45 {p56 })
		({p127 } a46 {p98 })
		({p128 } a64 {p122 })
		({p129 } a132 {p54 })
		({p130 } a80 {p115 })
		({p131 } a63 {p128 })
		({p132 } a118 {p4 })
		({p133 } a47 {p103 })
		({p134 } a125 {p132 })
		({p135 } a106 {p38 })
		({p136 } a153 {p72 })
		({p137 } a152 {p136 })
		({p138 } a48 {p105 })
		({p139 } a76 {p130 })
		({p139 } a77 {p109 })
	},
	initialMarking = {p140 p95 p142 p144 p146 p148 },
	acceptingPlaces = {p59 p107 p64 p50 p97 p100 p8 }
);
FiniteAutomaton nwa = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a75 a76 a77 a78 a79 a80 a81 a82 a83 a84 a85 a86 a87 a88 a89 a90 a91 a92 a93 a94 a95 a96 a97 a98 a99 a100 a101 a102 a103 a104 a105 a106 a107 a108 a109 a110 a111 a112 a113 a114 a115 a116 a117 a118 a119 a120 a121 a122 a123 a124 a125 a126 a127 a128 a129 a130 a131 a132 a133 a134 a135 a136 a137 a138 a139 a140 a141 a142 a143 a144 a145 a146 a147 a148 a149 a150 a151 a152 a153 a154 a155 a156 a157 a158 a159 a160 a161 a162 a163 },
	states = {s0 s1 s2 },
	initialStates = {s0 },
	finalStates = {s1 },
	transitions = {
		(s0 a86 s0)
		(s0 a87 s0)
		(s0 a88 s0)
		(s0 a89 s0)
		(s0 a90 s0)
		(s0 a91 s0)
		(s0 a92 s0)
		(s0 a93 s0)
		(s0 a94 s0)
		(s0 a96 s0)
		(s0 a97 s2)
		(s0 a98 s0)
		(s0 a99 s0)
		(s0 a100 s0)
		(s0 a101 s0)
		(s0 a102 s0)
		(s0 a103 s0)
		(s0 a104 s0)
		(s0 a106 s0)
		(s0 a107 s0)
		(s0 a108 s0)
		(s0 a109 s0)
		(s0 a110 s0)
		(s0 a111 s0)
		(s0 a112 s0)
		(s0 a113 s0)
		(s0 a114 s0)
		(s0 a115 s0)
		(s0 a116 s0)
		(s0 a118 s0)
		(s0 a119 s2)
		(s0 a120 s0)
		(s0 a121 s0)
		(s0 a122 s0)
		(s0 a123 s0)
		(s0 a124 s0)
		(s0 a125 s0)
		(s0 a126 s0)
		(s0 a128 s0)
		(s0 a129 s0)
		(s0 a130 s0)
		(s0 a131 s0)
		(s0 a132 s0)
		(s0 a133 s0)
		(s0 a134 s0)
		(s0 a135 s0)
		(s0 a136 s0)
		(s0 a137 s0)
		(s0 a138 s0)
		(s0 a140 s0)
		(s0 a141 s2)
		(s0 a142 s0)
		(s0 a143 s0)
		(s0 a144 s0)
		(s0 a145 s0)
		(s0 a146 s0)
		(s0 a147 s0)
		(s0 a148 s0)
		(s0 a150 s0)
		(s0 a151 s0)
		(s0 a152 s0)
		(s0 a153 s0)
		(s0 a154 s0)
		(s0 a155 s0)
		(s0 a156 s0)
		(s0 a157 s0)
		(s0 a158 s0)
		(s0 a159 s0)
		(s0 a160 s0)
		(s0 a161 s0)
		(s0 a162 s0)
		(s0 a163 s0)
		(s0 a0 s0)
		(s0 a1 s0)
		(s0 a2 s0)
		(s0 a3 s0)
		(s0 a4 s0)
		(s0 a5 s0)
		(s0 a6 s0)
		(s0 a7 s0)
		(s0 a8 s0)
		(s0 a9 s0)
		(s0 a11 s0)
		(s0 a12 s0)
		(s0 a13 s0)
		(s0 a14 s0)
		(s0 a15 s0)
		(s0 a16 s0)
		(s0 a17 s0)
		(s0 a18 s0)
		(s0 a19 s0)
		(s0 a20 s0)
		(s0 a21 s0)
		(s0 a22 s0)
		(s0 a24 s0)
		(s0 a25 s0)
		(s0 a26 s0)
		(s0 a27 s0)
		(s0 a28 s0)
		(s0 a29 s0)
		(s0 a30 s0)
		(s0 a31 s0)
		(s0 a32 s0)
		(s0 a33 s0)
		(s0 a34 s0)
		(s0 a35 s0)
		(s0 a36 s0)
		(s0 a37 s0)
		(s0 a38 s0)
		(s0 a39 s0)
		(s0 a40 s0)
		(s0 a41 s0)
		(s0 a42 s0)
		(s0 a44 s0)
		(s0 a45 s0)
		(s0 a46 s2)
		(s0 a47 s0)
		(s0 a48 s0)
		(s0 a49 s0)
		(s0 a50 s0)
		(s0 a52 s0)
		(s0 a53 s2)
		(s0 a54 s0)
		(s0 a55 s0)
		(s0 a56 s0)
		(s0 a57 s0)
		(s0 a58 s0)
		(s0 a59 s0)
		(s0 a60 s0)
		(s0 a62 s0)
		(s0 a63 s0)
		(s0 a64 s0)
		(s0 a65 s0)
		(s0 a66 s0)
		(s0 a67 s0)
		(s0 a68 s0)
		(s0 a69 s0)
		(s0 a70 s0)
		(s0 a71 s0)
		(s0 a72 s0)
		(s0 a74 s0)
		(s0 a75 s2)
		(s0 a76 s0)
		(s0 a77 s0)
		(s0 a78 s0)
		(s0 a79 s0)
		(s0 a80 s0)
		(s0 a81 s0)
		(s0 a82 s0)
		(s0 a84 s0)
		(s0 a85 s0)
		(s1 a86 s1)
		(s1 a87 s1)
		(s1 a88 s1)
		(s1 a89 s1)
		(s1 a90 s1)
		(s1 a91 s1)
		(s1 a92 s1)
		(s1 a93 s1)
		(s1 a94 s1)
		(s1 a96 s1)
		(s1 a98 s1)
		(s1 a99 s1)
		(s1 a102 s1)
		(s1 a103 s1)
		(s1 a104 s1)
		(s1 a107 s1)
		(s1 a108 s1)
		(s1 a109 s1)
		(s1 a110 s1)
		(s1 a111 s1)
		(s1 a112 s1)
		(s1 a113 s1)
		(s1 a114 s1)
		(s1 a115 s1)
		(s1 a116 s1)
		(s1 a118 s1)
		(s1 a120 s1)
		(s1 a121 s1)
		(s1 a124 s1)
		(s1 a125 s1)
		(s1 a126 s1)
		(s1 a129 s1)
		(s1 a130 s1)
		(s1 a131 s1)
		(s1 a132 s1)
		(s1 a133 s1)
		(s1 a134 s1)
		(s1 a135 s1)
		(s1 a136 s1)
		(s1 a137 s1)
		(s1 a138 s1)
		(s1 a140 s1)
		(s1 a142 s1)
		(s1 a143 s1)
		(s1 a146 s1)
		(s1 a147 s1)
		(s1 a148 s1)
		(s1 a151 s1)
		(s1 a152 s1)
		(s1 a153 s1)
		(s1 a154 s1)
		(s1 a155 s1)
		(s1 a156 s1)
		(s1 a157 s1)
		(s1 a158 s1)
		(s1 a159 s1)
		(s1 a160 s1)
		(s1 a161 s1)
		(s1 a162 s1)
		(s1 a163 s1)
		(s1 a0 s1)
		(s1 a1 s1)
		(s1 a2 s1)
		(s1 a3 s1)
		(s1 a5 s1)
		(s1 a6 s1)
		(s1 a7 s1)
		(s1 a8 s1)
		(s1 a9 s1)
		(s1 a11 s1)
		(s1 a12 s1)
		(s1 a13 s1)
		(s1 a15 s1)
		(s1 a16 s1)
		(s1 a17 s1)
		(s1 a18 s1)
		(s1 a19 s1)
		(s1 a22 s1)
		(s1 a24 s1)
		(s1 a25 s1)
		(s1 a26 s1)
		(s1 a27 s1)
		(s1 a28 s1)
		(s1 a29 s1)
		(s1 a30 s1)
		(s1 a31 s1)
		(s1 a32 s1)
		(s1 a33 s1)
		(s1 a34 s1)
		(s1 a35 s1)
		(s1 a36 s1)
		(s1 a37 s1)
		(s1 a38 s1)
		(s1 a39 s1)
		(s1 a40 s1)
		(s1 a41 s1)
		(s1 a42 s1)
		(s1 a44 s1)
		(s1 a45 s1)
		(s1 a47 s1)
		(s1 a48 s1)
		(s1 a49 s1)
		(s1 a50 s1)
		(s1 a52 s1)
		(s1 a54 s1)
		(s1 a55 s1)
		(s1 a58 s1)
		(s1 a59 s1)
		(s1 a60 s1)
		(s1 a63 s1)
		(s1 a64 s1)
		(s1 a65 s1)
		(s1 a66 s1)
		(s1 a67 s1)
		(s1 a68 s1)
		(s1 a69 s1)
		(s1 a70 s1)
		(s1 a71 s1)
		(s1 a72 s1)
		(s1 a74 s1)
		(s1 a76 s1)
		(s1 a77 s1)
		(s1 a80 s1)
		(s1 a81 s1)
		(s1 a82 s1)
		(s1 a85 s1)
		(s2 a86 s2)
		(s2 a87 s2)
		(s2 a88 s2)
		(s2 a89 s2)
		(s2 a90 s2)
		(s2 a91 s2)
		(s2 a92 s2)
		(s2 a93 s2)
		(s2 a94 s2)
		(s2 a96 s2)
		(s2 a97 s2)
		(s2 a98 s2)
		(s2 a99 s2)
		(s2 a100 s1)
		(s2 a101 s2)
		(s2 a102 s2)
		(s2 a103 s2)
		(s2 a104 s2)
		(s2 a106 s0)
		(s2 a107 s2)
		(s2 a108 s2)
		(s2 a109 s2)
		(s2 a110 s2)
		(s2 a111 s2)
		(s2 a112 s2)
		(s2 a113 s2)
		(s2 a114 s2)
		(s2 a115 s2)
		(s2 a116 s2)
		(s2 a118 s2)
		(s2 a119 s2)
		(s2 a120 s2)
		(s2 a121 s2)
		(s2 a122 s1)
		(s2 a123 s2)
		(s2 a124 s2)
		(s2 a125 s2)
		(s2 a126 s2)
		(s2 a128 s0)
		(s2 a129 s2)
		(s2 a130 s2)
		(s2 a131 s2)
		(s2 a132 s2)
		(s2 a133 s2)
		(s2 a134 s2)
		(s2 a135 s2)
		(s2 a136 s2)
		(s2 a137 s2)
		(s2 a138 s2)
		(s2 a140 s2)
		(s2 a141 s2)
		(s2 a142 s2)
		(s2 a143 s2)
		(s2 a144 s1)
		(s2 a145 s2)
		(s2 a146 s2)
		(s2 a147 s2)
		(s2 a148 s2)
		(s2 a150 s0)
		(s2 a151 s2)
		(s2 a152 s2)
		(s2 a153 s2)
		(s2 a154 s2)
		(s2 a155 s2)
		(s2 a156 s2)
		(s2 a157 s2)
		(s2 a158 s2)
		(s2 a159 s2)
		(s2 a160 s2)
		(s2 a161 s2)
		(s2 a162 s2)
		(s2 a163 s2)
		(s2 a0 s2)
		(s2 a1 s2)
		(s2 a2 s2)
		(s2 a3 s2)
		(s2 a5 s2)
		(s2 a6 s2)
		(s2 a7 s2)
		(s2 a8 s2)
		(s2 a9 s2)
		(s2 a11 s2)
		(s2 a12 s2)
		(s2 a13 s2)
		(s2 a14 s0)
		(s2 a15 s2)
		(s2 a16 s2)
		(s2 a17 s2)
		(s2 a18 s2)
		(s2 a19 s2)
		(s2 a20 s1)
		(s2 a21 s2)
		(s2 a22 s2)
		(s2 a24 s2)
		(s2 a25 s2)
		(s2 a26 s2)
		(s2 a27 s2)
		(s2 a28 s2)
		(s2 a29 s2)
		(s2 a30 s2)
		(s2 a31 s2)
		(s2 a32 s2)
		(s2 a33 s2)
		(s2 a34 s2)
		(s2 a35 s2)
		(s2 a36 s2)
		(s2 a37 s2)
		(s2 a38 s2)
		(s2 a39 s2)
		(s2 a40 s2)
		(s2 a41 s2)
		(s2 a42 s2)
		(s2 a44 s2)
		(s2 a45 s2)
		(s2 a46 s2)
		(s2 a47 s2)
		(s2 a48 s2)
		(s2 a49 s2)
		(s2 a50 s2)
		(s2 a52 s2)
		(s2 a53 s2)
		(s2 a54 s2)
		(s2 a55 s2)
		(s2 a56 s1)
		(s2 a57 s2)
		(s2 a58 s2)
		(s2 a59 s2)
		(s2 a60 s2)
		(s2 a62 s0)
		(s2 a63 s2)
		(s2 a64 s2)
		(s2 a65 s2)
		(s2 a66 s2)
		(s2 a67 s2)
		(s2 a68 s2)
		(s2 a69 s2)
		(s2 a70 s2)
		(s2 a71 s2)
		(s2 a72 s2)
		(s2 a74 s2)
		(s2 a75 s2)
		(s2 a76 s2)
		(s2 a77 s2)
		(s2 a78 s1)
		(s2 a79 s2)
		(s2 a80 s2)
		(s2 a81 s2)
		(s2 a82 s2)
		(s2 a84 s0)
		(s2 a85 s2)
	}
);
