// Benchmark for difference of Petri net and DFA  
// Generated from
// Fischer2safe.bpl_AllErrorsAtOnce_Iteration6_AbstractionAfterDifference.ats (2018/07/30 09:54:54)
// Fischer2safe.bpl_AllErrorsAtOnce_Iteration7_EagerFloydHoareAutomaton.ats (2018/07/30 09:54:54)


PetriNet net = (
	alphabet = {"#2#assume true;" "#5#assume lock != 2;" "#6#deadline := clk + delay;" "#7#assume lock == 0;" "#8#lock := 2;" "#9#assume clk <= deadline;" "#10#deadline := clk + wait;" "#11#assume clk >= deadline;" "#12#assume lock == 2;" "#14#assume !(lock != 2);" "#16#assume !(critical == 0);" "#17#assume critical == 0;" "#18#critical := 2;" "#19#critical := 0;" "#20#lock := 0;" "#22#assume !true;" "#23#assume true;" "#26#assume true;" "#27#clk := clk + 1;" "#29#assume !true;" "#30#assume true;" "#38#assume true;" "#41#assume lock != 1;" "#42#deadline := clk + delay;" "#43#assume lock == 0;" "#44#lock := 1;" "#45#assume clk <= deadline;" "#46#deadline := clk + wait;" "#47#assume clk >= deadline;" "#48#assume lock == 1;" "#50#assume !(lock != 1);" "#52#assume !(critical == 0);" "#53#assume critical == 0;" "#54#critical := 1;" "#55#critical := 0;" "#56#lock := 0;" "#58#assume !true;" "#59#assume true;" "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" },
	places = {"5#L79true" "6#L80true" "7#L81true" "8#Thread2Err0ASSERT_VIOLATIONASSERTtrue" "9#L82true" "10#L75-2true" "11#Thread2FINALtrue" "12#L85true" "13#L74true" "14#L75true" "15#L86true" "16#L87true" "17#L76true" "18#L77true" "19#Thread2EXITtrue" "20#L78true" "21#~initENTRYtrue" "23#ClockFINALtrue" "24#ClockEXITtrue" "25#L34true" "26#L35true" "27#~initENTRYtrue" "29#L56true" "30#L57true" "31#L58true" "32#L51-2true" "33#L50true" "34#Thread1Err0ASSERT_VIOLATIONASSERTtrue" "35#L61true" "36#L62true" "37#L51true" "38#L52true" "39#Thread1FINALtrue" "40#L63true" "41#L53true" "42#L54true" "43#Thread1EXITtrue" "44#L55true" "45#~initENTRYtrue" "46#true" "48#(= critical 0)" "Black: 48#(= critical 0)" "Black: 46#true" "52#true" "54#(<= lock 1)" "Black: 52#true" "Black: 54#(<= lock 1)" "58#true" "60#(<= 2 lock)" "Black: 58#true" "Black: 60#(<= 2 lock)" "64#true" "66#(<= lock 0)" "Black: 64#true" "Black: 66#(<= lock 0)" "70#true" "72#(<= 1 lock)" "Black: 70#true" "Black: 72#(<= 1 lock)" "76#true" "78#(<= 1 wait)" "81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "Black: 78#(<= 1 wait)" },
	transitions = {
		({"Black: 48#(= critical 0)" "46#true" "15#L86true" } "#19#critical := 0;" {"48#(= critical 0)" "16#L87true" "Black: 46#true" })
		({"18#L77true" "Black: 64#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#7#assume lock == 0;" {"20#L78true" "Black: 64#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"Black: 46#true" "10#L75-2true" } "#17#assume critical == 0;" {"Black: 46#true" "12#L85true" })
		({"Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "38#L52true" } "#42#deadline := clk + delay;" {"Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "41#L53true" })
		({"16#L87true" "52#true" "Black: 64#true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#20#lock := 0;" {"Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"20#L78true" "Black: 66#(<= lock 0)" "70#true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#8#lock := 2;" {"52#true" "5#L79true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" })
		({"Black: 48#(= critical 0)" "21#~initENTRYtrue" "27#~initENTRYtrue" "45#~initENTRYtrue" "78#(<= 1 wait)" "46#true" } "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" {"48#(= critical 0)" "33#L50true" "Black: 46#true" "25#L34true" "13#L74true" "78#(<= 1 wait)" })
		({"48#(= critical 0)" "Black: 46#true" "35#L61true" } "#54#critical := 1;" {"Black: 48#(= critical 0)" "36#L62true" "46#true" })
		({"Black: 66#(<= lock 0)" "70#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "31#L58true" "Black: 60#(<= 2 lock)" } "#48#assume lock == 1;" {"32#L51-2true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" })
		({"Black: 64#true" "40#L63true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#56#lock := 0;" {"33#L50true" "Black: 64#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"52#true" "Black: 66#(<= lock 0)" "70#true" "Black: 54#(<= lock 1)" "42#L54true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#44#lock := 1;" {"Black: 66#(<= lock 0)" "54#(<= lock 1)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"13#L74true" } "#2#assume true;" {"14#L75true" })
		({"32#L51-2true" "Black: 48#(= critical 0)" } "#52#assume !(critical == 0);" {"34#Thread1Err0ASSERT_VIOLATIONASSERTtrue" "Black: 48#(= critical 0)" })
		({"52#true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "42#L54true" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#44#lock := 1;" {"Black: 66#(<= lock 0)" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"64#true" "16#L87true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#20#lock := 0;" {"66#(<= lock 0)" "Black: 64#true" "70#true" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "20#L78true" "70#true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#8#lock := 2;" {"64#true" "52#true" "Black: 66#(<= lock 0)" "5#L79true" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" })
		({"81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "Black: 78#(<= 1 wait)" "26#L35true" } "#27#clk := clk + 1;" {"Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "25#L34true" "78#(<= 1 wait)" })
		({"66#(<= lock 0)" "Black: 64#true" "52#true" "70#true" "Black: 54#(<= lock 1)" "42#L54true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#44#lock := 1;" {"64#true" "Black: 66#(<= lock 0)" "54#(<= lock 1)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"64#true" "18#L77true" "Black: 66#(<= lock 0)" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#7#assume lock == 0;" {"66#(<= lock 0)" "Black: 64#true" "20#L78true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "52#true" "Black: 54#(<= lock 1)" "42#L54true" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#44#lock := 1;" {"64#true" "Black: 66#(<= lock 0)" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"33#L50true" } "#38#assume true;" {"37#L51true" })
		({"81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "Black: 46#true" "Black: 78#(<= 1 wait)" "21#~initENTRYtrue" "27#~initENTRYtrue" "45#~initENTRYtrue" } "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" {"33#L50true" "Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "Black: 46#true" "25#L34true" "13#L74true" "78#(<= 1 wait)" })
		({"Black: 48#(= critical 0)" "12#L85true" } "#18#critical := 2;" {"Black: 48#(= critical 0)" "15#L86true" })
		({"16#L87true" "52#true" "Black: 64#true" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#20#lock := 0;" {"Black: 64#true" "70#true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"64#true" "16#L87true" "52#true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#20#lock := 0;" {"66#(<= lock 0)" "Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"Black: 48#(= critical 0)" "36#L62true" "46#true" } "#55#critical := 0;" {"48#(= critical 0)" "Black: 46#true" "40#L63true" })
		({"Black: 64#true" "72#(<= 1 lock)" "40#L63true" "Black: 52#true" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#56#lock := 0;" {"33#L50true" "Black: 64#true" "70#true" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"64#true" "Black: 66#(<= lock 0)" "40#L63true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#56#lock := 0;" {"33#L50true" "66#(<= lock 0)" "Black: 64#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"23#ClockFINALtrue" } "#30#assume true;" {"24#ClockEXITtrue" })
		({"18#L77true" "52#true" "Black: 64#true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#7#assume lock == 0;" {"20#L78true" "Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"32#L51-2true" "Black: 46#true" } "#53#assume critical == 0;" {"35#L61true" "Black: 46#true" })
		({"Black: 66#(<= lock 0)" "70#true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "14#L75true" "Black: 58#true" } "#14#assume !(lock != 2);" {"Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "10#L75-2true" "Black: 58#true" })
		({"Black: 64#true" "Black: 52#true" "41#L53true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#43#assume lock == 0;" {"Black: 64#true" "Black: 52#true" "42#L54true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"Black: 48#(= critical 0)" "Black: 78#(<= 1 wait)" "21#~initENTRYtrue" "27#~initENTRYtrue" "76#true" "45#~initENTRYtrue" "46#true" } "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" {"48#(= critical 0)" "33#L50true" "Black: 46#true" "25#L34true" "13#L74true" "78#(<= 1 wait)" })
		({"52#true" "Black: 66#(<= lock 0)" "70#true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "31#L58true" "Black: 60#(<= 2 lock)" } "#48#assume lock == 1;" {"32#L51-2true" "Black: 66#(<= lock 0)" "54#(<= lock 1)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" })
		({"52#true" "Black: 64#true" "40#L63true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#56#lock := 0;" {"33#L50true" "Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"14#L75true" } "#5#assume lock != 2;" {"17#L76true" })
		({"64#true" "16#L87true" "52#true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#20#lock := 0;" {"66#(<= lock 0)" "Black: 64#true" "70#true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "58#true" "Black: 70#true" "14#L75true" "Black: 60#(<= 2 lock)" } "#14#assume !(lock != 2);" {"Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "10#L75-2true" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" })
		({"64#true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "40#L63true" "Black: 52#true" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#56#lock := 0;" {"33#L50true" "66#(<= lock 0)" "Black: 64#true" "70#true" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"25#L34true" } "#26#assume true;" {"26#L35true" })
		({"64#true" "18#L77true" "52#true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#7#assume lock == 0;" {"66#(<= lock 0)" "Black: 64#true" "20#L78true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"20#L78true" "Black: 66#(<= lock 0)" "70#true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "Black: 58#true" } "#8#lock := 2;" {"5#L79true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" })
		({"Black: 48#(= critical 0)" "35#L61true" } "#54#critical := 1;" {"Black: 48#(= critical 0)" "36#L62true" })
		({"64#true" "Black: 66#(<= lock 0)" "Black: 52#true" "41#L53true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#43#assume lock == 0;" {"66#(<= lock 0)" "Black: 64#true" "Black: 52#true" "42#L54true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"Black: 66#(<= lock 0)" "Black: 52#true" "42#L54true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#44#lock := 1;" {"Black: 66#(<= lock 0)" "Black: 52#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "Black: 78#(<= 1 wait)" "38#L52true" } "#42#deadline := clk + delay;" {"Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "41#L53true" "78#(<= 1 wait)" })
		({"52#true" "Black: 64#true" "72#(<= 1 lock)" "40#L63true" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#56#lock := 0;" {"33#L50true" "Black: 64#true" "70#true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"64#true" "52#true" "Black: 66#(<= lock 0)" "40#L63true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#56#lock := 0;" {"33#L50true" "66#(<= lock 0)" "Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"Black: 66#(<= lock 0)" "9#L82true" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" } "#12#assume lock == 2;" {"Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "10#L75-2true" "Black: 70#true" "Black: 58#true" })
		({"66#(<= lock 0)" "Black: 64#true" "20#L78true" "70#true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "Black: 58#true" } "#8#lock := 2;" {"64#true" "Black: 66#(<= lock 0)" "5#L79true" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" })
		({"11#Thread2FINALtrue" } "#23#assume true;" {"19#Thread2EXITtrue" })
		({"20#L78true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "58#true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#8#lock := 2;" {"5#L79true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" })
		({"52#true" "Black: 64#true" "Black: 54#(<= lock 1)" "41#L53true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#43#assume lock == 0;" {"Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "42#L54true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "Black: 52#true" "42#L54true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#44#lock := 1;" {"64#true" "Black: 66#(<= lock 0)" "Black: 52#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"37#L51true" "Black: 66#(<= lock 0)" "70#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#50#assume !(lock != 1);" {"32#L51-2true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" })
		({"16#L87true" "Black: 64#true" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#20#lock := 0;" {"Black: 64#true" "70#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"Black: 78#(<= 1 wait)" "29#L56true" } "#46#deadline := clk + wait;" {"Black: 78#(<= 1 wait)" "30#L57true" })
		({"37#L51true" } "#41#assume lock != 1;" {"38#L52true" })
		({"20#L78true" "Black: 66#(<= lock 0)" "70#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 58#true" } "#8#lock := 2;" {"52#true" "5#L79true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" })
		({"66#(<= lock 0)" "Black: 64#true" "20#L78true" "Black: 54#(<= lock 1)" "58#true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#8#lock := 2;" {"64#true" "Black: 66#(<= lock 0)" "5#L79true" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" })
		({"Black: 46#true" "15#L86true" } "#19#critical := 0;" {"16#L87true" "Black: 46#true" })
		({"Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "30#L57true" } "#47#assume clk >= deadline;" {"Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "31#L58true" })
		({"17#L76true" } "#6#deadline := clk + delay;" {"18#L77true" })
		({"64#true" "52#true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "40#L63true" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#56#lock := 0;" {"33#L50true" "66#(<= lock 0)" "Black: 64#true" "70#true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"Black: 46#true" "21#~initENTRYtrue" "27#~initENTRYtrue" "45#~initENTRYtrue" "78#(<= 1 wait)" } "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" {"33#L50true" "Black: 46#true" "25#L34true" "13#L74true" "78#(<= 1 wait)" })
		({"16#L87true" "Black: 64#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#20#lock := 0;" {"Black: 64#true" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "20#L78true" "70#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 58#true" } "#8#lock := 2;" {"64#true" "52#true" "Black: 66#(<= lock 0)" "5#L79true" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" })
		({"20#L78true" "Black: 66#(<= lock 0)" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#8#lock := 2;" {"52#true" "5#L79true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" })
		({"64#true" "52#true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "41#L53true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#43#assume lock == 0;" {"66#(<= lock 0)" "Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "42#L54true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"Black: 66#(<= lock 0)" "70#true" "Black: 52#true" "42#L54true" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#44#lock := 1;" {"Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "58#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"Black: 66#(<= lock 0)" "Black: 52#true" "Black: 70#true" "31#L58true" "Black: 60#(<= 2 lock)" } "#48#assume lock == 1;" {"32#L51-2true" "Black: 66#(<= lock 0)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" })
		({"52#true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "42#L54true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#44#lock := 1;" {"Black: 66#(<= lock 0)" "54#(<= lock 1)" "Black: 52#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"64#true" "16#L87true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#20#lock := 0;" {"66#(<= lock 0)" "Black: 64#true" "70#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "20#L78true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#8#lock := 2;" {"64#true" "52#true" "Black: 66#(<= lock 0)" "5#L79true" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" })
		({"Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "29#L56true" "78#(<= 1 wait)" } "#46#deadline := clk + wait;" {"81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "Black: 78#(<= 1 wait)" "30#L57true" })
		({"5#L79true" } "#9#assume clk <= deadline;" {"6#L80true" })
		({"66#(<= lock 0)" "Black: 64#true" "70#true" "Black: 52#true" "42#L54true" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#44#lock := 1;" {"64#true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "58#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "52#true" "Black: 54#(<= lock 1)" "42#L54true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#44#lock := 1;" {"64#true" "Black: 66#(<= lock 0)" "54#(<= lock 1)" "Black: 52#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"Black: 46#true" "36#L62true" } "#55#critical := 0;" {"Black: 46#true" "40#L63true" })
		({"Black: 66#(<= lock 0)" "70#true" "9#L82true" "Black: 54#(<= lock 1)" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#12#assume lock == 2;" {"Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "10#L75-2true" "60#(<= 2 lock)" "Black: 58#true" })
		({"52#true" "37#L51true" "Black: 66#(<= lock 0)" "70#true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#50#assume !(lock != 1);" {"32#L51-2true" "Black: 66#(<= lock 0)" "54#(<= lock 1)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" })
		({"44#L55true" } "#45#assume clk <= deadline;" {"29#L56true" })
		({"16#L87true" "52#true" "Black: 64#true" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#20#lock := 0;" {"Black: 64#true" "70#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"64#true" "16#L87true" "Black: 66#(<= lock 0)" "Black: 52#true" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#20#lock := 0;" {"66#(<= lock 0)" "Black: 64#true" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"Black: 64#true" "72#(<= 1 lock)" "40#L63true" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#56#lock := 0;" {"33#L50true" "Black: 64#true" "70#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"Black: 46#true" "Black: 78#(<= 1 wait)" "21#~initENTRYtrue" "27#~initENTRYtrue" "76#true" "45#~initENTRYtrue" } "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" {"33#L50true" "Black: 46#true" "25#L34true" "13#L74true" "78#(<= 1 wait)" })
		({"6#L80true" } "#10#deadline := clk + wait;" {"7#L81true" })
		({"Black: 48#(= critical 0)" "10#L75-2true" "46#true" } "#17#assume critical == 0;" {"48#(= critical 0)" "Black: 46#true" "12#L85true" })
		({"Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 70#true" "14#L75true" "Black: 58#true" } "#14#assume !(lock != 2);" {"Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "10#L75-2true" "Black: 70#true" "Black: 58#true" })
		({"16#L87true" "52#true" "Black: 64#true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#20#lock := 0;" {"Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"Black: 64#true" "40#L63true" "Black: 52#true" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#56#lock := 0;" {"33#L50true" "Black: 64#true" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"52#true" "Black: 66#(<= lock 0)" "70#true" "Black: 54#(<= lock 1)" "42#L54true" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#44#lock := 1;" {"Black: 66#(<= lock 0)" "54#(<= lock 1)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "58#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"52#true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 70#true" "31#L58true" "Black: 60#(<= 2 lock)" } "#48#assume lock == 1;" {"32#L51-2true" "Black: 66#(<= lock 0)" "54#(<= lock 1)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" })
		({"64#true" "16#L87true" "52#true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#20#lock := 0;" {"66#(<= lock 0)" "Black: 64#true" "70#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"64#true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "40#L63true" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#56#lock := 0;" {"33#L50true" "66#(<= lock 0)" "Black: 64#true" "70#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "52#true" "70#true" "Black: 54#(<= lock 1)" "42#L54true" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#44#lock := 1;" {"64#true" "Black: 66#(<= lock 0)" "54#(<= lock 1)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "58#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"20#L78true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" } "#8#lock := 2;" {"5#L79true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" })
		({"64#true" "16#L87true" "52#true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#20#lock := 0;" {"66#(<= lock 0)" "Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"7#L81true" } "#11#assume clk >= deadline;" {"9#L82true" })
		({"81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "Black: 48#(= critical 0)" "Black: 78#(<= 1 wait)" "21#~initENTRYtrue" "27#~initENTRYtrue" "45#~initENTRYtrue" "46#true" } "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" {"48#(= critical 0)" "33#L50true" "Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "Black: 46#true" "25#L34true" "13#L74true" "78#(<= 1 wait)" })
		({"52#true" "Black: 64#true" "72#(<= 1 lock)" "40#L63true" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#56#lock := 0;" {"33#L50true" "Black: 64#true" "70#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"64#true" "Black: 66#(<= lock 0)" "40#L63true" "Black: 52#true" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#56#lock := 0;" {"33#L50true" "66#(<= lock 0)" "Black: 64#true" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "20#L78true" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" } "#8#lock := 2;" {"64#true" "Black: 66#(<= lock 0)" "5#L79true" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" })
		({"32#L51-2true" "Black: 48#(= critical 0)" "46#true" } "#53#assume critical == 0;" {"48#(= critical 0)" "Black: 46#true" "35#L61true" })
		({"Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "26#L35true" } "#27#clk := clk + 1;" {"Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "25#L34true" })
		({"37#L51true" "Black: 66#(<= lock 0)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#50#assume !(lock != 1);" {"32#L51-2true" "Black: 66#(<= lock 0)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" })
		({"52#true" "Black: 64#true" "40#L63true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#56#lock := 0;" {"33#L50true" "Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"Black: 48#(= critical 0)" "10#L75-2true" } "#16#assume !(critical == 0);" {"Black: 48#(= critical 0)" "8#Thread2Err0ASSERT_VIOLATIONASSERTtrue" })
		({"20#L78true" "Black: 66#(<= lock 0)" "54#(<= lock 1)" "Black: 52#true" "Black: 70#true" "Black: 58#true" } "#8#lock := 2;" {"52#true" "5#L79true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" })
		({"Black: 66#(<= lock 0)" "70#true" "Black: 54#(<= lock 1)" "58#true" "Black: 72#(<= 1 lock)" "14#L75true" "Black: 60#(<= 2 lock)" } "#14#assume !(lock != 2);" {"Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "10#L75-2true" "60#(<= 2 lock)" "Black: 58#true" })
		({"39#Thread1FINALtrue" } "#59#assume true;" {"43#Thread1EXITtrue" })
		({"64#true" "52#true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "40#L63true" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#56#lock := 0;" {"33#L50true" "66#(<= lock 0)" "Black: 64#true" "70#true" "54#(<= lock 1)" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"16#L87true" "Black: 64#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#20#lock := 0;" {"Black: 64#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "20#L78true" "54#(<= lock 1)" "Black: 52#true" "Black: 70#true" "Black: 58#true" } "#8#lock := 2;" {"64#true" "52#true" "Black: 66#(<= lock 0)" "5#L79true" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 58#true" })
		({"48#(= critical 0)" "Black: 46#true" "12#L85true" } "#18#critical := 2;" {"Black: 48#(= critical 0)" "46#true" "15#L86true" })
		({"Black: 66#(<= lock 0)" "70#true" "Black: 52#true" "42#L54true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#44#lock := 1;" {"Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"Black: 66#(<= lock 0)" "Black: 52#true" "42#L54true" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#44#lock := 1;" {"Black: 66#(<= lock 0)" "Black: 52#true" "58#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"64#true" "52#true" "Black: 66#(<= lock 0)" "40#L63true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "60#(<= 2 lock)" "Black: 58#true" } "#56#lock := 0;" {"33#L50true" "66#(<= lock 0)" "Black: 64#true" "54#(<= lock 1)" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" })
		({"Black: 66#(<= lock 0)" "70#true" "9#L82true" "Black: 54#(<= lock 1)" "Black: 72#(<= 1 lock)" "Black: 58#true" } "#12#assume lock == 2;" {"Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "10#L75-2true" "Black: 58#true" })
		({"20#L78true" "Black: 66#(<= lock 0)" "70#true" "Black: 54#(<= lock 1)" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#8#lock := 2;" {"5#L79true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" })
		({"66#(<= lock 0)" "Black: 64#true" "70#true" "Black: 52#true" "42#L54true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#44#lock := 1;" {"64#true" "Black: 66#(<= lock 0)" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "Black: 52#true" "42#L54true" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#44#lock := 1;" {"64#true" "Black: 66#(<= lock 0)" "Black: 52#true" "58#true" "Black: 70#true" "44#L55true" "Black: 60#(<= 2 lock)" })
		({"16#L87true" "Black: 64#true" "72#(<= 1 lock)" "Black: 52#true" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" } "#20#lock := 0;" {"Black: 64#true" "70#true" "Black: 52#true" "58#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"64#true" "16#L87true" "Black: 66#(<= lock 0)" "Black: 52#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#20#lock := 0;" {"66#(<= lock 0)" "Black: 64#true" "Black: 52#true" "Black: 72#(<= 1 lock)" "13#L74true" "Black: 60#(<= 2 lock)" })
		({"66#(<= lock 0)" "Black: 64#true" "20#L78true" "70#true" "Black: 54#(<= lock 1)" "58#true" "Black: 72#(<= 1 lock)" "Black: 60#(<= 2 lock)" } "#8#lock := 2;" {"64#true" "Black: 66#(<= lock 0)" "5#L79true" "72#(<= 1 lock)" "Black: 54#(<= lock 1)" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" })
		({"Black: 66#(<= lock 0)" "9#L82true" "Black: 54#(<= lock 1)" "58#true" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#12#assume lock == 2;" {"Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "10#L75-2true" "Black: 70#true" "60#(<= 2 lock)" "Black: 58#true" })
		({"52#true" "37#L51true" "Black: 66#(<= lock 0)" "Black: 54#(<= lock 1)" "Black: 70#true" "Black: 60#(<= 2 lock)" } "#50#assume !(lock != 1);" {"32#L51-2true" "Black: 66#(<= lock 0)" "54#(<= lock 1)" "Black: 52#true" "Black: 70#true" "Black: 60#(<= 2 lock)" })
	},
	initialMarking = {"64#true" "Black: 66#(<= lock 0)" "70#true" "Black: 72#(<= 1 lock)" "76#true" "45#~initENTRYtrue" "46#true" "Black: 48#(= critical 0)" "Black: 81#(and (<= (+ clk 1) Thread1_deadline) (<= 1 wait))" "52#true" "Black: 78#(<= 1 wait)" "21#~initENTRYtrue" "Black: 54#(<= lock 1)" "58#true" "27#~initENTRYtrue" "Black: 60#(<= 2 lock)" },
	acceptingPlaces = {"34#Thread1Err0ASSERT_VIOLATIONASSERTtrue" "8#Thread2Err0ASSERT_VIOLATIONASSERTtrue" }
);

FiniteAutomaton nwa = (
	alphabet = {"#2#assume true;" "#5#assume lock != 2;" "#6#deadline := clk + delay;" "#7#assume lock == 0;" "#8#lock := 2;" "#9#assume clk <= deadline;" "#10#deadline := clk + wait;" "#11#assume clk >= deadline;" "#12#assume lock == 2;" "#14#assume !(lock != 2);" "#16#assume !(critical == 0);" "#17#assume critical == 0;" "#18#critical := 2;" "#19#critical := 0;" "#20#lock := 0;" "#22#assume !true;" "#23#assume true;" "#26#assume true;" "#27#clk := clk + 1;" "#29#assume !true;" "#30#assume true;" "#38#assume true;" "#41#assume lock != 1;" "#42#deadline := clk + delay;" "#43#assume lock == 0;" "#44#lock := 1;" "#45#assume clk <= deadline;" "#46#deadline := clk + wait;" "#47#assume clk >= deadline;" "#48#assume lock == 1;" "#50#assume !(lock != 1);" "#52#assume !(critical == 0);" "#53#assume critical == 0;" "#54#critical := 1;" "#55#critical := 0;" "#56#lock := 0;" "#58#assume !true;" "#59#assume true;" "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" },
	states = {"85#true" "86#false" "87#(<= 1 wait)" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" },
	initialStates = {"85#true" },
	finalStates = {"86#false" },
	transitions = {
		("85#true" "#2#assume true;" "85#true")
		("85#true" "#5#assume lock != 2;" "85#true")
		("85#true" "#6#deadline := clk + delay;" "85#true")
		("85#true" "#7#assume lock == 0;" "85#true")
		("85#true" "#8#lock := 2;" "85#true")
		("85#true" "#9#assume clk <= deadline;" "85#true")
		("85#true" "#10#deadline := clk + wait;" "85#true")
		("85#true" "#11#assume clk >= deadline;" "85#true")
		("85#true" "#12#assume lock == 2;" "85#true")
		("85#true" "#14#assume !(lock != 2);" "85#true")
		("85#true" "#16#assume !(critical == 0);" "85#true")
		("85#true" "#17#assume critical == 0;" "85#true")
		("85#true" "#18#critical := 2;" "85#true")
		("85#true" "#19#critical := 0;" "85#true")
		("85#true" "#20#lock := 0;" "85#true")
		("85#true" "#22#assume !true;" "86#false")
		("85#true" "#23#assume true;" "85#true")
		("85#true" "#26#assume true;" "85#true")
		("85#true" "#27#clk := clk + 1;" "85#true")
		("85#true" "#29#assume !true;" "86#false")
		("85#true" "#30#assume true;" "85#true")
		("85#true" "#38#assume true;" "85#true")
		("85#true" "#41#assume lock != 1;" "85#true")
		("85#true" "#42#deadline := clk + delay;" "85#true")
		("85#true" "#43#assume lock == 0;" "85#true")
		("85#true" "#44#lock := 1;" "85#true")
		("85#true" "#45#assume clk <= deadline;" "85#true")
		("85#true" "#46#deadline := clk + wait;" "85#true")
		("85#true" "#47#assume clk >= deadline;" "85#true")
		("85#true" "#48#assume lock == 1;" "85#true")
		("85#true" "#50#assume !(lock != 1);" "85#true")
		("85#true" "#52#assume !(critical == 0);" "85#true")
		("85#true" "#53#assume critical == 0;" "85#true")
		("85#true" "#54#critical := 1;" "85#true")
		("85#true" "#55#critical := 0;" "85#true")
		("85#true" "#56#lock := 0;" "85#true")
		("85#true" "#58#assume !true;" "86#false")
		("85#true" "#59#assume true;" "85#true")
		("85#true" "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" "87#(<= 1 wait)")
		("86#false" "#2#assume true;" "86#false")
		("86#false" "#5#assume lock != 2;" "86#false")
		("86#false" "#6#deadline := clk + delay;" "86#false")
		("86#false" "#7#assume lock == 0;" "86#false")
		("86#false" "#8#lock := 2;" "86#false")
		("86#false" "#9#assume clk <= deadline;" "86#false")
		("86#false" "#10#deadline := clk + wait;" "86#false")
		("86#false" "#11#assume clk >= deadline;" "86#false")
		("86#false" "#12#assume lock == 2;" "86#false")
		("86#false" "#14#assume !(lock != 2);" "86#false")
		("86#false" "#16#assume !(critical == 0);" "86#false")
		("86#false" "#17#assume critical == 0;" "86#false")
		("86#false" "#18#critical := 2;" "86#false")
		("86#false" "#19#critical := 0;" "86#false")
		("86#false" "#20#lock := 0;" "86#false")
		("86#false" "#22#assume !true;" "86#false")
		("86#false" "#23#assume true;" "86#false")
		("86#false" "#26#assume true;" "86#false")
		("86#false" "#27#clk := clk + 1;" "86#false")
		("86#false" "#29#assume !true;" "86#false")
		("86#false" "#30#assume true;" "86#false")
		("86#false" "#38#assume true;" "86#false")
		("86#false" "#41#assume lock != 1;" "86#false")
		("86#false" "#42#deadline := clk + delay;" "86#false")
		("86#false" "#43#assume lock == 0;" "86#false")
		("86#false" "#44#lock := 1;" "86#false")
		("86#false" "#45#assume clk <= deadline;" "86#false")
		("86#false" "#46#deadline := clk + wait;" "86#false")
		("86#false" "#47#assume clk >= deadline;" "86#false")
		("86#false" "#48#assume lock == 1;" "86#false")
		("86#false" "#50#assume !(lock != 1);" "86#false")
		("86#false" "#52#assume !(critical == 0);" "86#false")
		("86#false" "#53#assume critical == 0;" "86#false")
		("86#false" "#54#critical := 1;" "86#false")
		("86#false" "#55#critical := 0;" "86#false")
		("86#false" "#56#lock := 0;" "86#false")
		("86#false" "#58#assume !true;" "86#false")
		("86#false" "#59#assume true;" "86#false")
		("86#false" "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" "86#false")
		("87#(<= 1 wait)" "#2#assume true;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#5#assume lock != 2;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#6#deadline := clk + delay;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#7#assume lock == 0;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#8#lock := 2;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#9#assume clk <= deadline;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#10#deadline := clk + wait;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("87#(<= 1 wait)" "#11#assume clk >= deadline;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#12#assume lock == 2;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#14#assume !(lock != 2);" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#16#assume !(critical == 0);" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#17#assume critical == 0;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#18#critical := 2;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#19#critical := 0;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#20#lock := 0;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#22#assume !true;" "86#false")
		("87#(<= 1 wait)" "#23#assume true;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#26#assume true;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#27#clk := clk + 1;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#29#assume !true;" "86#false")
		("87#(<= 1 wait)" "#30#assume true;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#38#assume true;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#41#assume lock != 1;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#42#deadline := clk + delay;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#43#assume lock == 0;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#44#lock := 1;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#45#assume clk <= deadline;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#46#deadline := clk + wait;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#47#assume clk >= deadline;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#48#assume lock == 1;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#50#assume !(lock != 1);" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#52#assume !(critical == 0);" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#53#assume critical == 0;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#54#critical := 1;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#55#critical := 0;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#56#lock := 0;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "#58#assume !true;" "86#false")
		("87#(<= 1 wait)" "#59#assume true;" "87#(<= 1 wait)")
		("87#(<= 1 wait)" "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" "87#(<= 1 wait)")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#2#assume true;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#5#assume lock != 2;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#6#deadline := clk + delay;" "87#(<= 1 wait)")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#7#assume lock == 0;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#8#lock := 2;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#9#assume clk <= deadline;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#10#deadline := clk + wait;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#11#assume clk >= deadline;" "86#false")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#12#assume lock == 2;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#14#assume !(lock != 2);" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#16#assume !(critical == 0);" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#17#assume critical == 0;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#18#critical := 2;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#19#critical := 0;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#20#lock := 0;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#22#assume !true;" "86#false")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#23#assume true;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#26#assume true;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#27#clk := clk + 1;" "87#(<= 1 wait)")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#29#assume !true;" "86#false")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#30#assume true;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#38#assume true;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#41#assume lock != 1;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#42#deadline := clk + delay;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#43#assume lock == 0;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#44#lock := 1;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#45#assume clk <= deadline;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#46#deadline := clk + wait;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#47#assume clk >= deadline;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#48#assume lock == 1;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#50#assume !(lock != 1);" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#52#assume !(critical == 0);" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#53#assume critical == 0;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#54#critical := 1;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#55#critical := 0;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#56#lock := 0;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#58#assume !true;" "86#false")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "#59#assume true;" "90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))")
		("90#(and (<= 1 wait) (<= (+ clk 1) Thread2_deadline))" "critical := 0;clk := 0;assume wait >= 1;assume wait > delay;assume true;" "87#(<= 1 wait)")
	}
);
