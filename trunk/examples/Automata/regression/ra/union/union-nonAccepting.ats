RabinAutomaton automaton1 = (
	alphabet = {t1 t2 t3 t4 t5 t6 t7 t8 t9 t10},
	states = {s1 s30 s7 s8 s14 s15 s16 s17 s23 s26 s3 s19 s25 s12 s2 s24 s4 s18 s28 s27 s5 s11 s6 s10 s29 s21 s20 s22 s13 s9},
	initialStates = {s1},
	acceptingStates = {s30},
	finiteStates = {s1 s7 s8 s14 s15 s16 s17 s23 s26},
	transitions = { (s3 t1 s17) (s8 t1 s19) (s25 t1 s12) (s26 t1 s2) (s3 t2 s24) (s4 t2 s18) (s14 t2 s12) (s23 t2 s28) (s27 t2 s5) (s27 t2 s28) (s28 t2 s7) (s30 t2 s14) (s3 t3 s1) (s4 t3 s11) (s6 t3 s16) (s7 t3 s2) (s7 t3 s4) (s10 t3 s8) (s11 t3 s8) (s11 t3 s24) (s11 t3 s29) (s17 t3 s18) (s21 t3 s25) (s23 t3 s14) (s23 t3 s24) (s25 t3 s10) (s29 t3 s4) (s29 t3 s14) (s30 t3 s12) (s4 t4 s20) (s12 t4 s12) (s15 t4 s21) (s16 t4 s5) (s20 t4 s5) (s21 t4 s14) (s22 t4 s2) (s24 t4 s21) (s29 t4 s22) (s1 t5 s14) (s7 t5 s12) (s7 t5 s30) (s17 t5 s29) (s20 t5 s29) (s23 t5 s2) (s23 t5 s4) (s23 t5 s12) (s2 t6 s30) (s5 t6 s13) (s6 t6 s20) (s14 t6 s6) (s16 t6 s16) (s18 t6 s28) (s21 t6 s14) (s21 t6 s23) (s22 t6 s3) (s28 t6 s28) (s1 t7 s9) (s4 t7 s10) (s10 t7 s7) (s16 t7 s13) (s18 t7 s9) (s26 t7 s8) (s26 t7 s26) (s29 t7 s5) (s8 t8 s27) (s25 t8 s27) (s27 t8 s21) (s28 t8 s3) (s1 t9 s30) (s3 t9 s24) (s6 t9 s14) (s12 t9 s12) (s16 t9 s1) (s17 t9 s15) (s19 t9 s13) (s21 t9 s14) (s30 t9 s21) (s1 t10 s3) (s2 t10 s19) (s5 t10 s19) (s8 t10 s6) (s16 t10 s4) (s18 t10 s24) (s20 t10 s4) (s22 t10 s25) (s23 t10 s20) }
);

RabinAutomaton rejectingAutomaton = (
	alphabet = {t1 t2 t3 t4 t5 t6 t7 t8 t9 t10},
	states = {s1 s2},
	initialStates = {s1},
	acceptingStates = {s2},
	finiteStates = {s2},
	transitions = { (s1 t1 s2) (s1 t1 s1) (s1 t2 s1) (s2 t1 s2) (s2 t2 s2) }
);

assert(isEmpty(union(automaton1, rejectingAutomaton)));

assert(!accepts(union(rejectingAutomaton, automaton1), [t1 t1, t1 t2]));
assert(!accepts(union(automaton1, rejectingAutomaton), [t1 t1 t1 t1 t1 t1 t1 t1 t1 t2 , t1 t2]));
assert(!accepts(union(rejectingAutomaton, automaton1), [, t1 t2]));
assert(!accepts(union(rejectingAutomaton, automaton1), [, t2 t1]));
