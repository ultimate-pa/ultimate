// Author: Daniel Tischner
// Date: 2016-04-28
//
// Example usage of a reduction program for Nwa automata that uses direct nwa simulation.

NestedWordAutomaton preprocessed = removeUnreachable(nwa);

int minimizeSevpaSize = numberOfStates(minimizeSevpa(preprocessed));
int shrinkNwaSize = numberOfStates(shrinkNwa(preprocessed));
int minimizeNwaPmaxSatDirectBiSize = numberOfStates(minimizeNwaPmaxSatDirectBi(preprocessed));
int minimizeNwaPmaxSatDirectSize = numberOfStates(minimizeNwaPmaxSatDirect(preprocessed));
int reduceNwaDirectSimulationSize = numberOfStates(reduceNwaDirectSimulation(preprocessed));
int reduceNwaDirectSimulationBSize = numberOfStates(reduceNwaDirectSimulationB(preprocessed));
int reduceNwaDirectFullMultipebbleSimulationSize = numberOfStates(reduceNwaDirectFullMultipebbleSimulation(preprocessed));
// int reduceNwaDelayedSimulationSize = numberOfStates(reduceNwaDelayedSimulation(preprocessed));
// int reduceNwaDelayedSimulationBSize = numberOfStates(reduceNwaDelayedSimulationB(preprocessed));
// int reduceNwaDelayedFullMultipebbleSimulationSize = numberOfStates(reduceNwaDelayedFullMultipebbleSimulation(preprocessed));

assert(minimizeSevpaSize == 2);
assert(shrinkNwaSize == 2);
assert(minimizeNwaPmaxSatDirectBiSize == 2);
assert(minimizeNwaPmaxSatDirectSize == 2);
assert(reduceNwaDirectSimulationSize == 2);
assert(reduceNwaDirectSimulationBSize == 2);
assert(reduceNwaDirectFullMultipebbleSimulationSize == 2);
// assert(reduceNwaDelayedSimulationSize == 2);
// assert(reduceNwaDelayedSimulationBSize == 2);
// assert(reduceNwaDelayedFullMultipebbleSimulationSize == 2);

// Small circle example with two direct simulations in both directions
NestedWordAutomaton nwa = (
  callAlphabet = {c},
  internalAlphabet = {a},
  returnAlphabet = {r},
  states = {q0 q1 q2 q3},
  initialStates = {q0},
  finalStates = {q0 q2},
  callTransitions = {
	  (q0 c q1)
	  (q2 c q3)
  },
  internalTransitions = {
      
  }, 
  returnTransitions = {
	  (q1 q0 r q2)
	  (q3 q2 r q0)
  }
);

// Small nwa example from whiteboard
/*
NestedWordAutomaton nwa = (
  callAlphabet = {c},
  internalAlphabet = {a},
  returnAlphabet = {r},
  states = {q0 q1},
  initialStates = {q0},
  finalStates = {q1},
  callTransitions = {
	  (q0 c q0)
  },
  internalTransitions = {
      (q0 a q1)
  }, 
  returnTransitions = {
	  (q1 q0 r q1)
  }
);
*/

// Another small nwa example from whiteboard
/*
NestedWordAutomaton nwa = (
  callAlphabet = {c},
  internalAlphabet = {},
  returnAlphabet = {r},
  states = {q0 q1},
  initialStates = {q0},
  finalStates = {q1},
  callTransitions = {
	  (q0 c q1)
  },
  internalTransitions = {}, 
  returnTransitions = {
	  (q1 q0 r q0)
  }
);
*/

// Example with cyclic dependent summary edges
/*
NestedWordAutomaton nwa = (
  callAlphabet = {c},
  internalAlphabet = {a},
  returnAlphabet = {r},
  states = {q1 q2 q3 q4},
  initialStates = {q1},
  finalStates = {q2 q4},
  callTransitions = {
	  (q1 c q3)
	  (q2 c q3)
  },
  internalTransitions = {
      (q1 a q2)
	  (q2 a q1)
	  (q4 a q1)
	  (q4 a q2)
  },
  returnTransitions = {
	  (q3 q1 r q4)
	  (q3 q2 r q4)
  }
);
*/

// Small circle example with direct simulation in one direction and one in both directions
/*
NestedWordAutomaton nwa = (
  callAlphabet = {c},
  internalAlphabet = {a},
  returnAlphabet = {r},
  states = {q0 q1 q2 q3},
  initialStates = {q0},
  finalStates = {q0},
  callTransitions = {
	  (q0 c q1)
	  (q2 c q3)
  },
  internalTransitions = {
      
  }, 
  returnTransitions = {
	  (q1 q0 r q2)
	  (q3 q2 r q0)
  }
);
*/
