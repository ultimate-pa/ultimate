// Testfile dumped by Ultimate at 2017/01/08 23:12:11
// Source: Ackermann01_true-termination_true-no-overflow.c
// Shrunk by Christian Schilling 2017/01/10
//
// Revealed a bug in the delayed simulation-based minimization for NWA with the
//  PMax-SAT encoding.

NestedWordAutomaton preprocessed = removeUnreachable(nwa);

int minimizeSevpaSize = numberOfStates(minimizeSevpa(preprocessed));
int shrinkNwaSize = numberOfStates(shrinkNwa(preprocessed));
int minimizeNwaPmaxSatDirectBiSize = numberOfStates(minimizeNwaPmaxSatDirectBi(preprocessed));
int minimizeNwaPmaxSatDirectSize = numberOfStates(minimizeNwaPmaxSatDirect(preprocessed));
int reduceNwaDirectSimulationSize = numberOfStates(reduceNwaDirectSimulation(preprocessed));
int reduceNwaDirectSimulationBSize = numberOfStates(reduceNwaDirectSimulationB(preprocessed));
int reduceNwaDirectFullMultipebbleSimulationSize = numberOfStates(reduceNwaDirectFullMultipebbleSimulation(preprocessed));
// int reduceNwaDelayedSimulationSize = numberOfStates(reduceNwaDelayedSimulation(preprocessed));
// int reduceNwaDelayedSimulationBSize = numberOfStates(reduceNwaDelayedSimulationB(preprocessed));
// int reduceNwaDelayedFullMultipebbleSimulationSize = numberOfStates(reduceNwaDelayedFullMultipebbleSimulation(preprocessed));

assert(minimizeSevpaSize == 5);
assert(shrinkNwaSize == 5);
assert(minimizeNwaPmaxSatDirectBiSize == 5);
assert(minimizeNwaPmaxSatDirectSize == 5);
assert(reduceNwaDirectSimulationSize == 5);
assert(reduceNwaDirectSimulationBSize == 5);
assert(reduceNwaDirectFullMultipebbleSimulationSize == 5);
// assert(reduceNwaDelayedSimulationSize == 5);
// assert(reduceNwaDelayedSimulationBSize == 5);
// assert(reduceNwaDelayedFullMultipebbleSimulationSize == 5);

NestedWordAutomaton nwa = (
	callAlphabet = {"c" "c"},
	internalAlphabet = {"a"},
	returnAlphabet = {"r1" "r2"},
	states = {"q1" "q3" "q2" "q4" "q0"},
	initialStates = {"q0"},
	finalStates = {"q3" "q4" },
	callTransitions = {
		("q0" "c" "q1")
		("q2" "c" "q3")
	},
	internalTransitions = {
		("q4" "a" "q4")
		("q2" "a" "q0")
	},
	returnTransitions = {
		("q1" "q0" "r1" "q2")
		("q3" "q2" "r2" "q4")
	}
);
