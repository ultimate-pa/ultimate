// Testfile dumped by Ultimate at 2017/01/08 23:04:06
// Shrunk by Christian Schilling 2017/01/12
//
// Revealed a problem in the delayed simulation-based minimization for NWA.
//
// {q0,q3} and {q1,q4}, but the further is not correct.

NestedWordAutomaton preprocessed = removeUnreachable(nwa);

int minimizeSevpaSize = numberOfStates(minimizeSevpa(preprocessed));
int shrinkNwaSize = numberOfStates(shrinkNwa(preprocessed));
int minimizeNwaPmaxSatDirectSize = numberOfStates(minimizeNwaPmaxSatDirect(preprocessed));
int minimizeNwaPmaxSatDirectSize = numberOfStates(minimizeNwaPmaxSatDirect(preprocessed));
int reduceNwaDirectSimulationSize = numberOfStates(reduceNwaDirectSimulation(preprocessed));
int reduceNwaDirectSimulationBSize = numberOfStates(reduceNwaDirectSimulationB(preprocessed));
int reduceNwaDirectFullMultipebbleSimulationSize = numberOfStates(reduceNwaDirectFullMultipebbleSimulation(preprocessed));
// int reduceNwaDelayedSimulationSize = numberOfStates(reduceNwaDelayedSimulation(preprocessed));
// int reduceNwaDelayedSimulationBSize = numberOfStates(reduceNwaDelayedSimulationB(preprocessed));
// int reduceNwaDelayedFullMultipebbleSimulationSize = numberOfStates(reduceNwaDelayedFullMultipebbleSimulation(preprocessed));
// int minimizeNwaPmaxSatDelayedBiSize = numberOfStates(minimizeNwaPmaxSatDelayedBi(preprocessed));

assert(minimizeSevpaSize == 6);
assert(shrinkNwaSize == 5);
assert(minimizeNwaPmaxSatDirectSize == 5);
assert(minimizeNwaPmaxSatDirectSize == 5);
assert(reduceNwaDirectSimulationSize == 5);
assert(reduceNwaDirectSimulationBSize == 5);
assert(reduceNwaDirectFullMultipebbleSimulationSize == 5);
// assert(reduceNwaDelayedSimulationSize == 5);
// assert(reduceNwaDelayedSimulationBSize == 5);
// assert(reduceNwaDelayedFullMultipebbleSimulationSize == 5);
// assert(minimizeNwaPmaxSatDelayedBiSize == 5); //Result here is 6

NestedWordAutomaton nwa = (
	callAlphabet = {"c"},
	internalAlphabet = {"a" "b"},
	returnAlphabet = {"r"},
	states = {"q1" "qF" "q3" "q2" "q4" "q0"},
	initialStates = {"q0"},
	finalStates = {"qF" "q0"},
	callTransitions = {
		("q0" "c" "q1")
		("q3" "c" "q4")
	},
	internalTransitions = {
		("q2" "a" "qF")
		("q2" "b" "q3")
		("qF" "a" "qF")
	},
	returnTransitions = {
		("q1" "q0" "r" "q2")
		("q4" "q3" "r" "q2")
	}
);
