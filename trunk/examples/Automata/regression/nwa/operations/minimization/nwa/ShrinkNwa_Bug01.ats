// Example that reveals probably a bug in shrinkNwa in revision 12302.

NestedWordAutomaton preprocessed = removeUnreachable(nwa);

int minimizeSevpaSize = numberOfStates(minimizeSevpa(preprocessed));
int shrinkNwaSize = numberOfStates(shrinkNwa(preprocessed));
int minimizeNwaPmaxSatDirectBiSize = numberOfStates(minimizeNwaPmaxSatDirectBi(preprocessed));
int minimizeNwaPmaxSatDirectSize = numberOfStates(minimizeNwaPmaxSatDirect(preprocessed));
int reduceNwaDirectSimulationSize = numberOfStates(reduceNwaDirectSimulation(preprocessed));
int reduceNwaDirectSimulationBSize = numberOfStates(reduceNwaDirectSimulationB(preprocessed));
int reduceNwaDirectFullMultipebbleSimulationSize = numberOfStates(reduceNwaDirectFullMultipebbleSimulation(preprocessed));
// int reduceNwaDelayedSimulationSize = numberOfStates(reduceNwaDelayedSimulation(preprocessed));
// int reduceNwaDelayedSimulationBSize = numberOfStates(reduceNwaDelayedSimulationB(preprocessed));
// int reduceNwaDelayedFullMultipebbleSimulationSize = numberOfStates(reduceNwaDelayedFullMultipebbleSimulation(preprocessed));

assert(minimizeSevpaSize == 52);
assert(shrinkNwaSize == 49);
assert(minimizeNwaPmaxSatDirectBiSize == 49);
assert(minimizeNwaPmaxSatDirectSize == 53);
assert(reduceNwaDirectSimulationSize == 49);
assert(reduceNwaDirectSimulationBSize == 53);
assert(reduceNwaDirectFullMultipebbleSimulationSize == 53);
// assert(reduceNwaDelayedSimulationSize == 49);
// assert(reduceNwaDelayedSimulationBSize == 49);
// assert(reduceNwaDelayedFullMultipebbleSimulationSize == 49);

NestedWordAutomaton nwa = (
	callAlphabet = {c0 c1 c2 c3 c4 c5 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 },
	returnAlphabet = {r0 r1 r2 r3 r4 r5 },
	states = {s0 s1 s2 s3 s4 s27 s5 s28 s29 s30 s6 s32 s31 s33 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s34 s19 s35 s20 s36 s21 s22 s37 s23 s24 s38 s25 s39 s40 s41 s42 s43 s26 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 },
	initialStates = {s29 },
	finalStates = {s26 },
	callTransitions = {
		 (s1 c1 s12)
		 (s2 c0 s3)
		 (s8 c4 s43)
		 (s9 c4 s43)
		 (s13 c4 s12)
		 (s22 c4 s12)
		 (s29 c5 s30)
		 (s33 c2 s48)
		 (s35 c1 s51)
		 (s39 c4 s43)
		 (s45 c3 s51)
		 (s52 c1 s51)
		 (s53 c0 s56)
	},
	internalTransitions = {
		 (s0 a18 s10)
		 (s3 a6 s4)
		 (s4 a10 s34)
		 (s6 a18 s7)
		 (s7 a19 s5)
		 (s10 a19 s11)
		 (s12 a6 s15)
		 (s14 a0 s2)
		 (s14 a3 s1)
		 (s15 a9 s14)
		 (s16 a5 s18)
		 (s18 a19 s17)
		 (s19 a11 s20)
		 (s20 a8 s26)
		 (s21 a15 s19)
		 (s23 a19 s24)
		 (s25 a18 s23)
		 (s27 a18 s28)
		 (s28 a19 s32)
		 (s30 a7 s31)
		 (s34 a19 s38)
		 (s36 a0 s53)
		 (s36 a3 s35)
		 (s37 a5 s40)
		 (s40 a19 s41)
		 (s42 a18 s10)
		 (s43 a6 s44)
		 (s44 a10 s54)
		 (s46 a17 s45)
		 (s47 a14 s46)
		 (s48 a21 s47)
		 (s49 a0 s53)
		 (s49 a3 s52)
		 (s50 a9 s49)
		 (s50 a10 s54)
		 (s51 a6 s50)
		 (s54 a19 s57)
		 (s55 a9 s36)
		 (s55 a10 s34)
		 (s56 a6 s55)
	},
	returnTransitions = {
		 (s5 s35 r1 s8)
		 (s5 s1 r1 s9)
		 (s5 s52 r1 s9)
		 (s5 s22 r4 s27)
		 (s5 s13 r4 s25)
		 (s11 s2 r0 s16)
		 (s11 s53 r0 s16)
		 (s11 s35 r1 s8)
		 (s11 s1 r1 s9)
		 (s11 s52 r1 s9)
		 (s17 s35 r1 s13)
		 (s17 s1 r1 s13)
		 (s17 s52 r1 s13)
		 (s24 s35 r1 s13)
		 (s24 s1 r1 s22)
		 (s24 s52 r1 s22)
		 (s24 s45 r3 s21)
		 (s31 s29 r5 s33)
		 (s32 s35 r1 s13)
		 (s32 s1 r1 s22)
		 (s32 s52 r1 s22)
		 (s32 s45 r3 s21)
		 (s38 s2 r0 s37)
		 (s38 s53 r0 s37)
		 (s41 s35 r1 s39)
		 (s41 s1 r1 s39)
		 (s41 s52 r1 s39)
		 (s57 s8 r4 s0)
		 (s57 s9 r4 s6)
		 (s57 s39 r4 s42)
	}
);
