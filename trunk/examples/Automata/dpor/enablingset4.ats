/*
 * Simple test for DPOR.
 *
 * We here assume that r and b commute, a is dependent with b,  a < b < c.
 *
 * Since a and c are dependent c and c is not enabled in the initial state before a:
 * The Enablingset of c in state E has to be added to the backtrack set.
 * The Enablingset contains only a meaning that there is no accepted word where c comes before a. 
 * 
 */

//@ commutativity (c, b) (b, c) (a, b) (b, a)
//@ enabling (E, c, a)
//@ membranes (E, a) (A, b) (AB, c)


FiniteAutomaton input = (
     alphabet      = {a b c},
     states        = {E A AB ABC B BA BAC BC BCA},
     initialStates = {E},
     finalStates   = {ABC},
     transitions   = {
         (E a A)
         (A b AB)
         (AB c ABC)
         (E b B)
         (B a BA)
         (B c BC)
         (BA c BAC)
         (BC a BCA)
     }
);

FiniteAutomaton expected = (
     alphabet      = {a b c},
     states        = {E A AB ABC},
     initialStates = {E},
     finalStates   = {ABC},
     transitions   = {
         (E a A)
         (A b AB)
         (AB c ABC)
     }
);
