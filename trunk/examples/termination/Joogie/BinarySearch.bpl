type ref;
type realVar;
type classConst;
// type Field x;
// var $HeapVar : <x>[ref, Field x]x;

const unique $null : ref ;
const unique $intArrNull : [int]int ;
const unique $realArrNull : [int]realVar ;
const unique $refArrNull : [int]ref ;

const unique $arrSizeIdx : int;
var $intArrSize : [int]int;
var $realArrSize : [realVar]int;
var $refArrSize : [ref]int;

var $stringSize : [ref]int;

//built-in axioms 
axiom ($arrSizeIdx == -1);

//note: new version doesn't put helpers in the perlude anymore//Prelude finished 



var java.lang.String$lp$$rp$$BinarySearch.Random$args254 : [int]ref;
var int$BinarySearch.Random$index0 : int;


// procedure is generated by joogie.
function {:inline true} $neref(x : ref, y : ref) returns (__ret : int) {
if (x != y) then 1 else 0
}


	 //  @line: 2
// <BinarySearch.BinarySearch: void <init>()>
procedure void$BinarySearch.BinarySearch$$la$init$ra$$2228(__this : ref)  requires ($neref((__this), ($null))==1);
 {
var r01 : ref;
Block16:
	r01 := __this;
	 assert ($neref((r01), ($null))==1);
	 //  @line: 3
	 call void$java.lang.Object$$la$init$ra$$28((r01));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $realarrtoref($param00 : [int]realVar) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $modreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $leref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $modint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $gtref($param00 : ref, $param11 : ref) returns (__ret : int);



	 //  @line: 2
// <BinarySearch.Random: void <init>()>
procedure void$BinarySearch.Random$$la$init$ra$$2233(__this : ref)  requires ($neref((__this), ($null))==1);
 {
var r029 : ref;
Block42:
	r029 := __this;
	 assert ($neref((r029), ($null))==1);
	 //  @line: 3
	 call void$java.lang.Object$$la$init$ra$$28((r029));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $eqrealarray($param00 : [int]realVar, $param11 : [int]realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $addint(x : int, y : int) returns (__ret : int) {
(x + y)
}


// procedure is generated by joogie.
function {:inline true} $subref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $inttoreal($param00 : int) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shrint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negReal($param00 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $refarrtoref($param00 : [int]ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $divref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $mulref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $neint(x : int, y : int) returns (__ret : int) {
if (x != y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $ltreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftorefarr($param00 : ref) returns (__ret : [int]ref);



// procedure is generated by joogie.
function {:inline true} $gtint(x : int, y : int) returns (__ret : int) {
if (x > y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $reftoint($param00 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $addref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $xorreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $andref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $cmpreal(x : realVar, y : realVar) returns (__ret : int) {
if ($ltreal((x), (y)) == 1) then 1 else if ($eqreal((x), (y)) == 1) then 0 else -1
}


	 //  @line: 11
// <BinarySearch.BinarySearch: boolean binarySearch(int[],int)>
procedure boolean$BinarySearch.BinarySearch$binarySearch$2230($param_0 : [int]int, $param_1 : int) returns (__ret : int) {
var $z010 : int;
var r07 : [int]int;
var $i19 : int;
var i08 : int;
Block18:
	r07 := $param_0;
	i08 := $param_1;
	 //  @line: 12
	$i19 := $intArrSize[r07[$arrSizeIdx]];
	 //  @line: 12
	 call $z010 := boolean$BinarySearch.BinarySearch$binarySearch$2231((r07), (i08), (0), ($i19));
	 //  @line: 12
	__ret := $z010;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $addreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $gtreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



	 //  @line: 4
// <BinarySearch.BinarySearch: void main(java.lang.String[])>
procedure void$BinarySearch.BinarySearch$main$2229($param_0 : [int]ref)
  modifies $stringSize, java.lang.String$lp$$rp$$BinarySearch.Random$args254;
 {
var r02 : [int]ref;
var r14 : [int]int;
var $i05 : int;

 //temp local variables 
var $freshlocal0 : int;

Block17:
	r02 := $param_0;
	 //  @line: 5
	java.lang.String$lp$$rp$$BinarySearch.Random$args254 := r02;
	 //  @line: 7
	 call r14 := int$lp$$rp$$BinarySearch.BinarySearch$createArray$2232();
	 //  @line: 8
	 call $i05 := int$BinarySearch.Random$random$2234();
	 //  @line: 8
	 call $freshlocal0 := boolean$BinarySearch.BinarySearch$binarySearch$2230((r14), ($i05));
	 return;
}


	 //  @line: 31
// <BinarySearch.BinarySearch: int[] createArray()>
procedure int$lp$$rp$$BinarySearch.BinarySearch$createArray$2232() returns (__ret : [int]int)
  modifies $intArrSize;
 {
var $i126 : int;
var $i023 : int;
var i328 : int;
var $i227 : int;
var r024 : [int]int;
	 //  @line: 32
Block35:
	 //  @line: 32
	 call $i023 := int$BinarySearch.Random$random$2234();
	 //  @line: 32
	r024 := $reftointarr(($newvariable((36))));
	$intArrSize[$reftointarr(($newvariable((36))))[$arrSizeIdx]] := $i023;
	 assume ($negInt(($eqintarray(($reftointarr(($newvariable((36))))), ($intArrNull))))==1);
	 //  @line: 33
	i328 := 0;
	 goto Block37;
	 //  @line: 33
Block37:
	 //  @line: 33
	$i126 := $intArrSize[r024[$arrSizeIdx]];
	 goto Block38;
	 //  @line: 33
Block38:
	 goto Block39, Block41;
	 //  @line: 33
Block39:
	 assume ($geint((i328), ($i126))==1);
	 goto Block40;
	 //  @line: 33
Block41:
	 //  @line: 33
	 assume ($negInt(($geint((i328), ($i126))))==1);
	 //  @line: 34
	 call $i227 := int$BinarySearch.Random$random$2234();
	 assert ($geint((i328), (0))==1);
	 assert ($ltint((i328), ($intArrSize[r024[$arrSizeIdx]]))==1);
	 //  @line: 34
	r024[i328] := $i227;
	 //  @line: 33
	i328 := $addint((i328), (1));
	 goto Block37;
	 //  @line: 36
Block40:
	 //  @line: 36
	__ret := r024;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $eqreal(x : realVar, y : realVar) returns (__ret : int) {
if (x == y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $ltint(x : int, y : int) returns (__ret : int) {
if (x < y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $newvariable($param00 : int) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $divint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $geint(x : int, y : int) returns (__ret : int) {
if (x >= y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $mulint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $leint(x : int, y : int) returns (__ret : int) {
if (x <= y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $shlref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqrefarray($param00 : [int]ref, $param11 : [int]ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftointarr($param00 : ref) returns (__ret : [int]int);



// procedure is generated by joogie.
function {:inline true} $ltref($param00 : ref, $param11 : ref) returns (__ret : int);



	 //  @line: 15
// <BinarySearch.BinarySearch: boolean binarySearch(int[],int,int,int)>
procedure boolean$BinarySearch.BinarySearch$binarySearch$2231($param_0 : [int]int, $param_1 : int, $param_2 : int, $param_3 : int) returns (__ret : int) {
var $i413 : int;
var $i514 : int;
var i212 : int;
var i017 : int;
var $i719 : int;
var i111 : int;
var $z020 : int;
var $i821 : int;
var r016 : [int]int;
var $z122 : int;
var $i618 : int;
var i315 : int;
Block19:
	r016 := $param_0;
	i017 := $param_1;
	i111 := $param_2;
	i212 := $param_3;
	 goto Block20;
	 //  @line: 16
Block20:
	 goto Block21, Block23;
	 //  @line: 16
Block21:
	 assume ($leint((i111), (i212))==1);
	 goto Block22;
	 //  @line: 16
Block23:
	 //  @line: 16
	 assume ($negInt(($leint((i111), (i212))))==1);
	 //  @line: 17
	__ret := 0;
	 return;
	 //  @line: 20
Block22:
	 //  @line: 20
	$i413 := $subint((i212), (i111));
	 goto Block24;
	 //  @line: 20
Block24:
	 assert ($neint((2), (0))==1);
	 //  @line: 20
	$i514 := $divint(($i413), (2));
	 //  @line: 20
	i315 := $addint((i111), ($i514));
	 assert ($geint((i315), (0))==1);
	 assert ($ltint((i315), ($intArrSize[r016[$arrSizeIdx]]))==1);
	 //  @line: 21
	$i618 := r016[i315];
	 goto Block25;
	 //  @line: 21
Block25:
	 goto Block28, Block26;
	 //  @line: 21
Block28:
	 //  @line: 21
	 assume ($negInt(($neint(($i618), (i017))))==1);
	 //  @line: 22
	__ret := 1;
	 return;
	 //  @line: 21
Block26:
	 assume ($neint(($i618), (i017))==1);
	 goto Block27;
	 //  @line: 24
Block27:
	 //  @line: 24
	$i719 := $subint((i315), (1));
	 goto Block29;
	 //  @line: 24
Block29:
	 //  @line: 24
	 call $z020 := boolean$BinarySearch.BinarySearch$binarySearch$2231((r016), (i017), (i111), ($i719));
	 goto Block30;
	 //  @line: 24
Block30:
	 goto Block31, Block33;
	 //  @line: 24
Block31:
	 assume ($eqint(($z020), (0))==1);
	 goto Block32;
	 //  @line: 24
Block33:
	 //  @line: 24
	 assume ($negInt(($eqint(($z020), (0))))==1);
	 //  @line: 25
	__ret := 1;
	 return;
	 //  @line: 27
Block32:
	 //  @line: 27
	$i821 := $addint((i315), (1));
	 goto Block34;
	 //  @line: 27
Block34:
	 //  @line: 27
	 call $z122 := boolean$BinarySearch.BinarySearch$binarySearch$2231((r016), (i017), ($i821), (i212));
	 //  @line: 27
	__ret := $z122;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $mulreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shrref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $shrreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $divreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $orint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftorealarr($param00 : ref) returns (__ret : [int]realVar);



// procedure is generated by joogie.
function {:inline true} $cmpref(x : ref, y : ref) returns (__ret : int) {
if ($ltref((x), (y)) == 1) then 1 else if ($eqref((x), (y)) == 1) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $realtoint($param00 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $geref($param00 : ref, $param11 : ref) returns (__ret : int);



// <java.lang.String: int length()>
procedure int$java.lang.String$length$59(__this : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $orreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqint(x : int, y : int) returns (__ret : int) {
if (x == y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $ushrref($param00 : ref, $param11 : ref) returns (__ret : int);



// <java.lang.Object: void <init>()>
procedure void$java.lang.Object$$la$init$ra$$28(__this : ref);



// procedure is generated by joogie.
function {:inline true} $modref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $eqintarray($param00 : [int]int, $param11 : [int]int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negRef($param00 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $lereal($param00 : realVar, $param11 : realVar) returns (__ret : int);



	 //  @line: 4
// <BinarySearch.Random: void <clinit>()>
procedure void$BinarySearch.Random$$la$clinit$ra$$2235()
  modifies int$BinarySearch.Random$index0;
 {
	 //  @line: 5
Block44:
	 //  @line: 5
	int$BinarySearch.Random$index0 := 0;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $nereal(x : realVar, y : realVar) returns (__ret : int) {
if (x != y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $instanceof($param00 : ref, $param11 : classConst) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $xorref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $orref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $intarrtoref($param00 : [int]int) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $subreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shlreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negInt(x : int) returns (__ret : int) {
if (x == 0) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $gereal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqref(x : ref, y : ref) returns (__ret : int) {
if (x == y) then 1 else 0
}


	 //  @line: 7
// <BinarySearch.Random: int random()>
procedure int$BinarySearch.Random$random$2234() returns (__ret : int)
  modifies $stringSize, int$BinarySearch.Random$index0;
 {
var r032 : ref;
var $i133 : int;
var $i234 : int;
var $r131 : [int]ref;
var $i030 : int;
var $i335 : int;
	 //  @line: 8
Block43:
	 //  @line: 8
	$r131 := java.lang.String$lp$$rp$$BinarySearch.Random$args254;
	 //  @line: 8
	$i030 := int$BinarySearch.Random$index0;
	 assert ($geint(($i030), (0))==1);
	 assert ($ltint(($i030), ($refArrSize[$r131[$arrSizeIdx]]))==1);
	 //  @line: 8
	r032 := $r131[$i030];
	 //  @line: 9
	$i133 := int$BinarySearch.Random$index0;
	 //  @line: 9
	$i234 := $addint(($i133), (1));
	 //  @line: 9
	int$BinarySearch.Random$index0 := $i234;
	$i335 := $stringSize[r032];
	 //  @line: 10
	__ret := $i335;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $cmpint(x : int, y : int) returns (__ret : int) {
if (x < y) then 1 else if (x == y) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $andint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $andreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $shlint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $xorint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $subint(x : int, y : int) returns (__ret : int) {
(x - y)
}


