type ref;
type realVar;
type classConst;
// type Field x;
// var $HeapVar : <x>[ref, Field x]x;

const unique $null : ref ;
const unique $intArrNull : [int]int ;
const unique $realArrNull : [int]realVar ;
const unique $refArrNull : [int]ref ;

const unique $arrSizeIdx : int;
var $intArrSize : [int]int;
var $realArrSize : [realVar]int;
var $refArrSize : [ref]int;

var $stringSize : [ref]int;

//built-in axioms 
axiom ($arrSizeIdx == -1);

//note: new version doesn't put helpers in the perlude anymore//Prelude finished 



var List$List$tail254 : Field ref;
var int$Random$index0 : int;
var int$List$head0 : Field int;
var java.lang.String$lp$$rp$$Random$args255 : [int]ref;


// procedure is generated by joogie.
function {:inline true} $neref(x : ref, y : ref) returns (__ret : int) {
if (x != y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $realarrtoref($param00 : [int]realVar) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $modreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $leref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $modint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $gtref($param00 : ref, $param11 : ref) returns (__ret : int);



	 //  @line: 3
// <FibSLR: int fib(int)>
procedure int$FibSLR$fib$2229($param_0 : int) returns (__ret : int) {
var $i57 : int;
var $i35 : int;
var $i46 : int;
var $i24 : int;
var i02 : int;
var $i13 : int;
Block17:
	i02 := $param_0;
	 goto Block18;
	 //  @line: 4
Block18:
	 goto Block21, Block19;
	 //  @line: 4
Block21:
	 //  @line: 4
	 assume ($negInt(($geint((i02), (2))))==1);
	 //  @line: 5
	__ret := 1;
	 return;
	 //  @line: 4
Block19:
	 assume ($geint((i02), (2))==1);
	 goto Block20;
	 //  @line: 5
Block20:
	 //  @line: 5
	$i13 := $subint((i02), (1));
	 goto Block22;
	 //  @line: 5
Block22:
	 //  @line: 5
	 call $i24 := int$FibSLR$fib$2229(($i13));
	 //  @line: 5
	$i35 := $subint((i02), (2));
	 //  @line: 5
	 call $i46 := int$FibSLR$fib$2229(($i35));
	 //  @line: 5
	$i57 := $addint(($i24), ($i46));
	 //  @line: 5
	__ret := $i57;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $eqrealarray($param00 : [int]realVar, $param11 : [int]realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $addint(x : int, y : int) returns (__ret : int) {
(x + y)
}


// procedure is generated by joogie.
function {:inline true} $subref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $inttoreal($param00 : int) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shrint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negReal($param00 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $refarrtoref($param00 : [int]ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $divref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $mulref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $neint(x : int, y : int) returns (__ret : int) {
if (x != y) then 1 else 0
}


// <FibSLR: void <init>()>
procedure void$FibSLR$$la$init$ra$$2228(__this : ref)  requires ($neref((__this), ($null))==1);
 {
var r01 : ref;
Block16:
	r01 := __this;
	 assert ($neref((r01), ($null))==1);
	 //  @line: 1
	 call void$java.lang.Object$$la$init$ra$$28((r01));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $ltreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftorefarr($param00 : ref) returns (__ret : [int]ref);



// procedure is generated by joogie.
function {:inline true} $gtint(x : int, y : int) returns (__ret : int) {
if (x > y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $reftoint($param00 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $addref($param00 : ref, $param11 : ref) returns (__ret : ref);



	 //  @line: 14
// <List: List mk(int)>
procedure List$List$mk$2234($param_0 : int) returns (__ret : ref) {
var $r028 : ref;
var r131 : ref;
var $i129 : int;
var i230 : int;
var $i027 : int;
Block32:
	i230 := $param_0;
	 //  @line: 15
	r131 := $null;
	 goto Block33;
	 //  @line: 17
Block33:
	 //  @line: 17
	$i027 := i230;
	 //  @line: 17
	i230 := $addint((i230), (-1));
	 goto Block34;
	 //  @line: 17
Block34:
	 goto Block37, Block35;
	 //  @line: 17
Block37:
	 //  @line: 17
	 assume ($negInt(($leint(($i027), (0))))==1);
	 //  @line: 18
	$r028 := $newvariable((38));
	 assume ($neref(($newvariable((38))), ($null))==1);
	 //  @line: 18
	 call $i129 := int$Random$random$2236();
	 assert ($neref(($r028), ($null))==1);
	 //  @line: 18
	 call void$List$$la$init$ra$$2232(($r028), ($i129), (r131));
	 //  @line: 18
	r131 := $r028;
	 goto Block33;
	 //  @line: 17
Block35:
	 assume ($leint(($i027), (0))==1);
	 goto Block36;
	 //  @line: 20
Block36:
	 //  @line: 20
	__ret := r131;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $xorreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $andref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $cmpreal(x : realVar, y : realVar) returns (__ret : int) {
if ($ltreal((x), (y)) == 1) then 1 else if ($eqreal((x), (y)) == 1) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $addreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $gtreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqreal(x : realVar, y : realVar) returns (__ret : int) {
if (x == y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $ltint(x : int, y : int) returns (__ret : int) {
if (x < y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $newvariable($param00 : int) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $divint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $geint(x : int, y : int) returns (__ret : int) {
if (x >= y) then 1 else 0
}


	 //  @line: 13
// <FibSLR: void main(java.lang.String[])>
procedure void$FibSLR$main$2231($param_0 : [int]ref)
  modifies $stringSize, java.lang.String$lp$$rp$$Random$args255;
 {
var $i116 : int;
var $i217 : int;
var $i015 : int;
var r014 : [int]ref;

 //temp local variables 
var $freshlocal0 : ref;

Block29:
	r014 := $param_0;
	 //  @line: 14
	java.lang.String$lp$$rp$$Random$args255 := r014;
	 //  @line: 15
	 call $i015 := int$Random$random$2236();
	 //  @line: 15
	 call $i116 := int$Random$random$2236();
	 //  @line: 15
	$i217 := $mulint(($i015), ($i116));
	 //  @line: 15
	 call $freshlocal0 := List$List$mk$2234(($i217));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $mulint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $leint(x : int, y : int) returns (__ret : int) {
if (x <= y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $shlref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqrefarray($param00 : [int]ref, $param11 : [int]ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftointarr($param00 : ref) returns (__ret : [int]int);



// procedure is generated by joogie.
function {:inline true} $ltref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $mulreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shrref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// <java.lang.String: int length()>
procedure int$java.lang.String$length$59(__this : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $shrreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $divreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $orint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftorealarr($param00 : ref) returns (__ret : [int]realVar);



// procedure is generated by joogie.
function {:inline true} $cmpref(x : ref, y : ref) returns (__ret : int) {
if ($ltref((x), (y)) == 1) then 1 else if ($eqref((x), (y)) == 1) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $realtoint($param00 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $geref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $orreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqint(x : int, y : int) returns (__ret : int) {
if (x == y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $ushrref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $modref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $eqintarray($param00 : [int]int, $param11 : [int]int) returns (__ret : int);



// <Random: void <init>()>
procedure void$Random$$la$init$ra$$2235(__this : ref)  requires ($neref((__this), ($null))==1);
 {
var r032 : ref;
Block39:
	r032 := __this;
	 assert ($neref((r032), ($null))==1);
	 //  @line: 1
	 call void$java.lang.Object$$la$init$ra$$28((r032));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $negRef($param00 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $lereal($param00 : realVar, $param11 : realVar) returns (__ret : int);



	 //  @line: 10
// <List: List getTail()>
procedure List$List$getTail$2233(__this : ref) returns (__ret : ref)  requires ($neref((__this), ($null))==1);
 {
var r023 : ref;
var $r124 : ref;
Block31:
	r023 := __this;
	 assert ($neref((r023), ($null))==1);
	 //  @line: 11
	$r124 := $HeapVar[r023, List$List$tail254];
	 //  @line: 11
	__ret := $r124;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $nereal(x : realVar, y : realVar) returns (__ret : int) {
if (x != y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $instanceof($param00 : ref, $param11 : classConst) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $xorref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $orref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $intarrtoref($param00 : [int]int) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $subreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shlreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negInt(x : int) returns (__ret : int) {
if (x == 0) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $gereal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// <java.lang.Object: void <init>()>
procedure void$java.lang.Object$$la$init$ra$$28(__this : ref);



	 //  @line: 5
// <Random: int random()>
procedure int$Random$random$2236() returns (__ret : int)
  modifies int$Random$index0, $stringSize;
 {
var $r133 : [int]ref;
var $i440 : int;
var $i541 : int;
var $i034 : int;
var $i135 : int;
var $i339 : int;
var $r237 : [int]ref;
var $i236 : int;
var r038 : ref;
	 //  @line: 6
Block40:
	 //  @line: 6
	$i135 := int$Random$index0;
	 //  @line: 6
	$r133 := java.lang.String$lp$$rp$$Random$args255;
	 //  @line: 6
	$i034 := $refArrSize[$r133[$arrSizeIdx]];
	 goto Block41;
	 //  @line: 6
Block41:
	 goto Block44, Block42;
	 //  @line: 6
Block44:
	 //  @line: 6
	 assume ($negInt(($ltint(($i135), ($i034))))==1);
	 //  @line: 7
	__ret := 0;
	 return;
	 //  @line: 6
Block42:
	 assume ($ltint(($i135), ($i034))==1);
	 goto Block43;
	 //  @line: 9
Block43:
	 //  @line: 9
	$r237 := java.lang.String$lp$$rp$$Random$args255;
	 goto Block45;
	 //  @line: 9
Block45:
	 //  @line: 9
	$i236 := int$Random$index0;
	 assert ($geint(($i236), (0))==1);
	 assert ($ltint(($i236), ($refArrSize[$r237[$arrSizeIdx]]))==1);
	 //  @line: 9
	r038 := $r237[$i236];
	 //  @line: 10
	$i339 := int$Random$index0;
	 //  @line: 10
	$i440 := $addint(($i339), (1));
	 //  @line: 10
	int$Random$index0 := $i440;
	$i541 := $stringSize[r038];
	 //  @line: 11
	__ret := $i541;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $eqref(x : ref, y : ref) returns (__ret : int) {
if (x == y) then 1 else 0
}


	 //  @line: 8
// <FibSLR: int doSum(List)>
procedure int$FibSLR$doSum$2230($param_0 : ref) returns (__ret : int) {
var r08 : ref;
var $i313 : int;
var $i110 : int;
var $r111 : ref;
var $i212 : int;
var $i09 : int;
Block23:
	r08 := $param_0;
	 goto Block24;
	 //  @line: 9
Block24:
	 goto Block25, Block27;
	 //  @line: 9
Block25:
	 assume ($neref((r08), ($null))==1);
	 goto Block26;
	 //  @line: 9
Block27:
	 //  @line: 9
	 assume ($negInt(($neref((r08), ($null))))==1);
	 //  @line: 10
	__ret := 1;
	 return;
	 //  @line: 10
Block26:
	 assert ($neref((r08), ($null))==1);
	 //  @line: 10
	$i09 := $HeapVar[r08, int$List$head0];
	 goto Block28;
	 //  @line: 10
Block28:
	 //  @line: 10
	 call $i110 := int$FibSLR$fib$2229(($i09));
	 assert ($neref((r08), ($null))==1);
	 //  @line: 10
	$r111 := $HeapVar[r08, List$List$tail254];
	 //  @line: 10
	 call $i212 := int$FibSLR$doSum$2230(($r111));
	 //  @line: 10
	$i313 := $addint(($i110), ($i212));
	 //  @line: 10
	__ret := $i313;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $cmpint(x : int, y : int) returns (__ret : int) {
if (x < y) then 1 else if (x == y) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $andint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $andreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



	 //  @line: 4
// <List: void <init>(int,List)>
procedure void$List$$la$init$ra$$2232(__this : ref, $param_0 : int, $param_1 : ref)
  modifies $HeapVar;
  requires ($neref((__this), ($null))==1);
 {
var r020 : ref;
var i021 : int;
var r122 : ref;
Block30:
	r020 := __this;
	i021 := $param_0;
	r122 := $param_1;
	 assert ($neref((r020), ($null))==1);
	 //  @line: 5
	 call void$java.lang.Object$$la$init$ra$$28((r020));
	 assert ($neref((r020), ($null))==1);
	 //  @line: 6
	$HeapVar[r020, int$List$head0] := i021;
	 assert ($neref((r020), ($null))==1);
	 //  @line: 7
	$HeapVar[r020, List$List$tail254] := r122;
	 return;
}


	 //  @line: 2
// <Random: void <clinit>()>
procedure void$Random$$la$clinit$ra$$2237()
  modifies int$Random$index0;
 {
	 //  @line: 3
Block46:
	 //  @line: 3
	int$Random$index0 := 0;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $shlint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $xorint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $subint(x : int, y : int) returns (__ret : int) {
(x - y)
}


