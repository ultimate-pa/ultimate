type ref;
type realVar;
type classConst;
// type Field x;
// var $HeapVar : <x>[ref, Field x]x;

const unique $null : ref ;
const unique $intArrNull : [int]int ;
const unique $realArrNull : [int]realVar ;
const unique $refArrNull : [int]ref ;

const unique $arrSizeIdx : int;
var $intArrSize : [int]int;
var $realArrSize : [realVar]int;
var $refArrSize : [ref]int;

var $stringSize : [ref]int;

//built-in axioms 
axiom ($arrSizeIdx == -1);

//note: new version doesn't put helpers in the perlude anymore//Prelude finished 





// procedure is generated by joogie.
function {:inline true} $neref(x : ref, y : ref) returns (__ret : int) {
if (x != y) then 1 else 0
}


// <java.lang.Object: void <init>()>
procedure void$java.lang.Object$$la$init$ra$$28(__this : ref);



// procedure is generated by joogie.
function {:inline true} $realarrtoref($param00 : [int]realVar) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $modreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $leref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $modint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $gtref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqrealarray($param00 : [int]realVar, $param11 : [int]realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $addint(x : int, y : int) returns (__ret : int) {
(x + y)
}


// procedure is generated by joogie.
function {:inline true} $subref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $inttoreal($param00 : int) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shrint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negReal($param00 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $refarrtoref($param00 : [int]ref) returns (__ret : ref);



	 //  @line: 3
// <ComplxStruc: void loop_aux(int,int)>
procedure void$ComplxStruc$loop_aux$2229($param_0 : int, $param_1 : int) {
var $i15 : int;
var i37 : int;
var i26 : int;
var i48 : int;
var $i04 : int;
Block17:
	i26 := $param_0;
	i37 := $param_1;
	 goto Block18;
	 //  @line: 4
Block18:
	 goto Block19, Block21;
	 //  @line: 4
Block19:
	 assume ($leint((i26), (0))==1);
	 goto Block20;
	 //  @line: 4
Block21:
	 //  @line: 4
	 assume ($negInt(($leint((i26), (0))))==1);
	 goto Block22;
	 //  @line: 25
Block20:
	 return;
	 //  @line: 5
Block22:
	 goto Block23, Block25;
	 //  @line: 5
Block23:
	 assume ($ltint((i26), (i37))==1);
	 goto Block24;
	 //  @line: 5
Block25:
	 //  @line: 5
	 assume ($negInt(($ltint((i26), (i37))))==1);
	 //  @line: 6
	i48 := $addint((i26), (-1));
	 goto Block26;
	 //  @line: 13
Block24:
	 goto Block37, Block39;
	 //  @line: 7
Block26:
	 goto Block27, Block29;
	 //  @line: 13
Block37:
	 assume ($leint((i26), (0))==1);
	 goto Block38;
	 //  @line: 13
Block39:
	 //  @line: 13
	 assume ($negInt(($leint((i26), (0))))==1);
	 goto Block40;
	 //  @line: 7
Block27:
	 assume ($geint((i37), (5))==1);
	 goto Block28;
	 //  @line: 7
Block29:
	 //  @line: 7
	 assume ($negInt(($geint((i37), (5))))==1);
	 //  @line: 8
	i37 := $addint((i37), (1));
	 //  @line: 9
	$i15 := $subint((i48), (i37));
	 goto Block30;
	 //  @line: 18
Block38:
	 //  @line: 18
	i48 := $addint((i26), (1));
	 goto Block48;
	 //  @line: 25
Block40:
	 goto Block41, Block42;
	 //  @line: 11
Block28:
	 //  @line: 11
	i37 := $addint((i37), (-1));
	 goto Block36;
	 //  @line: 9
Block30:
	 goto Block31, Block33;
	 //  @line: 19
Block48:
	 //  @line: 19
	$i04 := $mulint((i37), (2));
	 goto Block49;
	 //  @line: 25
Block41:
	 assume ($geint((i37), (0))==1);
	 goto Block38;
	 //  @line: 25
Block42:
	 //  @line: 25
	 assume ($negInt(($geint((i37), (0))))==1);
	 //  @line: 14
	i48 := $addint((i26), (-1));
	 goto Block43;
	 //  @line: 11
Block36:
	 goto Block34;
	 //  @line: 9
Block31:
	 assume ($leint(($i15), (2))==1);
	 goto Block32;
	 //  @line: 9
Block33:
	 //  @line: 9
	 assume ($negInt(($leint(($i15), (2))))==1);
	 //  @line: 25
	i48 := $addint((i48), (1));
	 goto Block34;
	 //  @line: 19
Block49:
	 goto Block50, Block52;
	 //  @line: 15
Block43:
	 goto Block46, Block44;
	 //  @line: 23
Block34:
	 //  @line: 23
	 call void$ComplxStruc$loop_aux$2229((i48), (i37));
	 goto Block20;
	 //  @line: 10
Block32:
	 //  @line: 10
	i37 := $addint((i37), (1));
	 goto Block35;
	 //  @line: 19
Block50:
	 assume ($leint(($i04), (i48))==1);
	 goto Block51;
	 //  @line: 19
Block52:
	 //  @line: 19
	 assume ($negInt(($leint(($i04), (i48))))==1);
	 //  @line: 25
	i37 := $addint((i37), (-1));
	 goto Block34;
	 //  @line: 15
Block46:
	 //  @line: 15
	 assume ($negInt(($geint((i37), (-1))))==1);
	 //  @line: 25
	i37 := $addint((i37), (1));
	 goto Block34;
	 //  @line: 15
Block44:
	 assume ($geint((i37), (-1))==1);
	 goto Block45;
	 //  @line: 10
Block35:
	 goto Block34;
	 //  @line: 20
Block51:
	 //  @line: 20
	i37 := $addint((i37), (1));
	 goto Block34;
	 //  @line: 16
Block45:
	 //  @line: 16
	i48 := $addint((i48), (1));
	 goto Block47;
	 //  @line: 16
Block47:
	 goto Block34;
}


// procedure is generated by joogie.
function {:inline true} $divref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $mulref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $neint(x : int, y : int) returns (__ret : int) {
if (x != y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $ltreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftorefarr($param00 : ref) returns (__ret : [int]ref);



// procedure is generated by joogie.
function {:inline true} $gtint(x : int, y : int) returns (__ret : int) {
if (x > y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $reftoint($param00 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $addref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $xorreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $andref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $cmpreal(x : realVar, y : realVar) returns (__ret : int) {
if ($ltreal((x), (y)) == 1) then 1 else if ($eqreal((x), (y)) == 1) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $addreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $gtreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqreal(x : realVar, y : realVar) returns (__ret : int) {
if (x == y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $ltint(x : int, y : int) returns (__ret : int) {
if (x < y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $newvariable($param00 : int) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $divint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $geint(x : int, y : int) returns (__ret : int) {
if (x >= y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $mulint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $leint(x : int, y : int) returns (__ret : int) {
if (x <= y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $shlref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqrefarray($param00 : [int]ref, $param11 : [int]ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftointarr($param00 : ref) returns (__ret : [int]int);



// procedure is generated by joogie.
function {:inline true} $ltref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $mulreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shrref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $shrreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $divreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $orint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftorealarr($param00 : ref) returns (__ret : [int]realVar);



// procedure is generated by joogie.
function {:inline true} $cmpref(x : ref, y : ref) returns (__ret : int) {
if ($ltref((x), (y)) == 1) then 1 else if ($eqref((x), (y)) == 1) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $realtoint($param00 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $geref($param00 : ref, $param11 : ref) returns (__ret : int);



	 //  @line: 31
// <ComplxStruc: void main(java.lang.String[])>
procedure void$ComplxStruc$main$2231($param_0 : [int]ref) {
var $i011 : int;
var r010 : [int]ref;
Block54:
	r010 := $param_0;
	 //  @line: 32
	$i011 := $refArrSize[r010[$arrSizeIdx]];
	 //  @line: 32
	 call void$ComplxStruc$loop$2230(($i011));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $orreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqint(x : int, y : int) returns (__ret : int) {
if (x == y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $ushrref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $modref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $eqintarray($param00 : [int]int, $param11 : [int]int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negRef($param00 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $lereal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $nereal(x : realVar, y : realVar) returns (__ret : int) {
if (x != y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $instanceof($param00 : ref, $param11 : classConst) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $xorref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $orref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $intarrtoref($param00 : [int]int) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $subreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shlreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negInt(x : int) returns (__ret : int) {
if (x == 0) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $gereal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqref(x : ref, y : ref) returns (__ret : int) {
if (x == y) then 1 else 0
}


// <ComplxStruc: void <init>()>
procedure void$ComplxStruc$$la$init$ra$$2228(__this : ref)  requires ($neref((__this), ($null))==1);
 {
var r01 : ref;
Block16:
	r01 := __this;
	 assert ($neref((r01), ($null))==1);
	 //  @line: 1
	 call void$java.lang.Object$$la$init$ra$$28((r01));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $cmpint(x : int, y : int) returns (__ret : int) {
if (x < y) then 1 else if (x == y) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $andint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $andreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



	 //  @line: 27
// <ComplxStruc: void loop(int)>
procedure void$ComplxStruc$loop$2230($param_0 : int) {
var i09 : int;
Block53:
	i09 := $param_0;
	 //  @line: 28
	 call void$ComplxStruc$loop_aux$2229((i09), (i09));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $shlint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $xorint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $subint(x : int, y : int) returns (__ret : int) {
(x - y)
}


