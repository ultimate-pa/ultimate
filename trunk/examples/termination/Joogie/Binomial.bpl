type ref;
type realVar;
type classConst;
// type Field x;
// var $HeapVar : <x>[ref, Field x]x;

const unique $null : ref ;
const unique $intArrNull : [int]int ;
const unique $realArrNull : [int]realVar ;
const unique $refArrNull : [int]ref ;

const unique $arrSizeIdx : int;
var $intArrSize : [int]int;
var $realArrSize : [realVar]int;
var $refArrSize : [ref]int;

var $stringSize : [ref]int;

//built-in axioms 
axiom ($arrSizeIdx == -1);

//note: new version doesn't put helpers in the perlude anymore//Prelude finished 





// procedure is generated by joogie.
function {:inline true} $neref(x : ref, y : ref) returns (__ret : int) {
if (x != y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $realarrtoref($param00 : [int]realVar) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $modreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $leref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $modint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $gtref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqrealarray($param00 : [int]realVar, $param11 : [int]realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $addint(x : int, y : int) returns (__ret : int) {
(x + y)
}


// procedure is generated by joogie.
function {:inline true} $subref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $inttoreal($param00 : int) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shrint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negReal($param00 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $refarrtoref($param00 : [int]ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $divref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $mulref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $neint(x : int, y : int) returns (__ret : int) {
if (x != y) then 1 else 0
}


// <java.lang.Object: void <init>()>
procedure void$java.lang.Object$$la$init$ra$$28(__this : ref);



// procedure is generated by joogie.
function {:inline true} $ltreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftorefarr($param00 : ref) returns (__ret : [int]ref);



// procedure is generated by joogie.
function {:inline true} $gtint(x : int, y : int) returns (__ret : int) {
if (x > y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $reftoint($param00 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $addref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $xorreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $andref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $cmpreal(x : realVar, y : realVar) returns (__ret : int) {
if ($ltreal((x), (y)) == 1) then 1 else if ($eqreal((x), (y)) == 1) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $addreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $gtreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqreal(x : realVar, y : realVar) returns (__ret : int) {
if (x == y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $ltint(x : int, y : int) returns (__ret : int) {
if (x < y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $newvariable($param00 : int) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $divint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $geint(x : int, y : int) returns (__ret : int) {
if (x >= y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $mulint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $leint(x : int, y : int) returns (__ret : int) {
if (x <= y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $shlref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqrefarray($param00 : [int]ref, $param11 : [int]ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftointarr($param00 : ref) returns (__ret : [int]int);



// procedure is generated by joogie.
function {:inline true} $ltref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $mulreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shrref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $shrreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $divreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $orint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftorealarr($param00 : ref) returns (__ret : [int]realVar);



// procedure is generated by joogie.
function {:inline true} $cmpref(x : ref, y : ref) returns (__ret : int) {
if ($ltref((x), (y)) == 1) then 1 else if ($eqref((x), (y)) == 1) then 0 else -1
}


// <Binomial: void <init>()>
procedure void$Binomial$$la$init$ra$$2228(__this : ref)  requires ($neref((__this), ($null))==1);
 {
var r01 : ref;
Block16:
	r01 := __this;
	 assert ($neref((r01), ($null))==1);
	 //  @line: 1
	 call void$java.lang.Object$$la$init$ra$$28((r01));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $realtoint($param00 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $geref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $orreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqint(x : int, y : int) returns (__ret : int) {
if (x == y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $ushrref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $modref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $eqintarray($param00 : [int]int, $param11 : [int]int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negRef($param00 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $lereal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $nereal(x : realVar, y : realVar) returns (__ret : int) {
if (x != y) then 1 else 0
}


	 //  @line: 8
// <Binomial: int binomialCoefficient(int,int)>
procedure int$Binomial$binomialCoefficient$2230($param_0 : int, $param_1 : int) returns (__ret : int) {
var $i39 : int;
var $i612 : int;
var $i713 : int;
var i18 : int;
var $i27 : int;
var $i511 : int;
var i06 : int;
var $i410 : int;
Block23:
	i06 := $param_0;
	i18 := $param_1;
	 //  @line: 9
	 call $i27 := int$Binomial$fact$2229((i06));
	 //  @line: 9
	 call $i39 := int$Binomial$fact$2229((i18));
	 //  @line: 9
	$i410 := $subint((i06), (i18));
	 //  @line: 9
	 call $i511 := int$Binomial$fact$2229(($i410));
	 //  @line: 9
	$i612 := $mulint(($i39), ($i511));
	 assert ($neint(($i612), (0))==1);
	 //  @line: 9
	$i713 := $divint(($i27), ($i612));
	 //  @line: 9
	__ret := $i713;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $instanceof($param00 : ref, $param11 : classConst) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $xorref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $orref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $intarrtoref($param00 : [int]int) returns (__ret : ref);



	 //  @line: 12
// <Binomial: void main(java.lang.String[])>
procedure void$Binomial$main$2231($param_0 : [int]ref) {
var i522 : int;
var $i118 : int;
var r015 : [int]ref;
var i421 : int;
var $i016 : int;

 //temp local variables 
var $freshlocal1 : int;
var $freshlocal0 : int;

Block24:
	r015 := $param_0;
	 //  @line: 13
	i421 := 0;
	 goto Block25;
	 //  @line: 13
Block25:
	 //  @line: 13
	$i016 := $refArrSize[r015[$arrSizeIdx]];
	 goto Block26;
	 //  @line: 13
Block26:
	 goto Block29, Block27;
	 //  @line: 13
Block29:
	 //  @line: 13
	 assume ($negInt(($gtint((i421), ($i016))))==1);
	 //  @line: 14
	i522 := 0;
	 goto Block30;
	 //  @line: 13
Block27:
	 assume ($gtint((i421), ($i016))==1);
	 goto Block28;
	 //  @line: 14
Block30:
	 //  @line: 14
	$i118 := $refArrSize[r015[$arrSizeIdx]];
	 goto Block31;
	 //  @line: 17
Block28:
	 return;
	 //  @line: 14
Block31:
	 goto Block34, Block32;
	 //  @line: 14
Block34:
	 //  @line: 14
	 assume ($negInt(($gtint((i522), ($i118))))==1);
	 goto Block35;
	 //  @line: 14
Block32:
	 assume ($gtint((i522), ($i118))==1);
	 goto Block33;
	 //  @line: 15
Block35:
	 goto Block36, Block38;
	 //  @line: 13
Block33:
	 //  @line: 13
	i421 := $addint((i421), (1));
	 goto Block41;
	 //  @line: 15
Block36:
	 assume ($gtint((i522), (i421))==1);
	 goto Block37;
	 //  @line: 15
Block38:
	 //  @line: 15
	 assume ($negInt(($gtint((i522), (i421))))==1);
	 //  @line: 14
	 call $freshlocal0 := int$Binomial$binomialCoefficient$2230((i421), (i522));
	 goto Block39;
	 //  @line: 13
Block41:
	 goto Block25;
	 //  @line: 16
Block37:
	 //  @line: 16
	 call $freshlocal1 := int$Binomial$binomialCoefficient$2230((i522), (i421));
	 goto Block39;
	 //  @line: 14
Block39:
	 //  @line: 14
	i522 := $addint((i522), (1));
	 goto Block40;
	 //  @line: 14
Block40:
	 goto Block30;
}


// procedure is generated by joogie.
function {:inline true} $subreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shlreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negInt(x : int) returns (__ret : int) {
if (x == 0) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $gereal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqref(x : ref, y : ref) returns (__ret : int) {
if (x == y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $cmpint(x : int, y : int) returns (__ret : int) {
if (x < y) then 1 else if (x == y) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $andint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $andreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $shlint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $xorint($param00 : int, $param11 : int) returns (__ret : int);



	 //  @line: 3
// <Binomial: int fact(int)>
procedure int$Binomial$fact$2229($param_0 : int) returns (__ret : int) {
var $i13 : int;
var $i24 : int;
var $i35 : int;
var i02 : int;
Block17:
	i02 := $param_0;
	 goto Block18;
	 //  @line: 4
Block18:
	 goto Block21, Block19;
	 //  @line: 4
Block21:
	 //  @line: 4
	 assume ($negInt(($gtint((i02), (0))))==1);
	 //  @line: 5
	__ret := 1;
	 return;
	 //  @line: 4
Block19:
	 assume ($gtint((i02), (0))==1);
	 goto Block20;
	 //  @line: 5
Block20:
	 //  @line: 5
	$i13 := $subint((i02), (1));
	 goto Block22;
	 //  @line: 5
Block22:
	 //  @line: 5
	 call $i24 := int$Binomial$fact$2229(($i13));
	 //  @line: 5
	$i35 := $mulint((i02), ($i24));
	 //  @line: 5
	__ret := $i35;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $subint(x : int, y : int) returns (__ret : int) {
(x - y)
}


