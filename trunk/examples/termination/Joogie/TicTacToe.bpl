type ref;
type realVar;
type classConst;
// type Field x;
// var $HeapVar : <x>[ref, Field x]x;

const unique $null : ref ;
const unique $intArrNull : [int]int ;
const unique $realArrNull : [int]realVar ;
const unique $refArrNull : [int]ref ;

const unique $arrSizeIdx : int;
var $intArrSize : [int]int;
var $realArrSize : [realVar]int;
var $refArrSize : [ref]int;

var $stringSize : [ref]int;

//built-in axioms 
axiom ($arrSizeIdx == -1);

//note: new version doesn't put helpers in the perlude anymore//Prelude finished 



var $fresh5 : int;
var Configuration$LinkedList$head257 : Field ref;
var int$Configuration$maxDepth0 : Field int;
var $fresh3 : int;
var Player$lp$$rp$$lp$$rp$$Configuration$board254 : Field [int][int]ref;
var boolean$Configuration$max0 : Field int;
var int$LinkedList$len0 : Field int;
var char$Player$symbol0 : Field int;
var $fresh16 : int;
var int$Configuration$MINUS_INFINITY0 : Field int;
var $fresh6 : int;
var $fresh1 : [int]ref;
var $fresh9 : int;
var $fresh14 : int;
var $fresh2 : int;
var $fresh15 : int;
var Player$Configuration$player255 : Field ref;
var $fresh1 : [int][int]ref;
var Player$Player$opponent256 : Field ref;
var LinkedList$LinkedList$tail258 : Field ref;
var $fresh13 : int;
var $fresh7 : int;
var $fresh4 : int;
var $fresh2 : int;
var int$Configuration$INFINITY0 : Field int;
var $fresh8 : int;
var $fresh10 : int;
var $fresh12 : int;
var int$Configuration$nbMoves0 : Field int;
var $fresh11 : int;


// procedure is generated by joogie.
function {:inline true} $realarrtoref($param00 : [int]realVar) returns (__ret : ref);



	 //  @line: 3
// <TicTacToe: void main(java.lang.String[])>
procedure void$TicTacToe$main$2258($param_0 : [int]ref) {
var r2304 : ref;
var r0307 : [int]ref;
var $r4301 : ref;
var r3306 : ref;
var $z0312 : int;
var i0310 : int;
var r1302 : ref;
var $r5303 : ref;
var i2313 : int;
var $r6305 : ref;
var $i1308 : int;
Block360:
	r0307 := $param_0;
	 //  @line: 4
	$r4301 := $newvariable((361));
	 assume ($neref(($newvariable((361))), ($null))==1);
	 assert ($neref(($r4301), ($null))==1);
	 //  @line: 4
	 call void$Player$$la$init$ra$$2244(($r4301), (88));
	 //  @line: 4
	r1302 := $r4301;
	 //  @line: 5
	$r5303 := $newvariable((362));
	 assume ($neref(($newvariable((362))), ($null))==1);
	 assert ($neref(($r5303), ($null))==1);
	 //  @line: 5
	 call void$Player$$la$init$ra$$2244(($r5303), (79));
	 //  @line: 5
	r2304 := $r5303;
	 assert ($neref((r1302), ($null))==1);
	 //  @line: 7
	 call void$Player$setOpponent$2246((r1302), (r2304));
	 assert ($neref((r2304), ($null))==1);
	 //  @line: 8
	 call void$Player$setOpponent$2246((r2304), (r1302));
	 //  @line: 10
	$r6305 := $newvariable((363));
	 assume ($neref(($newvariable((363))), ($null))==1);
	 assert ($neref(($r6305), ($null))==1);
	 //  @line: 10
	 call void$Configuration$$la$init$ra$$2228(($r6305));
	 //  @line: 10
	r3306 := $r6305;
	 //  @line: 11
	$i1308 := $refArrSize[r0307[$arrSizeIdx]];
	 assert ($neref((r3306), ($null))==1);
	 //  @line: 11
	 call void$Configuration$init$2229((r3306), ($i1308), (r1302));
	 //  @line: 13
	 call i0310 := int$Game$maxMoves$2255();
	 //  @line: 14
	i2313 := 0;
	 goto Block364;
	 //  @line: 14
Block364:
	 goto Block365, Block367;
	 //  @line: 14
Block365:
	 assume ($geint((i2313), (i0310))==1);
	 goto Block366;
	 //  @line: 14
Block367:
	 //  @line: 14
	 assume ($negInt(($geint((i2313), (i0310))))==1);
	 assert ($neref((r3306), ($null))==1);
	 //  @line: 15
	 call void$Configuration$play$2231((r3306));
	 assert ($neref((r3306), ($null))==1);
	 //  @line: 17
	 call $z0312 := boolean$Configuration$win$2234((r3306));
	 goto Block368;
	 //  @line: 20
Block366:
	 return;
	 //  @line: 17
Block368:
	 goto Block371, Block369;
	 //  @line: 17
Block371:
	 //  @line: 17
	 assume ($negInt(($eqint(($z0312), (0))))==1);
	 goto Block366;
	 //  @line: 17
Block369:
	 assume ($eqint(($z0312), (0))==1);
	 goto Block370;
	 //  @line: 18
Block370:
	 assert ($neref((r3306), ($null))==1);
	 //  @line: 18
	 call void$Configuration$changePlayer$2232((r3306));
	 goto Block372;
	 //  @line: 14
Block372:
	 //  @line: 14
	i2313 := $addint((i2313), (1));
	 goto Block364;
}


// procedure is generated by joogie.
function {:inline true} $leref($param00 : ref, $param11 : ref) returns (__ret : int);



// <java.lang.Object: void <init>()>
procedure void$java.lang.Object$$la$init$ra$$28(__this : ref);



	 //  @line: 74
// <Configuration: void changePlayer()>
procedure void$Configuration$changePlayer$2232(__this : ref)
  modifies $HeapVar;
  requires ($neref((__this), ($null))==1);
 {
var r050 : ref;
var $r151 : ref;
var $r252 : ref;
Block58:
	r050 := __this;
	 assert ($neref((r050), ($null))==1);
	 //  @line: 75
	$r151 := $HeapVar[r050, Player$Configuration$player255];
	 assert ($neref(($r151), ($null))==1);
	 //  @line: 75
	 call $r252 := Player$Player$getOpponent$2245(($r151));
	 assert ($neref((r050), ($null))==1);
	 //  @line: 75
	$HeapVar[r050, Player$Configuration$player255] := $r252;
	 return;
}


// <Game: void <init>()>
procedure void$Game$$la$init$ra$$2251(__this : ref)  requires ($neref((__this), ($null))==1);
 {
var r0289 : ref;
Block348:
	r0289 := __this;
	 assert ($neref((r0289), ($null))==1);
	 //  @line: 1
	 call void$java.lang.Object$$la$init$ra$$28((r0289));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $addint(x : int, y : int) returns (__ret : int) {
(x + y)
}


// procedure is generated by joogie.
function {:inline true} $subref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $inttoreal($param00 : int) returns (__ret : realVar);



	 //  @line: 15
// <Game: int maxMoves()>
procedure int$Game$maxMoves$2255() returns (__ret : int) {
var $i2292 : int;
var $i1291 : int;
var $i0290 : int;
	 //  @line: 16
Block352:
	 //  @line: 16
	 call $i0290 := int$Game$nbRows$2252();
	 //  @line: 16
	 call $i1291 := int$Game$nbColumns$2253();
	 //  @line: 16
	$i2292 := $mulint(($i0290), ($i1291));
	 //  @line: 16
	__ret := $i2292;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $divref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $mulref($param00 : ref, $param11 : ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $neint(x : int, y : int) returns (__ret : int) {
if (x != y) then 1 else 0
}


	 //  @line: 114
// <Configuration: boolean lose()>
procedure boolean$Configuration$lose$2235(__this : ref) returns (__ret : int)  requires ($neref((__this), ($null))==1);
 {
var $r2110 : ref;
var $r1109 : ref;
var r0108 : ref;
var $z0111 : int;
Block150:
	r0108 := __this;
	 assert ($neref((r0108), ($null))==1);
	 //  @line: 115
	$r1109 := $HeapVar[r0108, Player$Configuration$player255];
	 assert ($neref(($r1109), ($null))==1);
	 //  @line: 115
	 call $r2110 := Player$Player$getOpponent$2245(($r1109));
	 assert ($neref((r0108), ($null))==1);
	 //  @line: 115
	 call $z0111 := boolean$Configuration$winningConfiguration$2233((r0108), ($r2110));
	 //  @line: 115
	__ret := $z0111;
	 return;
}


	 //  @line: 122
// <Configuration: LinkedList possibleMoves()>
procedure LinkedList$Configuration$possibleMoves$2237(__this : ref) returns (__ret : ref)
  modifies $HeapVar;
  requires ($neref((__this), ($null))==1);
 {
var r0121 : ref;
var $r4128 : ref;
var $i5132 : int;
var $r6134 : ref;
var r1125 : ref;
var $r5133 : [int][int]ref;
var $r8136 : ref;
var r9138 : ref;
var i7140 : int;
var $i0118 : int;
var $r2122 : [int][int]ref;
var $r7135 : [int]ref;
var $z1126 : int;
var $r3127 : ref;
var $i4131 : int;
var i6139 : int;
var $i1120 : int;
var $i2129 : int;
var $z0123 : int;
var $z2141 : int;
var $i3130 : int;
Block157:
	r0121 := __this;
	 //  @line: 123
	r9138 := $null;
	 //  @line: 126
	i6139 := 0;
	 goto Block158;
	 //  @line: 126
Block158:
	 //  @line: 126
	 call $i0118 := int$Game$nbRows$2252();
	 goto Block159;
	 //  @line: 126
Block159:
	 goto Block162, Block160;
	 //  @line: 126
Block162:
	 //  @line: 126
	 assume ($negInt(($geint((i6139), ($i0118))))==1);
	 //  @line: 127
	i7140 := 0;
	 goto Block163;
	 //  @line: 126
Block160:
	 assume ($geint((i6139), ($i0118))==1);
	 goto Block161;
	 //  @line: 127
Block163:
	 //  @line: 127
	 call $i1120 := int$Game$nbColumns$2253();
	 goto Block164;
	 //  @line: 138
Block161:
	 //  @line: 138
	__ret := r9138;
	 return;
	 //  @line: 127
Block164:
	 goto Block167, Block165;
	 //  @line: 127
Block167:
	 //  @line: 127
	 assume ($negInt(($geint((i7140), ($i1120))))==1);
	 assert ($neref((r0121), ($null))==1);
	 //  @line: 128
	$r2122 := $HeapVar[r0121, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 //  @line: 128
	 call $z0123 := boolean$Game$isPossibleMove$2256(($r2122), (i6139), (i7140));
	 goto Block168;
	 //  @line: 127
Block165:
	 assume ($geint((i7140), ($i1120))==1);
	 goto Block166;
	 //  @line: 128
Block168:
	 goto Block169, Block171;
	 //  @line: 126
Block166:
	 //  @line: 126
	i6139 := $addint((i6139), (1));
	 goto Block179;
	 //  @line: 128
Block169:
	 assume ($eqint(($z0123), (0))==1);
	 goto Block170;
	 //  @line: 128
Block171:
	 //  @line: 128
	 assume ($negInt(($eqint(($z0123), (0))))==1);
	 assert ($neref((r0121), ($null))==1);
	 //  @line: 129
	 call r1125 := Configuration$Configuration$copy$2230((r0121));
	 assert ($neref((r0121), ($null))==1);
	 //  @line: 130
	$z1126 := $HeapVar[r0121, boolean$Configuration$max0];
	 goto Block172;
	 //  @line: 126
Block179:
	 goto Block158;
	 //  @line: 127
Block170:
	 //  @line: 127
	i7140 := $addint((i7140), (1));
	 goto Block163;
	 //  @line: 130
Block172:
	 goto Block173, Block175;
	 //  @line: 130
Block173:
	 assume ($neint(($z1126), (0))==1);
	 goto Block174;
	 //  @line: 130
Block175:
	 //  @line: 130
	 assume ($negInt(($neint(($z1126), (0))))==1);
	 //  @line: 127
	$z2141 := 1;
	 goto Block176;
	 //  @line: 127
Block174:
	 //  @line: 127
	$z2141 := 0;
	 goto Block176;
	 //  @line: 130
Block176:
	 assert ($neref((r1125), ($null))==1);
	 //  @line: 130
	$HeapVar[r1125, boolean$Configuration$max0] := $z2141;
	 goto Block177;
	 //  @line: 131
Block177:
	 assert ($neref((r0121), ($null))==1);
	 //  @line: 131
	$r3127 := $HeapVar[r0121, Player$Configuration$player255];
	 assert ($neref(($r3127), ($null))==1);
	 //  @line: 131
	 call $r4128 := Player$Player$getOpponent$2245(($r3127));
	 assert ($neref((r1125), ($null))==1);
	 //  @line: 131
	$HeapVar[r1125, Player$Configuration$player255] := $r4128;
	 assert ($neref((r0121), ($null))==1);
	 //  @line: 132
	$i2129 := $HeapVar[r0121, int$Configuration$maxDepth0];
	 //  @line: 132
	$i3130 := $subint(($i2129), (1));
	 assert ($neref((r1125), ($null))==1);
	 //  @line: 132
	$HeapVar[r1125, int$Configuration$maxDepth0] := $i3130;
	 assert ($neref((r0121), ($null))==1);
	 //  @line: 133
	$i4131 := $HeapVar[r0121, int$Configuration$nbMoves0];
	 //  @line: 133
	$i5132 := $addint(($i4131), (1));
	 assert ($neref((r1125), ($null))==1);
	 //  @line: 133
	$HeapVar[r1125, int$Configuration$nbMoves0] := $i5132;
	 assert ($neref((r1125), ($null))==1);
	 //  @line: 134
	$r5133 := $HeapVar[r1125, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 assert ($geint((i6139), (0))==1);
	 assert ($ltint((i6139), ($fresh11))==1);
	 //  @line: 134
	$r7135 := $r5133[i6139];
	 assert ($neref((r0121), ($null))==1);
	 //  @line: 134
	$r6134 := $HeapVar[r0121, Player$Configuration$player255];
	 assert ($geint((i7140), (0))==1);
	 assert ($ltint((i7140), ($refArrSize[$r7135[$arrSizeIdx]]))==1);
	 //  @line: 134
	$r7135[i7140] := $r6134;
	 //  @line: 135
	$r8136 := $newvariable((178));
	 assume ($neref(($newvariable((178))), ($null))==1);
	 assert ($neref(($r8136), ($null))==1);
	 //  @line: 135
	 call void$LinkedList$$la$init$ra$$2247(($r8136), (r1125), (r9138));
	 //  @line: 135
	r9138 := $r8136;
	 goto Block170;
}


// procedure is generated by joogie.
function {:inline true} $reftorefarr($param00 : ref) returns (__ret : [int]ref);



// procedure is generated by joogie.
function {:inline true} $reftoint($param00 : ref) returns (__ret : int);



	 //  @line: 66
// <Configuration: void play()>
procedure void$Configuration$play$2231(__this : ref)
  modifies $HeapVar;
  requires ($neref((__this), ($null))==1);
 {
var $r546 : ref;
var i448 : int;
var $i038 : int;
var $r647 : [int]ref;
var i549 : int;
var $r344 : [int][int]ref;
var $r243 : [int][int]ref;
var $r445 : [int]ref;
var $i240 : int;
var r034 : ref;
var $i139 : int;
var r136 : ref;
var $i342 : int;
Block45:
	r034 := __this;
	 assert ($neref((r034), ($null))==1);
	 //  @line: 67
	 call r136 := Configuration$Configuration$bestChoice$2241((r034));
	 //  @line: 68
	i448 := 0;
	 goto Block46;
	 //  @line: 68
Block46:
	 //  @line: 68
	 call $i038 := int$Game$nbRows$2252();
	 goto Block47;
	 //  @line: 68
Block47:
	 goto Block48, Block50;
	 //  @line: 68
Block48:
	 assume ($geint((i448), ($i038))==1);
	 goto Block49;
	 //  @line: 68
Block50:
	 //  @line: 68
	 assume ($negInt(($geint((i448), ($i038))))==1);
	 //  @line: 69
	i549 := 0;
	 goto Block51;
	 //  @line: 71
Block49:
	 assert ($neref((r034), ($null))==1);
	 //  @line: 71
	$i139 := $HeapVar[r034, int$Configuration$nbMoves0];
	 goto Block57;
	 //  @line: 69
Block51:
	 //  @line: 69
	 call $i342 := int$Game$nbColumns$2253();
	 goto Block52;
	 //  @line: 71
Block57:
	 //  @line: 71
	$i240 := $addint(($i139), (1));
	 assert ($neref((r034), ($null))==1);
	 //  @line: 71
	$HeapVar[r034, int$Configuration$nbMoves0] := $i240;
	 return;
	 //  @line: 69
Block52:
	 goto Block53, Block55;
	 //  @line: 69
Block53:
	 assume ($geint((i549), ($i342))==1);
	 goto Block54;
	 //  @line: 69
Block55:
	 //  @line: 69
	 assume ($negInt(($geint((i549), ($i342))))==1);
	 assert ($neref((r034), ($null))==1);
	 //  @line: 70
	$r243 := $HeapVar[r034, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 assert ($geint((i448), (0))==1);
	 assert ($ltint((i448), ($fresh5))==1);
	 //  @line: 70
	$r647 := $r243[i448];
	 assert ($neref((r136), ($null))==1);
	 //  @line: 70
	$r344 := $HeapVar[r136, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 assert ($geint((i448), (0))==1);
	 assert ($ltint((i448), ($fresh6))==1);
	 //  @line: 70
	$r445 := $r344[i448];
	 assert ($geint((i549), (0))==1);
	 assert ($ltint((i549), ($refArrSize[$r445[$arrSizeIdx]]))==1);
	 //  @line: 70
	$r546 := $r445[i549];
	 assert ($geint((i549), (0))==1);
	 assert ($ltint((i549), ($refArrSize[$r647[$arrSizeIdx]]))==1);
	 //  @line: 70
	$r647[i549] := $r546;
	 //  @line: 69
	i549 := $addint((i549), (1));
	 goto Block51;
	 //  @line: 68
Block54:
	 //  @line: 68
	i448 := $addint((i448), (1));
	 goto Block56;
	 //  @line: 68
Block56:
	 goto Block46;
}


// procedure is generated by joogie.
function {:inline true} $xorreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $andref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $cmpreal(x : realVar, y : realVar) returns (__ret : int) {
if ($ltreal((x), (y)) == 1) then 1 else if ($eqreal((x), (y)) == 1) then 0 else -1
}


	 //  @line: 15
// <Configuration: void init(int,Player)>
procedure void$Configuration$init$2229(__this : ref, $param_0 : int, $param_1 : ref)
  modifies $HeapVar;
  requires ($neref((__this), ($null))==1);
 {
var $i16 : int;
var r07 : ref;
var i09 : int;
var i314 : int;
var r18 : ref;
var i415 : int;
var $i211 : int;
var $r212 : [int][int]ref;
var $r313 : [int]ref;
Block18:
	r07 := __this;
	i09 := $param_0;
	r18 := $param_1;
	 //  @line: 16
	i314 := 0;
	 goto Block19;
	 //  @line: 16
Block19:
	 //  @line: 16
	 call $i16 := int$Game$nbRows$2252();
	 goto Block20;
	 //  @line: 16
Block20:
	 goto Block23, Block21;
	 //  @line: 16
Block23:
	 //  @line: 16
	 assume ($negInt(($geint((i314), ($i16))))==1);
	 //  @line: 17
	i415 := 0;
	 goto Block24;
	 //  @line: 16
Block21:
	 assume ($geint((i314), ($i16))==1);
	 goto Block22;
	 //  @line: 17
Block24:
	 //  @line: 17
	 call $i211 := int$Game$nbColumns$2253();
	 goto Block25;
	 //  @line: 19
Block22:
	 assert ($neref((r07), ($null))==1);
	 //  @line: 19
	$HeapVar[r07, boolean$Configuration$max0] := 1;
	 goto Block30;
	 //  @line: 17
Block25:
	 goto Block26, Block28;
	 //  @line: 20
Block30:
	 assert ($neref((r07), ($null))==1);
	 //  @line: 20
	$HeapVar[r07, Player$Configuration$player255] := r18;
	 assert ($neref((r07), ($null))==1);
	 //  @line: 21
	$HeapVar[r07, int$Configuration$maxDepth0] := i09;
	 assert ($neref((r07), ($null))==1);
	 //  @line: 22
	$HeapVar[r07, int$Configuration$nbMoves0] := 0;
	 return;
	 //  @line: 17
Block26:
	 assume ($geint((i415), ($i211))==1);
	 goto Block27;
	 //  @line: 17
Block28:
	 //  @line: 17
	 assume ($negInt(($geint((i415), ($i211))))==1);
	 assert ($neref((r07), ($null))==1);
	 //  @line: 18
	$r212 := $HeapVar[r07, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 assert ($geint((i314), (0))==1);
	 assert ($ltint((i314), ($fresh2))==1);
	 //  @line: 18
	$r313 := $r212[i314];
	 assert ($geint((i415), (0))==1);
	 assert ($ltint((i415), ($refArrSize[$r313[$arrSizeIdx]]))==1);
	 //  @line: 18
	$r313[i415] := $null;
	 //  @line: 17
	i415 := $addint((i415), (1));
	 goto Block24;
	 //  @line: 16
Block27:
	 //  @line: 16
	i314 := $addint((i314), (1));
	 goto Block29;
	 //  @line: 16
Block29:
	 goto Block19;
}


	 //  @line: 205
// <Configuration: int openRows(Player)>
procedure int$Configuration$openRows$2242(__this : ref, $param_0 : ref) returns (__ret : int)  requires ($neref((__this), ($null))==1);
 {
var $i23247 : int;
var $i20242 : int;
var $i14232 : int;
var $i9222 : int;
var $i5215 : int;
var $r1228 : [int][int]ref;
var r13251 : ref;
var $i11225 : int;
var $r5237 : [int]ref;
var i1216 : int;
var $i15233 : int;
var i24253 : int;
var i0213 : int;
var $i16234 : int;
var r0226 : ref;
var i27256 : int;
var $r4235 : [int][int]ref;
var $i19240 : int;
var $i8221 : int;
var $i6218 : int;
var i26255 : int;
var i25254 : int;
var $i10224 : int;
var $i3212 : int;
var $i21245 : int;
var $r12250 : ref;
var $r6238 : ref;
var $i12227 : int;
var $r9244 : ref;
var $i18239 : int;
var $r10248 : [int][int]ref;
var $i2211 : int;
var r14252 : ref;
var $i4214 : int;
var $r3231 : ref;
var $r11249 : [int]ref;
var $i22246 : int;
var i29258 : int;
var $r2230 : [int]ref;
var i28257 : int;
var $r7241 : [int][int]ref;
var $i13229 : int;
var $i17236 : int;
var $r8243 : [int]ref;
var i30259 : int;
var $i7220 : int;
Block245:
	r0226 := __this;
	r13251 := $param_0;
	 assert ($neref((r13251), ($null))==1);
	 //  @line: 206
	 call r14252 := Player$Player$getOpponent$2245((r13251));
	 //  @line: 207
	i24253 := 0;
	 //  @line: 208
	 call $i2211 := int$Game$nbRows$2252();
	 //  @line: 208
	 call $i3212 := int$Game$nbWin$2254();
	 //  @line: 208
	i0213 := $subint(($i2211), ($i3212));
	 //  @line: 209
	 call $i4214 := int$Game$nbColumns$2253();
	 //  @line: 209
	 call $i5215 := int$Game$nbWin$2254();
	 //  @line: 209
	i1216 := $subint(($i4214), ($i5215));
	 //  @line: 210
	i25254 := 0;
	 goto Block246;
	 //  @line: 210
Block246:
	 //  @line: 210
	 call $i6218 := int$Game$nbRows$2252();
	 goto Block247;
	 //  @line: 210
Block247:
	 goto Block248, Block250;
	 //  @line: 210
Block248:
	 assume ($geint((i25254), ($i6218))==1);
	 goto Block249;
	 //  @line: 210
Block250:
	 //  @line: 210
	 assume ($negInt(($geint((i25254), ($i6218))))==1);
	 //  @line: 211
	i26255 := 0;
	 goto Block251;
	 //  @line: 233
Block249:
	 //  @line: 233
	__ret := i24253;
	 return;
	 //  @line: 211
Block251:
	 //  @line: 211
	 call $i7220 := int$Game$nbColumns$2253();
	 goto Block252;
	 //  @line: 211
Block252:
	 goto Block255, Block253;
	 //  @line: 211
Block255:
	 //  @line: 211
	 assume ($negInt(($geint((i26255), ($i7220))))==1);
	 goto Block256;
	 //  @line: 211
Block253:
	 assume ($geint((i26255), ($i7220))==1);
	 goto Block254;
	 //  @line: 212
Block256:
	 goto Block257, Block259;
	 //  @line: 210
Block254:
	 //  @line: 210
	i25254 := $addint((i25254), (1));
	 goto Block328;
	 //  @line: 212
Block257:
	 assume ($gtint((i25254), (i0213))==1);
	 goto Block258;
	 //  @line: 212
Block259:
	 //  @line: 212
	 assume ($negInt(($gtint((i25254), (i0213))))==1);
	 //  @line: 213
	i27256 := 0;
	 goto Block260;
	 //  @line: 210
Block328:
	 goto Block246;
	 //  @line: 217
Block258:
	 goto Block275, Block273;
	 //  @line: 213
Block260:
	 //  @line: 213
	 call $i21245 := int$Game$nbWin$2254();
	 goto Block261;
	 //  @line: 217
Block275:
	 //  @line: 217
	 assume ($negInt(($gtint((i26255), (i1216))))==1);
	 //  @line: 218
	i28257 := 0;
	 goto Block276;
	 //  @line: 217
Block273:
	 assume ($gtint((i26255), (i1216))==1);
	 goto Block274;
	 //  @line: 213
Block261:
	 goto Block262, Block264;
	 //  @line: 218
Block276:
	 //  @line: 218
	 call $i18239 := int$Game$nbWin$2254();
	 goto Block277;
	 //  @line: 222
Block274:
	 goto Block291, Block289;
	 //  @line: 213
Block262:
	 assume ($geint((i27256), ($i21245))==1);
	 goto Block263;
	 //  @line: 213
Block264:
	 //  @line: 213
	 assume ($negInt(($geint((i27256), ($i21245))))==1);
	 assert ($neref((r0226), ($null))==1);
	 //  @line: 214
	$r10248 := $HeapVar[r0226, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 //  @line: 214
	$i23247 := $addint((i25254), (i27256));
	 assert ($geint(($i23247), (0))==1);
	 assert ($ltint(($i23247), ($fresh12))==1);
	 //  @line: 214
	$r11249 := $r10248[$i23247];
	 assert ($geint((i26255), (0))==1);
	 assert ($ltint((i26255), ($refArrSize[$r11249[$arrSizeIdx]]))==1);
	 //  @line: 214
	$r12250 := $r11249[i26255];
	 goto Block265;
	 //  @line: 218
Block277:
	 goto Block278, Block280;
	 //  @line: 222
Block291:
	 //  @line: 222
	 assume ($negInt(($gtint((i25254), (i0213))))==1);
	 goto Block292;
	 //  @line: 222
Block289:
	 assume ($gtint((i25254), (i0213))==1);
	 goto Block290;
	 //  @line: 215
Block263:
	 //  @line: 215
	 call $i22246 := int$Game$nbWin$2254();
	 goto Block270;
	 //  @line: 214
Block265:
	 goto Block268, Block266;
	 //  @line: 218
Block278:
	 assume ($geint((i28257), ($i18239))==1);
	 goto Block279;
	 //  @line: 218
Block280:
	 //  @line: 218
	 assume ($negInt(($geint((i28257), ($i18239))))==1);
	 assert ($neref((r0226), ($null))==1);
	 //  @line: 219
	$r7241 := $HeapVar[r0226, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 assert ($geint((i25254), (0))==1);
	 assert ($ltint((i25254), ($fresh13))==1);
	 //  @line: 219
	$r8243 := $r7241[i25254];
	 //  @line: 219
	$i20242 := $addint((i26255), (i28257));
	 assert ($geint(($i20242), (0))==1);
	 assert ($ltint(($i20242), ($refArrSize[$r8243[$arrSizeIdx]]))==1);
	 //  @line: 219
	$r9244 := $r8243[$i20242];
	 goto Block281;
	 //  @line: 230
Block292:
	 goto Block293, Block294;
	 //  @line: 227
Block290:
	 //  @line: 227
	 call $i8221 := int$Game$nbWin$2254();
	 //  @line: 227
	$i9222 := $subint(($i8221), (1));
	 goto Block308;
	 //  @line: 215
Block270:
	 goto Block271, Block272;
	 //  @line: 214
Block268:
	 //  @line: 214
	 assume ($negInt(($neref(($r12250), (r14252))))==1);
	 goto Block263;
	 //  @line: 214
Block266:
	 assume ($neref(($r12250), (r14252))==1);
	 goto Block267;
	 //  @line: 220
Block279:
	 //  @line: 220
	 call $i19240 := int$Game$nbWin$2254();
	 goto Block286;
	 //  @line: 219
Block281:
	 goto Block282, Block284;
	 //  @line: 230
Block293:
	 assume ($gtint((i26255), (i1216))==1);
	 goto Block290;
	 //  @line: 230
Block294:
	 //  @line: 230
	 assume ($negInt(($gtint((i26255), (i1216))))==1);
	 //  @line: 223
	i29258 := 0;
	 goto Block295;
	 //  @line: 227
Block308:
	 goto Block309, Block311;
	 //  @line: 215
Block271:
	 assume ($neint((i27256), ($i22246))==1);
	 goto Block258;
	 //  @line: 215
Block272:
	 //  @line: 215
	 assume ($negInt(($neint((i27256), ($i22246))))==1);
	 //  @line: 217
	i24253 := $addint((i24253), (1));
	 goto Block258;
	 //  @line: 213
Block267:
	 //  @line: 213
	i27256 := $addint((i27256), (1));
	 goto Block269;
	 //  @line: 220
Block286:
	 goto Block288, Block287;
	 //  @line: 219
Block282:
	 assume ($neref(($r9244), (r14252))==1);
	 goto Block283;
	 //  @line: 219
Block284:
	 //  @line: 219
	 assume ($negInt(($neref(($r9244), (r14252))))==1);
	 goto Block279;
	 //  @line: 223
Block295:
	 //  @line: 223
	 call $i14232 := int$Game$nbWin$2254();
	 goto Block296;
	 //  @line: 227
Block309:
	 assume ($gtint(($i9222), (i25254))==1);
	 goto Block310;
	 //  @line: 227
Block311:
	 //  @line: 227
	 assume ($negInt(($gtint(($i9222), (i25254))))==1);
	 goto Block312;
	 //  @line: 213
Block269:
	 goto Block260;
	 //  @line: 220
Block288:
	 //  @line: 220
	 assume ($negInt(($neint((i28257), ($i19240))))==1);
	 //  @line: 222
	i24253 := $addint((i24253), (1));
	 goto Block274;
	 //  @line: 220
Block287:
	 assume ($neint((i28257), ($i19240))==1);
	 goto Block274;
	 //  @line: 218
Block283:
	 //  @line: 218
	i28257 := $addint((i28257), (1));
	 goto Block285;
	 //  @line: 223
Block296:
	 goto Block299, Block297;
	 //  @line: 211
Block310:
	 //  @line: 211
	i26255 := $addint((i26255), (1));
	 goto Block251;
	 //  @line: 211
Block312:
	 goto Block314, Block313;
	 //  @line: 218
Block285:
	 goto Block276;
	 //  @line: 223
Block299:
	 //  @line: 223
	 assume ($negInt(($geint((i29258), ($i14232))))==1);
	 assert ($neref((r0226), ($null))==1);
	 //  @line: 224
	$r4235 := $HeapVar[r0226, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 //  @line: 224
	$i16234 := $addint((i25254), (i29258));
	 assert ($geint(($i16234), (0))==1);
	 assert ($ltint(($i16234), ($fresh14))==1);
	 //  @line: 224
	$r5237 := $r4235[$i16234];
	 //  @line: 224
	$i17236 := $addint((i26255), (i29258));
	 assert ($geint(($i17236), (0))==1);
	 assert ($ltint(($i17236), ($refArrSize[$r5237[$arrSizeIdx]]))==1);
	 //  @line: 224
	$r6238 := $r5237[$i17236];
	 goto Block300;
	 //  @line: 223
Block297:
	 assume ($geint((i29258), ($i14232))==1);
	 goto Block298;
	 //  @line: 211
Block314:
	 //  @line: 211
	 assume ($negInt(($gtint((i26255), (i1216))))==1);
	 //  @line: 228
	i30259 := 0;
	 goto Block315;
	 //  @line: 211
Block313:
	 assume ($gtint((i26255), (i1216))==1);
	 goto Block310;
	 //  @line: 224
Block300:
	 goto Block303, Block301;
	 //  @line: 225
Block298:
	 //  @line: 225
	 call $i15233 := int$Game$nbWin$2254();
	 goto Block305;
	 //  @line: 228
Block315:
	 //  @line: 228
	 call $i10224 := int$Game$nbWin$2254();
	 goto Block316;
	 //  @line: 224
Block303:
	 //  @line: 224
	 assume ($negInt(($neref(($r6238), (r14252))))==1);
	 goto Block298;
	 //  @line: 224
Block301:
	 assume ($neref(($r6238), (r14252))==1);
	 goto Block302;
	 //  @line: 225
Block305:
	 goto Block306, Block307;
	 //  @line: 228
Block316:
	 goto Block319, Block317;
	 //  @line: 223
Block302:
	 //  @line: 223
	i29258 := $addint((i29258), (1));
	 goto Block304;
	 //  @line: 225
Block306:
	 assume ($neint((i29258), ($i15233))==1);
	 goto Block290;
	 //  @line: 225
Block307:
	 //  @line: 225
	 assume ($negInt(($neint((i29258), ($i15233))))==1);
	 //  @line: 227
	i24253 := $addint((i24253), (1));
	 goto Block290;
	 //  @line: 228
Block319:
	 //  @line: 228
	 assume ($negInt(($geint((i30259), ($i10224))))==1);
	 assert ($neref((r0226), ($null))==1);
	 //  @line: 229
	$r1228 := $HeapVar[r0226, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 //  @line: 229
	$i12227 := $subint((i25254), (i30259));
	 assert ($geint(($i12227), (0))==1);
	 assert ($ltint(($i12227), ($fresh15))==1);
	 //  @line: 229
	$r2230 := $r1228[$i12227];
	 //  @line: 229
	$i13229 := $addint((i26255), (i30259));
	 assert ($geint(($i13229), (0))==1);
	 assert ($ltint(($i13229), ($refArrSize[$r2230[$arrSizeIdx]]))==1);
	 //  @line: 229
	$r3231 := $r2230[$i13229];
	 goto Block320;
	 //  @line: 228
Block317:
	 assume ($geint((i30259), ($i10224))==1);
	 goto Block318;
	 //  @line: 223
Block304:
	 goto Block295;
	 //  @line: 229
Block320:
	 goto Block323, Block321;
	 //  @line: 230
Block318:
	 //  @line: 230
	 call $i11225 := int$Game$nbWin$2254();
	 goto Block325;
	 //  @line: 229
Block323:
	 //  @line: 229
	 assume ($negInt(($neref(($r3231), (r14252))))==1);
	 goto Block318;
	 //  @line: 229
Block321:
	 assume ($neref(($r3231), (r14252))==1);
	 goto Block322;
	 //  @line: 230
Block325:
	 goto Block326, Block327;
	 //  @line: 228
Block322:
	 //  @line: 228
	i30259 := $addint((i30259), (1));
	 goto Block324;
	 //  @line: 230
Block326:
	 assume ($neint((i30259), ($i11225))==1);
	 goto Block310;
	 //  @line: 230
Block327:
	 //  @line: 230
	 assume ($negInt(($neint((i30259), ($i11225))))==1);
	 //  @line: 211
	i24253 := $addint((i24253), (1));
	 goto Block310;
	 //  @line: 228
Block324:
	 goto Block315;
}


// procedure is generated by joogie.
function {:inline true} $ltint(x : int, y : int) returns (__ret : int) {
if (x < y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $mulint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqrefarray($param00 : [int]ref, $param11 : [int]ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ltref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $mulreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $shrref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $cmpref(x : ref, y : ref) returns (__ret : int) {
if ($ltref((x), (y)) == 1) then 1 else if ($eqref((x), (y)) == 1) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $geref($param00 : ref, $param11 : ref) returns (__ret : int);



	 //  @line: 25
// <Configuration: Configuration copy()>
procedure Configuration$Configuration$copy$2230(__this : ref) returns (__ret : ref)
  modifies $HeapVar;
  requires ($neref((__this), ($null))==1);
 {
var $r528 : [int][int]ref;
var r117 : ref;
var i533 : int;
var $i326 : int;
var $i224 : int;
var $z021 : int;
var r020 : ref;
var $r427 : [int][int]ref;
var $r730 : ref;
var $r629 : [int]ref;
var $r216 : ref;
var i432 : int;
var $r831 : [int]ref;
var $r322 : ref;
var $i123 : int;
var $i019 : int;
Block31:
	r020 := __this;
	 //  @line: 26
	$r216 := $newvariable((32));
	 assume ($neref(($newvariable((32))), ($null))==1);
	 assert ($neref(($r216), ($null))==1);
	 //  @line: 26
	 call void$Configuration$$la$init$ra$$2228(($r216));
	 //  @line: 26
	r117 := $r216;
	 //  @line: 27
	i432 := 0;
	 goto Block33;
	 //  @line: 27
Block33:
	 //  @line: 27
	 call $i019 := int$Game$nbRows$2252();
	 goto Block34;
	 //  @line: 27
Block34:
	 goto Block35, Block37;
	 //  @line: 27
Block35:
	 assume ($geint((i432), ($i019))==1);
	 goto Block36;
	 //  @line: 27
Block37:
	 //  @line: 27
	 assume ($negInt(($geint((i432), ($i019))))==1);
	 //  @line: 28
	i533 := 0;
	 goto Block38;
	 //  @line: 30
Block36:
	 assert ($neref((r020), ($null))==1);
	 //  @line: 30
	$z021 := $HeapVar[r020, boolean$Configuration$max0];
	 goto Block44;
	 //  @line: 28
Block38:
	 //  @line: 28
	 call $i326 := int$Game$nbColumns$2253();
	 goto Block39;
	 //  @line: 30
Block44:
	 assert ($neref((r117), ($null))==1);
	 //  @line: 30
	$HeapVar[r117, boolean$Configuration$max0] := $z021;
	 assert ($neref((r020), ($null))==1);
	 //  @line: 31
	$r322 := $HeapVar[r020, Player$Configuration$player255];
	 assert ($neref((r117), ($null))==1);
	 //  @line: 31
	$HeapVar[r117, Player$Configuration$player255] := $r322;
	 assert ($neref((r020), ($null))==1);
	 //  @line: 32
	$i123 := $HeapVar[r020, int$Configuration$maxDepth0];
	 assert ($neref((r117), ($null))==1);
	 //  @line: 32
	$HeapVar[r117, int$Configuration$maxDepth0] := $i123;
	 assert ($neref((r020), ($null))==1);
	 //  @line: 33
	$i224 := $HeapVar[r020, int$Configuration$nbMoves0];
	 assert ($neref((r117), ($null))==1);
	 //  @line: 33
	$HeapVar[r117, int$Configuration$nbMoves0] := $i224;
	 //  @line: 34
	__ret := r117;
	 return;
	 //  @line: 28
Block39:
	 goto Block42, Block40;
	 //  @line: 28
Block42:
	 //  @line: 28
	 assume ($negInt(($geint((i533), ($i326))))==1);
	 assert ($neref((r117), ($null))==1);
	 //  @line: 29
	$r427 := $HeapVar[r117, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 assert ($geint((i432), (0))==1);
	 assert ($ltint((i432), ($fresh3))==1);
	 //  @line: 29
	$r831 := $r427[i432];
	 assert ($neref((r020), ($null))==1);
	 //  @line: 29
	$r528 := $HeapVar[r020, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 assert ($geint((i432), (0))==1);
	 assert ($ltint((i432), ($fresh4))==1);
	 //  @line: 29
	$r629 := $r528[i432];
	 assert ($geint((i533), (0))==1);
	 assert ($ltint((i533), ($refArrSize[$r629[$arrSizeIdx]]))==1);
	 //  @line: 29
	$r730 := $r629[i533];
	 assert ($geint((i533), (0))==1);
	 assert ($ltint((i533), ($refArrSize[$r831[$arrSizeIdx]]))==1);
	 //  @line: 29
	$r831[i533] := $r730;
	 //  @line: 28
	i533 := $addint((i533), (1));
	 goto Block38;
	 //  @line: 28
Block40:
	 assume ($geint((i533), ($i326))==1);
	 goto Block41;
	 //  @line: 27
Block41:
	 //  @line: 27
	i432 := $addint((i432), (1));
	 goto Block43;
	 //  @line: 27
Block43:
	 goto Block33;
}


// procedure is generated by joogie.
function {:inline true} $eqint(x : int, y : int) returns (__ret : int) {
if (x == y) then 1 else 0
}


	 //  @line: 3
// <Game: int nbRows()>
procedure int$Game$nbRows$2252() returns (__ret : int) {
	 //  @line: 4
Block349:
	 //  @line: 4
	__ret := 3;
	 return;
}


	 //  @line: 146
// <Configuration: int max(int,int)>
procedure int$Configuration$max$2239(__this : ref, $param_0 : int, $param_1 : int) returns (__ret : int)  requires ($neref((__this), ($null))==1);
 {
var i0146 : int;
var i1145 : int;
var r0147 : ref;
Block185:
	r0147 := __this;
	i0146 := $param_0;
	i1145 := $param_1;
	 goto Block186;
	 //  @line: 147
Block186:
	 goto Block189, Block187;
	 //  @line: 147
Block189:
	 //  @line: 147
	 assume ($negInt(($gtint((i1145), (i0146))))==1);
	 //  @line: 148
	__ret := i0146;
	 return;
	 //  @line: 147
Block187:
	 assume ($gtint((i1145), (i0146))==1);
	 goto Block188;
	 //  @line: 148
Block188:
	 //  @line: 148
	__ret := i1145;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $eqintarray($param00 : [int]int, $param11 : [int]int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $lereal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $instanceof($param00 : ref, $param11 : classConst) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $xorref($param00 : ref, $param11 : ref) returns (__ret : int);



	 //  @line: 152
// <Configuration: int alphabeta(int,int,int)>
procedure int$Configuration$alphabeta$2240(__this : ref, $param_0 : int, $param_1 : int, $param_2 : int) returns (__ret : int)  requires ($neref((__this), ($null))==1);
 {
var $z3177 : int;
var $r2170 : ref;
var i11182 : int;
var i13184 : int;
var i1162 : int;
var i0161 : int;
var i15186 : int;
var r0148 : ref;
var i2150 : int;
var $z0149 : int;
var $i6172 : int;
var $i4164 : int;
var $i5171 : int;
var $i7176 : int;
var $r1160 : ref;
var i12183 : int;
var r3180 : ref;
var $z2156 : int;
var $i3163 : int;
var i14185 : int;
var i8178 : int;
var $z1151 : int;
var i9179 : int;
var i10181 : int;
Block190:
	r0148 := __this;
	i0161 := $param_0;
	i1162 := $param_1;
	i2150 := $param_2;
	 assert ($neref((r0148), ($null))==1);
	 //  @line: 153
	 call $z0149 := boolean$Configuration$lose$2235((r0148));
	 goto Block191;
	 //  @line: 153
Block191:
	 goto Block194, Block192;
	 //  @line: 153
Block194:
	 //  @line: 153
	 assume ($negInt(($eqint(($z0149), (0))))==1);
	 assert ($neref((r0148), ($null))==1);
	 //  @line: 154
	$z3177 := $HeapVar[r0148, boolean$Configuration$max0];
	 goto Block195;
	 //  @line: 153
Block192:
	 assume ($eqint(($z0149), (0))==1);
	 goto Block193;
	 //  @line: 154
Block195:
	 goto Block196, Block198;
	 //  @line: 156
Block193:
	 goto Block199, Block201;
	 //  @line: 154
Block196:
	 assume ($eqint(($z3177), (0))==1);
	 goto Block197;
	 //  @line: 154
Block198:
	 //  @line: 154
	 assume ($negInt(($eqint(($z3177), (0))))==1);
	 //  @line: 155
	__ret := -10000;
	 return;
	 //  @line: 156
Block199:
	 assume ($gtint((i2150), (0))==1);
	 goto Block200;
	 //  @line: 156
Block201:
	 //  @line: 156
	 assume ($negInt(($gtint((i2150), (0))))==1);
	 goto Block202;
	 //  @line: 155
Block197:
	 //  @line: 155
	__ret := 10000;
	 return;
	 //  @line: 157
Block200:
	 assert ($neref((r0148), ($null))==1);
	 //  @line: 157
	 call $z1151 := boolean$Configuration$isMaxDepth$2236((r0148));
	 goto Block203;
	 //  @line: 171
Block202:
	 //  @line: 171
	__ret := 0;
	 return;
	 //  @line: 157
Block203:
	 goto Block204, Block206;
	 //  @line: 157
Block204:
	 assume ($eqint(($z1151), (0))==1);
	 goto Block205;
	 //  @line: 157
Block206:
	 //  @line: 157
	 assume ($negInt(($eqint(($z1151), (0))))==1);
	 assert ($neref((r0148), ($null))==1);
	 //  @line: 171
	 call $i7176 := int$Configuration$partialEvaluation$2243((r0148));
	 //  @line: 171
	__ret := $i7176;
	 return;
	 //  @line: 160
Block205:
	 //  @line: 160
	i8178 := -10000;
	 goto Block207;
	 //  @line: 160
Block207:
	 //  @line: 160
	i9179 := 10000;
	 assert ($neref((r0148), ($null))==1);
	 //  @line: 161
	 call r3180 := LinkedList$Configuration$possibleMoves$2237((r0148));
	 assert ($neref((r0148), ($null))==1);
	 //  @line: 163
	$z2156 := $HeapVar[r0148, boolean$Configuration$max0];
	 goto Block208;
	 //  @line: 163
Block208:
	 goto Block211, Block209;
	 //  @line: 163
Block211:
	 //  @line: 163
	 assume ($negInt(($eqint(($z2156), (0))))==1);
	 assert ($neref((r3180), ($null))==1);
	 //  @line: 164
	 call i10181 := int$LinkedList$length$2250((r3180));
	 //  @line: 165
	i11182 := 0;
	 goto Block212;
	 //  @line: 163
Block209:
	 assume ($eqint(($z2156), (0))==1);
	 goto Block210;
	 //  @line: 165
Block212:
	 goto Block215, Block213;
	 //  @line: 174
Block210:
	 assert ($neref((r3180), ($null))==1);
	 //  @line: 174
	 call i13184 := int$LinkedList$length$2250((r3180));
	 goto Block221;
	 //  @line: 165
Block215:
	 //  @line: 165
	 assume ($negInt(($geint((i11182), (i10181))))==1);
	 assert ($neref((r3180), ($null))==1);
	 //  @line: 166
	 call $r2170 := Configuration$LinkedList$getFirst$2248((r3180));
	 assert ($neref((r0148), ($null))==1);
	 //  @line: 166
	 call $i5171 := int$Configuration$max$2239((r0148), (i0161), (i8178));
	 //  @line: 166
	$i6172 := $subint((i2150), (1));
	 assert ($neref(($r2170), ($null))==1);
	 //  @line: 166
	 call i12183 := int$Configuration$alphabeta$2240(($r2170), ($i5171), (i1162), ($i6172));
	 assert ($neref((r0148), ($null))==1);
	 //  @line: 167
	 call i8178 := int$Configuration$max$2239((r0148), (i12183), (i8178));
	 goto Block216;
	 //  @line: 165
Block213:
	 assume ($geint((i11182), (i10181))==1);
	 goto Block214;
	 //  @line: 175
Block221:
	 //  @line: 175
	i14185 := 0;
	 goto Block222;
	 //  @line: 168
Block216:
	 goto Block217, Block219;
	 //  @line: 171
Block214:
	 //  @line: 171
	__ret := i8178;
	 return;
	 //  @line: 175
Block222:
	 goto Block225, Block223;
	 //  @line: 168
Block217:
	 assume ($ltint((i8178), (i1162))==1);
	 goto Block218;
	 //  @line: 168
Block219:
	 //  @line: 168
	 assume ($negInt(($ltint((i8178), (i1162))))==1);
	 goto Block214;
	 //  @line: 175
Block225:
	 //  @line: 175
	 assume ($negInt(($geint((i14185), (i13184))))==1);
	 assert ($neref((r3180), ($null))==1);
	 //  @line: 176
	 call $r1160 := Configuration$LinkedList$getFirst$2248((r3180));
	 assert ($neref((r0148), ($null))==1);
	 //  @line: 176
	 call $i3163 := int$Configuration$min$2238((r0148), (i1162), (i9179));
	 //  @line: 176
	$i4164 := $subint((i2150), (1));
	 assert ($neref(($r1160), ($null))==1);
	 //  @line: 176
	 call i15186 := int$Configuration$alphabeta$2240(($r1160), (i0161), ($i3163), ($i4164));
	 assert ($neref((r0148), ($null))==1);
	 //  @line: 177
	 call i9179 := int$Configuration$min$2238((r0148), (i15186), (i9179));
	 goto Block226;
	 //  @line: 175
Block223:
	 assume ($geint((i14185), (i13184))==1);
	 goto Block224;
	 //  @line: 169
Block218:
	 assert ($neref((r3180), ($null))==1);
	 //  @line: 169
	 call r3180 := LinkedList$LinkedList$getTail$2249((r3180));
	 goto Block220;
	 //  @line: 178
Block226:
	 goto Block229, Block227;
	 //  @line: 181
Block224:
	 //  @line: 181
	__ret := i9179;
	 return;
	 //  @line: 165
Block220:
	 //  @line: 165
	i11182 := $addint((i11182), (1));
	 goto Block212;
	 //  @line: 178
Block229:
	 //  @line: 178
	 assume ($negInt(($ltint((i0161), (i9179))))==1);
	 goto Block224;
	 //  @line: 178
Block227:
	 assume ($ltint((i0161), (i9179))==1);
	 goto Block228;
	 //  @line: 179
Block228:
	 assert ($neref((r3180), ($null))==1);
	 //  @line: 179
	 call r3180 := LinkedList$LinkedList$getTail$2249((r3180));
	 goto Block230;
	 //  @line: 175
Block230:
	 //  @line: 175
	i14185 := $addint((i14185), (1));
	 goto Block222;
}


	 //  @line: 110
// <Configuration: boolean win()>
procedure boolean$Configuration$win$2234(__this : ref) returns (__ret : int)  requires ($neref((__this), ($null))==1);
 {
var r0105 : ref;
var $z0107 : int;
var $r1106 : ref;
Block149:
	r0105 := __this;
	 assert ($neref((r0105), ($null))==1);
	 //  @line: 111
	$r1106 := $HeapVar[r0105, Player$Configuration$player255];
	 assert ($neref((r0105), ($null))==1);
	 //  @line: 111
	 call $z0107 := boolean$Configuration$winningConfiguration$2233((r0105), ($r1106));
	 //  @line: 111
	__ret := $z0107;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $intarrtoref($param00 : [int]int) returns (__ret : ref);



	 //  @line: 118
// <Configuration: boolean isMaxDepth()>
procedure boolean$Configuration$isMaxDepth$2236(__this : ref) returns (__ret : int)  requires ($neref((__this), ($null))==1);
 {
var $z0115 : int;
var $i0113 : int;
var r0112 : ref;
Block151:
	r0112 := __this;
	 assert ($neref((r0112), ($null))==1);
	 //  @line: 119
	$i0113 := $HeapVar[r0112, int$Configuration$maxDepth0];
	 goto Block152;
	 //  @line: 119
Block152:
	 goto Block153, Block155;
	 //  @line: 119
Block153:
	 assume ($neint(($i0113), (0))==1);
	 goto Block154;
	 //  @line: 119
Block155:
	 //  @line: 119
	 assume ($negInt(($neint(($i0113), (0))))==1);
	 //  @line: 119
	$z0115 := 1;
	 goto Block156;
	 //  @line: 119
Block154:
	 //  @line: 119
	$z0115 := 0;
	 goto Block156;
	 //  @line: 119
Block156:
	 //  @line: 119
	__ret := $z0115;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $subreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $gereal($param00 : realVar, $param11 : realVar) returns (__ret : int);



	 //  @line: 5
// <LinkedList: void <init>(Configuration,LinkedList)>
procedure void$LinkedList$$la$init$ra$$2247(__this : ref, $param_0 : ref, $param_1 : ref)
  modifies $HeapVar;
  requires ($neref((__this), ($null))==1);
 {
var $i0281 : int;
var $i1282 : int;
var r0277 : ref;
var r2279 : ref;
var r1278 : ref;
Block338:
	r0277 := __this;
	r1278 := $param_0;
	r2279 := $param_1;
	 assert ($neref((r0277), ($null))==1);
	 //  @line: 6
	 call void$java.lang.Object$$la$init$ra$$28((r0277));
	 assert ($neref((r0277), ($null))==1);
	 //  @line: 7
	$HeapVar[r0277, Configuration$LinkedList$head257] := r1278;
	 assert ($neref((r0277), ($null))==1);
	 //  @line: 8
	$HeapVar[r0277, LinkedList$LinkedList$tail258] := r2279;
	 goto Block339;
	 //  @line: 9
Block339:
	 goto Block340, Block342;
	 //  @line: 9
Block340:
	 assume ($neref((r2279), ($null))==1);
	 goto Block341;
	 //  @line: 9
Block342:
	 //  @line: 9
	 assume ($negInt(($neref((r2279), ($null))))==1);
	 assert ($neref((r0277), ($null))==1);
	 //  @line: 11
	$HeapVar[r0277, int$LinkedList$len0] := 1;
	 goto Block343;
	 //  @line: 10
Block341:
	 assert ($neref((r2279), ($null))==1);
	 //  @line: 10
	 call $i0281 := int$LinkedList$length$2250((r2279));
	 goto Block344;
	 //  @line: 11
Block343:
	 return;
	 //  @line: 10
Block344:
	 //  @line: 10
	$i1282 := $addint((1), ($i0281));
	 assert ($neref((r0277), ($null))==1);
	 //  @line: 10
	$HeapVar[r0277, int$LinkedList$len0] := $i1282;
	 goto Block343;
}


	 //  @line: 13
// <LinkedList: Configuration getFirst()>
procedure Configuration$LinkedList$getFirst$2248(__this : ref) returns (__ret : ref)  requires ($neref((__this), ($null))==1);
 {
var r0283 : ref;
var $r1284 : ref;
Block345:
	r0283 := __this;
	 assert ($neref((r0283), ($null))==1);
	 //  @line: 14
	$r1284 := $HeapVar[r0283, Configuration$LinkedList$head257];
	 //  @line: 14
	__ret := $r1284;
	 return;
}


	 //  @line: 17
// <LinkedList: LinkedList getTail()>
procedure LinkedList$LinkedList$getTail$2249(__this : ref) returns (__ret : ref)  requires ($neref((__this), ($null))==1);
 {
var $r1286 : ref;
var r0285 : ref;
Block346:
	r0285 := __this;
	 assert ($neref((r0285), ($null))==1);
	 //  @line: 18
	$r1286 := $HeapVar[r0285, LinkedList$LinkedList$tail258];
	 //  @line: 18
	__ret := $r1286;
	 return;
}


// <TicTacToe: void <init>()>
procedure void$TicTacToe$$la$init$ra$$2257(__this : ref)  requires ($neref((__this), ($null))==1);
 {
var r0300 : ref;
Block359:
	r0300 := __this;
	 assert ($neref((r0300), ($null))==1);
	 //  @line: 1
	 call void$java.lang.Object$$la$init$ra$$28((r0300));
	 return;
}


// procedure is generated by joogie.
function {:inline true} $cmpint(x : int, y : int) returns (__ret : int) {
if (x < y) then 1 else if (x == y) then 0 else -1
}


// procedure is generated by joogie.
function {:inline true} $andint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $shlint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $xorint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $subint(x : int, y : int) returns (__ret : int) {
(x - y)
}


// procedure is generated by joogie.
function {:inline true} $neref(x : ref, y : ref) returns (__ret : int) {
if (x != y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $modreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



	 //  @line: 13
// <Player: void setOpponent(Player)>
procedure void$Player$setOpponent$2246(__this : ref, $param_0 : ref)
  modifies $HeapVar;
  requires ($neref((__this), ($null))==1);
 {
var r0275 : ref;
var r1276 : ref;
Block337:
	r0275 := __this;
	r1276 := $param_0;
	 assert ($neref((r0275), ($null))==1);
	 //  @line: 14
	$HeapVar[r0275, Player$Player$opponent256] := r1276;
	 return;
}


	 //  @line: 78
// <Configuration: boolean winningConfiguration(Player)>
procedure boolean$Configuration$winningConfiguration$2233(__this : ref, $param_0 : ref) returns (__ret : int)  requires ($neref((__this), ($null))==1);
 {
var i29100 : int;
var $r1398 : ref;
var $r685 : [int]ref;
var $i457 : int;
var $r377 : [int]ref;
var $i356 : int;
var $i659 : int;
var r178 : ref;
var $i558 : int;
var i32103 : int;
var $i2490 : int;
var $i254 : int;
var $i963 : int;
var $i2593 : int;
var $r275 : [int][int]ref;
var $i1776 : int;
var r053 : ref;
var $i2082 : int;
var $r479 : ref;
var $r786 : ref;
var $i1168 : int;
var $i1370 : int;
var $i2287 : int;
var i2899 : int;
var $r889 : [int][int]ref;
var $i2694 : int;
var $i1573 : int;
var i061 : int;
var $i1066 : int;
var $r1196 : [int][int]ref;
var $i1981 : int;
var i33104 : int;
var $i760 : int;
var $r991 : [int]ref;
var $r583 : [int][int]ref;
var $i1880 : int;
var $i862 : int;
var $i1674 : int;
var $i2184 : int;
var i164 : int;
var $i1472 : int;
var i30101 : int;
var i31102 : int;
var $i1269 : int;
var $i2795 : int;
var $r1297 : [int]ref;
var $r1092 : ref;
var $i2388 : int;
Block59:
	r053 := __this;
	r178 := $param_0;
	 assert ($neref((r053), ($null))==1);
	 //  @line: 79
	$i254 := $HeapVar[r053, int$Configuration$nbMoves0];
	 //  @line: 79
	 call $i356 := int$Game$nbWin$2254();
	 //  @line: 79
	$i457 := $mulint((2), ($i356));
	 //  @line: 79
	$i558 := $subint(($i457), (1));
	 goto Block60;
	 //  @line: 79
Block60:
	 goto Block61, Block63;
	 //  @line: 79
Block61:
	 assume ($ltint(($i254), ($i558))==1);
	 goto Block62;
	 //  @line: 79
Block63:
	 //  @line: 79
	 assume ($negInt(($ltint(($i254), ($i558))))==1);
	 //  @line: 81
	 call $i659 := int$Game$nbRows$2252();
	 //  @line: 81
	 call $i760 := int$Game$nbWin$2254();
	 //  @line: 81
	i061 := $subint(($i659), ($i760));
	 //  @line: 82
	 call $i862 := int$Game$nbColumns$2253();
	 //  @line: 82
	 call $i963 := int$Game$nbWin$2254();
	 //  @line: 82
	i164 := $subint(($i862), ($i963));
	 //  @line: 83
	i2899 := 0;
	 goto Block64;
	 //  @line: 107
Block62:
	 //  @line: 107
	__ret := 0;
	 return;
	 //  @line: 83
Block64:
	 //  @line: 83
	 call $i1066 := int$Game$nbRows$2252();
	 goto Block65;
	 //  @line: 83
Block65:
	 goto Block66, Block67;
	 //  @line: 83
Block66:
	 assume ($geint((i2899), ($i1066))==1);
	 goto Block62;
	 //  @line: 83
Block67:
	 //  @line: 83
	 assume ($negInt(($geint((i2899), ($i1066))))==1);
	 //  @line: 84
	i29100 := 0;
	 goto Block68;
	 //  @line: 84
Block68:
	 //  @line: 84
	 call $i1168 := int$Game$nbColumns$2253();
	 goto Block69;
	 //  @line: 84
Block69:
	 goto Block70, Block72;
	 //  @line: 84
Block70:
	 assume ($geint((i29100), ($i1168))==1);
	 goto Block71;
	 //  @line: 84
Block72:
	 //  @line: 84
	 assume ($negInt(($geint((i29100), ($i1168))))==1);
	 goto Block73;
	 //  @line: 83
Block71:
	 //  @line: 83
	i2899 := $addint((i2899), (1));
	 goto Block148;
	 //  @line: 85
Block73:
	 goto Block76, Block74;
	 //  @line: 83
Block148:
	 goto Block64;
	 //  @line: 85
Block76:
	 //  @line: 85
	 assume ($negInt(($gtint((i2899), (i061))))==1);
	 //  @line: 86
	i30101 := 0;
	 goto Block77;
	 //  @line: 85
Block74:
	 assume ($gtint((i2899), (i061))==1);
	 goto Block75;
	 //  @line: 86
Block77:
	 //  @line: 86
	 call $i2593 := int$Game$nbWin$2254();
	 goto Block78;
	 //  @line: 90
Block75:
	 goto Block92, Block90;
	 //  @line: 86
Block78:
	 goto Block81, Block79;
	 //  @line: 90
Block92:
	 //  @line: 90
	 assume ($negInt(($gtint((i29100), (i164))))==1);
	 goto Block93;
	 //  @line: 90
Block90:
	 assume ($gtint((i29100), (i164))==1);
	 goto Block91;
	 //  @line: 86
Block81:
	 //  @line: 86
	 assume ($negInt(($geint((i30101), ($i2593))))==1);
	 assert ($neref((r053), ($null))==1);
	 //  @line: 87
	$r1196 := $HeapVar[r053, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 //  @line: 87
	$i2795 := $addint((i2899), (i30101));
	 assert ($geint(($i2795), (0))==1);
	 assert ($ltint(($i2795), ($fresh7))==1);
	 //  @line: 87
	$r1297 := $r1196[$i2795];
	 assert ($geint((i29100), (0))==1);
	 assert ($ltint((i29100), ($refArrSize[$r1297[$arrSizeIdx]]))==1);
	 //  @line: 87
	$r1398 := $r1297[i29100];
	 goto Block82;
	 //  @line: 86
Block79:
	 assume ($geint((i30101), ($i2593))==1);
	 goto Block80;
	 //  @line: 91
Block93:
	 //  @line: 91
	i31102 := 0;
	 goto Block94;
	 //  @line: 95
Block91:
	 goto Block109, Block107;
	 //  @line: 87
Block82:
	 goto Block85, Block83;
	 //  @line: 88
Block80:
	 //  @line: 88
	 call $i2694 := int$Game$nbWin$2254();
	 goto Block87;
	 //  @line: 91
Block94:
	 //  @line: 91
	 call $i2287 := int$Game$nbWin$2254();
	 goto Block95;
	 //  @line: 95
Block109:
	 //  @line: 95
	 assume ($negInt(($gtint((i2899), (i061))))==1);
	 goto Block110;
	 //  @line: 95
Block107:
	 assume ($gtint((i2899), (i061))==1);
	 goto Block108;
	 //  @line: 87
Block85:
	 //  @line: 87
	 assume ($negInt(($eqref(($r1398), (r178))))==1);
	 goto Block80;
	 //  @line: 87
Block83:
	 assume ($eqref(($r1398), (r178))==1);
	 goto Block84;
	 //  @line: 88
Block87:
	 goto Block88, Block89;
	 //  @line: 91
Block95:
	 goto Block96, Block98;
	 //  @line: 103
Block110:
	 goto Block112, Block111;
	 //  @line: 100
Block108:
	 //  @line: 100
	 call $i1269 := int$Game$nbWin$2254();
	 goto Block126;
	 //  @line: 86
Block84:
	 //  @line: 86
	i30101 := $addint((i30101), (1));
	 goto Block86;
	 //  @line: 88
Block88:
	 assume ($neint((i30101), ($i2694))==1);
	 goto Block75;
	 //  @line: 88
Block89:
	 //  @line: 88
	 assume ($negInt(($neint((i30101), ($i2694))))==1);
	 //  @line: 90
	__ret := 1;
	 return;
	 //  @line: 91
Block96:
	 assume ($geint((i31102), ($i2287))==1);
	 goto Block97;
	 //  @line: 91
Block98:
	 //  @line: 91
	 assume ($negInt(($geint((i31102), ($i2287))))==1);
	 assert ($neref((r053), ($null))==1);
	 //  @line: 92
	$r889 := $HeapVar[r053, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 assert ($geint((i2899), (0))==1);
	 assert ($ltint((i2899), ($fresh8))==1);
	 //  @line: 92
	$r991 := $r889[i2899];
	 //  @line: 92
	$i2490 := $addint((i29100), (i31102));
	 assert ($geint(($i2490), (0))==1);
	 assert ($ltint(($i2490), ($refArrSize[$r991[$arrSizeIdx]]))==1);
	 //  @line: 92
	$r1092 := $r991[$i2490];
	 goto Block99;
	 //  @line: 103
Block112:
	 //  @line: 103
	 assume ($negInt(($gtint((i29100), (i164))))==1);
	 //  @line: 96
	i32103 := 0;
	 goto Block113;
	 //  @line: 103
Block111:
	 assume ($gtint((i29100), (i164))==1);
	 goto Block108;
	 //  @line: 100
Block126:
	 //  @line: 100
	$i1370 := $subint(($i1269), (1));
	 goto Block127;
	 //  @line: 86
Block86:
	 goto Block77;
	 //  @line: 93
Block97:
	 //  @line: 93
	 call $i2388 := int$Game$nbWin$2254();
	 goto Block104;
	 //  @line: 92
Block99:
	 goto Block100, Block102;
	 //  @line: 96
Block113:
	 //  @line: 96
	 call $i1880 := int$Game$nbWin$2254();
	 goto Block114;
	 //  @line: 100
Block127:
	 goto Block130, Block128;
	 //  @line: 93
Block104:
	 goto Block105, Block106;
	 //  @line: 92
Block100:
	 assume ($eqref(($r1092), (r178))==1);
	 goto Block101;
	 //  @line: 92
Block102:
	 //  @line: 92
	 assume ($negInt(($eqref(($r1092), (r178))))==1);
	 goto Block97;
	 //  @line: 96
Block114:
	 goto Block115, Block117;
	 //  @line: 100
Block130:
	 //  @line: 100
	 assume ($negInt(($gtint(($i1370), (i2899))))==1);
	 goto Block131;
	 //  @line: 100
Block128:
	 assume ($gtint(($i1370), (i2899))==1);
	 goto Block129;
	 //  @line: 93
Block105:
	 assume ($neint((i31102), ($i2388))==1);
	 goto Block91;
	 //  @line: 93
Block106:
	 //  @line: 93
	 assume ($negInt(($neint((i31102), ($i2388))))==1);
	 //  @line: 95
	__ret := 1;
	 return;
	 //  @line: 91
Block101:
	 //  @line: 91
	i31102 := $addint((i31102), (1));
	 goto Block103;
	 //  @line: 96
Block115:
	 assume ($geint((i32103), ($i1880))==1);
	 goto Block116;
	 //  @line: 96
Block117:
	 //  @line: 96
	 assume ($negInt(($geint((i32103), ($i1880))))==1);
	 assert ($neref((r053), ($null))==1);
	 //  @line: 97
	$r583 := $HeapVar[r053, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 //  @line: 97
	$i2082 := $addint((i2899), (i32103));
	 assert ($geint(($i2082), (0))==1);
	 assert ($ltint(($i2082), ($fresh9))==1);
	 //  @line: 97
	$r685 := $r583[$i2082];
	 //  @line: 97
	$i2184 := $addint((i29100), (i32103));
	 assert ($geint(($i2184), (0))==1);
	 assert ($ltint(($i2184), ($refArrSize[$r685[$arrSizeIdx]]))==1);
	 //  @line: 97
	$r786 := $r685[$i2184];
	 goto Block118;
	 //  @line: 84
Block131:
	 goto Block133, Block132;
	 //  @line: 84
Block129:
	 //  @line: 84
	i29100 := $addint((i29100), (1));
	 goto Block147;
	 //  @line: 91
Block103:
	 goto Block94;
	 //  @line: 98
Block116:
	 //  @line: 98
	 call $i1981 := int$Game$nbWin$2254();
	 goto Block123;
	 //  @line: 97
Block118:
	 goto Block121, Block119;
	 //  @line: 84
Block133:
	 //  @line: 84
	 assume ($negInt(($gtint((i29100), (i164))))==1);
	 //  @line: 101
	i33104 := 0;
	 goto Block134;
	 //  @line: 84
Block132:
	 assume ($gtint((i29100), (i164))==1);
	 goto Block129;
	 //  @line: 84
Block147:
	 goto Block68;
	 //  @line: 98
Block123:
	 goto Block125, Block124;
	 //  @line: 97
Block121:
	 //  @line: 97
	 assume ($negInt(($eqref(($r786), (r178))))==1);
	 goto Block116;
	 //  @line: 97
Block119:
	 assume ($eqref(($r786), (r178))==1);
	 goto Block120;
	 //  @line: 101
Block134:
	 //  @line: 101
	 call $i1472 := int$Game$nbWin$2254();
	 goto Block135;
	 //  @line: 98
Block125:
	 //  @line: 98
	 assume ($negInt(($neint((i32103), ($i1981))))==1);
	 //  @line: 100
	__ret := 1;
	 return;
	 //  @line: 98
Block124:
	 assume ($neint((i32103), ($i1981))==1);
	 goto Block108;
	 //  @line: 96
Block120:
	 //  @line: 96
	i32103 := $addint((i32103), (1));
	 goto Block122;
	 //  @line: 101
Block135:
	 goto Block136, Block138;
	 //  @line: 96
Block122:
	 goto Block113;
	 //  @line: 101
Block136:
	 assume ($geint((i33104), ($i1472))==1);
	 goto Block137;
	 //  @line: 101
Block138:
	 //  @line: 101
	 assume ($negInt(($geint((i33104), ($i1472))))==1);
	 assert ($neref((r053), ($null))==1);
	 //  @line: 102
	$r275 := $HeapVar[r053, Player$lp$$rp$$lp$$rp$$Configuration$board254];
	 //  @line: 102
	$i1674 := $subint((i2899), (i33104));
	 assert ($geint(($i1674), (0))==1);
	 assert ($ltint(($i1674), ($fresh10))==1);
	 //  @line: 102
	$r377 := $r275[$i1674];
	 //  @line: 102
	$i1776 := $addint((i29100), (i33104));
	 assert ($geint(($i1776), (0))==1);
	 assert ($ltint(($i1776), ($refArrSize[$r377[$arrSizeIdx]]))==1);
	 //  @line: 102
	$r479 := $r377[$i1776];
	 goto Block139;
	 //  @line: 103
Block137:
	 //  @line: 103
	 call $i1573 := int$Game$nbWin$2254();
	 goto Block144;
	 //  @line: 102
Block139:
	 goto Block142, Block140;
	 //  @line: 103
Block144:
	 goto Block145, Block146;
	 //  @line: 102
Block142:
	 //  @line: 102
	 assume ($negInt(($eqref(($r479), (r178))))==1);
	 goto Block137;
	 //  @line: 102
Block140:
	 assume ($eqref(($r479), (r178))==1);
	 goto Block141;
	 //  @line: 103
Block145:
	 assume ($neint((i33104), ($i1573))==1);
	 goto Block129;
	 //  @line: 103
Block146:
	 //  @line: 103
	 assume ($negInt(($neint((i33104), ($i1573))))==1);
	 //  @line: 84
	__ret := 1;
	 return;
	 //  @line: 101
Block141:
	 //  @line: 101
	i33104 := $addint((i33104), (1));
	 goto Block143;
	 //  @line: 101
Block143:
	 goto Block134;
}


	 //  @line: 19
// <Game: boolean isPossibleMove(Player[][],int,int)>
procedure boolean$Game$isPossibleMove$2256($param_0 : [int][int]ref, $param_1 : int, $param_2 : int) returns (__ret : int) {
var $z0299 : int;
var i0294 : int;
var $r1296 : [int]ref;
var $r2297 : ref;
var i1295 : int;
var r0293 : [int][int]ref;
Block353:
	r0293 := $param_0;
	i0294 := $param_1;
	i1295 := $param_2;
	 assert ($geint((i0294), (0))==1);
	 assert ($ltint((i0294), ($fresh16))==1);
	 //  @line: 20
	$r1296 := r0293[i0294];
	 assert ($geint((i1295), (0))==1);
	 assert ($ltint((i1295), ($refArrSize[$r1296[$arrSizeIdx]]))==1);
	 //  @line: 20
	$r2297 := $r1296[i1295];
	 goto Block354;
	 //  @line: 20
Block354:
	 goto Block355, Block357;
	 //  @line: 20
Block355:
	 assume ($neref(($r2297), ($null))==1);
	 goto Block356;
	 //  @line: 20
Block357:
	 //  @line: 20
	 assume ($negInt(($neref(($r2297), ($null))))==1);
	 //  @line: 20
	$z0299 := 1;
	 goto Block358;
	 //  @line: 20
Block356:
	 //  @line: 20
	$z0299 := 0;
	 goto Block358;
	 //  @line: 20
Block358:
	 //  @line: 20
	__ret := $z0299;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $modint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $gtref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqrealarray($param00 : [int]realVar, $param11 : [int]realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $shrint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $negReal($param00 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrint($param00 : int, $param11 : int) returns (__ret : int);



	 //  @line: 4
// <Player: void <init>(char)>
procedure void$Player$$la$init$ra$$2244(__this : ref, $param_0 : int)
  modifies $HeapVar;
  requires ($neref((__this), ($null))==1);
 {
var c0272 : int;
var r0271 : ref;
Block335:
	r0271 := __this;
	c0272 := $param_0;
	 assert ($neref((r0271), ($null))==1);
	 //  @line: 5
	 call void$java.lang.Object$$la$init$ra$$28((r0271));
	 assert ($neref((r0271), ($null))==1);
	 //  @line: 6
	$HeapVar[r0271, char$Player$symbol0] := c0272;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $refarrtoref($param00 : [int]ref) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $ltreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $gtint(x : int, y : int) returns (__ret : int) {
if (x > y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $addref($param00 : ref, $param11 : ref) returns (__ret : ref);



	 //  @line: 186
// <Configuration: Configuration bestChoice()>
procedure Configuration$Configuration$bestChoice$2241(__this : ref) returns (__ret : ref)  requires ($neref((__this), ($null))==1);
 {
var $i3191 : int;
var i1194 : int;
var $i4192 : int;
var r0187 : ref;
var $r1199 : ref;
var r2204 : ref;
var $i5193 : int;
var i2197 : int;
var i7207 : int;
var i6205 : int;
var i0201 : int;
var r3206 : ref;
Block231:
	r0187 := __this;
	 assert ($neref((r0187), ($null))==1);
	 //  @line: 187
	 call r2204 := LinkedList$Configuration$possibleMoves$2237((r0187));
	 //  @line: 189
	i6205 := -10000;
	 //  @line: 190
	 call $i3191 := int$Game$maxMoves$2255();
	 assert ($neref((r0187), ($null))==1);
	 //  @line: 190
	$i4192 := $HeapVar[r0187, int$Configuration$nbMoves0];
	 //  @line: 190
	$i5193 := $addint(($i4192), (1));
	 //  @line: 190
	i1194 := $subint(($i3191), ($i5193));
	 //  @line: 191
	r3206 := $null;
	 assert ($neref((r2204), ($null))==1);
	 //  @line: 192
	 call i2197 := int$LinkedList$length$2250((r2204));
	 //  @line: 193
	i7207 := 0;
	 goto Block232;
	 //  @line: 193
Block232:
	 goto Block233, Block235;
	 //  @line: 193
Block233:
	 assume ($geint((i7207), (i2197))==1);
	 goto Block234;
	 //  @line: 193
Block235:
	 //  @line: 193
	 assume ($negInt(($geint((i7207), (i2197))))==1);
	 assert ($neref((r2204), ($null))==1);
	 //  @line: 194
	 call $r1199 := Configuration$LinkedList$getFirst$2248((r2204));
	 assert ($neref(($r1199), ($null))==1);
	 //  @line: 194
	 call i0201 := int$Configuration$alphabeta$2240(($r1199), (-10000), (10000), (i1194));
	 goto Block236;
	 //  @line: 202
Block234:
	 //  @line: 202
	__ret := r3206;
	 return;
	 //  @line: 195
Block236:
	 goto Block237, Block239;
	 //  @line: 195
Block237:
	 assume ($ltint((i0201), (i6205))==1);
	 goto Block238;
	 //  @line: 195
Block239:
	 //  @line: 195
	 assume ($negInt(($ltint((i0201), (i6205))))==1);
	 assert ($neref((r2204), ($null))==1);
	 //  @line: 196
	 call r3206 := Configuration$LinkedList$getFirst$2248((r2204));
	 goto Block240;
	 //  @line: 200
Block238:
	 assert ($neref((r2204), ($null))==1);
	 //  @line: 200
	 call r2204 := LinkedList$LinkedList$getTail$2249((r2204));
	 goto Block244;
	 //  @line: 197
Block240:
	 goto Block241, Block243;
	 //  @line: 193
Block244:
	 //  @line: 193
	i7207 := $addint((i7207), (1));
	 goto Block232;
	 //  @line: 197
Block241:
	 assume ($neint((i0201), (10000))==1);
	 goto Block242;
	 //  @line: 197
Block243:
	 //  @line: 197
	 assume ($negInt(($neint((i0201), (10000))))==1);
	 goto Block234;
	 //  @line: 198
Block242:
	 //  @line: 198
	i6205 := i0201;
	 goto Block238;
}


// procedure is generated by joogie.
function {:inline true} $addreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $gtreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $eqreal(x : realVar, y : realVar) returns (__ret : int) {
if (x == y) then 1 else 0
}


	 //  @line: 7
// <Game: int nbColumns()>
procedure int$Game$nbColumns$2253() returns (__ret : int) {
	 //  @line: 8
Block350:
	 //  @line: 8
	__ret := 3;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $newvariable($param00 : int) returns (__ret : ref);



// procedure is generated by joogie.
function {:inline true} $divint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $geint(x : int, y : int) returns (__ret : int) {
if (x >= y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $leint(x : int, y : int) returns (__ret : int) {
if (x <= y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $shlref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftointarr($param00 : ref) returns (__ret : [int]int);



// procedure is generated by joogie.
function {:inline true} $shrreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $divreal($param00 : realVar, $param11 : realVar) returns (__ret : realVar);



// procedure is generated by joogie.
function {:inline true} $orint($param00 : int, $param11 : int) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $reftorealarr($param00 : ref) returns (__ret : [int]realVar);



	 //  @line: 9
// <Player: Player getOpponent()>
procedure Player$Player$getOpponent$2245(__this : ref) returns (__ret : ref)  requires ($neref((__this), ($null))==1);
 {
var r0273 : ref;
var $r1274 : ref;
Block336:
	r0273 := __this;
	 assert ($neref((r0273), ($null))==1);
	 //  @line: 10
	$r1274 := $HeapVar[r0273, Player$Player$opponent256];
	 //  @line: 10
	__ret := $r1274;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $realtoint($param00 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $orreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $ushrref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $modref($param00 : ref, $param11 : ref) returns (__ret : ref);



	 //  @line: 10
// <Configuration: void <init>()>
procedure void$Configuration$$la$init$ra$$2228(__this : ref)
  modifies $HeapVar;
  requires ($neref((__this), ($null))==1);
 {
var $i02 : int;
var r01 : ref;
var $i13 : int;
var $r14 : [int][int]ref;
Block16:
	r01 := __this;
	 assert ($neref((r01), ($null))==1);
	 //  @line: 11
	 call void$java.lang.Object$$la$init$ra$$28((r01));
	 assert ($neref((r01), ($null))==1);
	 //  @line: 2
	$HeapVar[r01, int$Configuration$MINUS_INFINITY0] := -10000;
	 assert ($neref((r01), ($null))==1);
	 //  @line: 3
	$HeapVar[r01, int$Configuration$INFINITY0] := 10000;
	 //  @line: 12
	 call $i02 := int$Game$nbRows$2252();
	 //  @line: 12
	 call $i13 := int$Game$nbColumns$2253();
	 //  @line: 12
	$r14 := $fresh1;
	 assume ($negInt(($fresh2))==1);
	 assert ($neref((r01), ($null))==1);
	 //  @line: 12
	$HeapVar[r01, Player$lp$$rp$$lp$$rp$$Configuration$board254] := $r14;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $negRef($param00 : ref) returns (__ret : int);



	 //  @line: 141
// <Configuration: int min(int,int)>
procedure int$Configuration$min$2238(__this : ref, $param_0 : int, $param_1 : int) returns (__ret : int)  requires ($neref((__this), ($null))==1);
 {
var i0142 : int;
var r0144 : ref;
var i1143 : int;
Block180:
	r0144 := __this;
	i0142 := $param_0;
	i1143 := $param_1;
	 goto Block181;
	 //  @line: 142
Block181:
	 goto Block184, Block182;
	 //  @line: 142
Block184:
	 //  @line: 142
	 assume ($negInt(($gtint((i0142), (i1143))))==1);
	 //  @line: 143
	__ret := i0142;
	 return;
	 //  @line: 142
Block182:
	 assume ($gtint((i0142), (i1143))==1);
	 goto Block183;
	 //  @line: 143
Block183:
	 //  @line: 143
	__ret := i1143;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $nereal(x : realVar, y : realVar) returns (__ret : int) {
if (x != y) then 1 else 0
}


	 //  @line: 11
// <Game: int nbWin()>
procedure int$Game$nbWin$2254() returns (__ret : int) {
	 //  @line: 12
Block351:
	 //  @line: 12
	__ret := 3;
	 return;
}


	 //  @line: 236
// <Configuration: int partialEvaluation()>
procedure int$Configuration$partialEvaluation$2243(__this : ref) returns (__ret : int)  requires ($neref((__this), ($null))==1);
 {
var $r3265 : ref;
var $z0268 : int;
var $i3270 : int;
var i0263 : int;
var $i2269 : int;
var $r1261 : ref;
var $r2264 : ref;
var r0260 : ref;
var i1267 : int;
Block329:
	r0260 := __this;
	 assert ($neref((r0260), ($null))==1);
	 //  @line: 237
	$r1261 := $HeapVar[r0260, Player$Configuration$player255];
	 assert ($neref((r0260), ($null))==1);
	 //  @line: 237
	 call i0263 := int$Configuration$openRows$2242((r0260), ($r1261));
	 assert ($neref((r0260), ($null))==1);
	 //  @line: 238
	$r2264 := $HeapVar[r0260, Player$Configuration$player255];
	 assert ($neref(($r2264), ($null))==1);
	 //  @line: 238
	 call $r3265 := Player$Player$getOpponent$2245(($r2264));
	 assert ($neref((r0260), ($null))==1);
	 //  @line: 238
	 call i1267 := int$Configuration$openRows$2242((r0260), ($r3265));
	 assert ($neref((r0260), ($null))==1);
	 //  @line: 239
	$z0268 := $HeapVar[r0260, boolean$Configuration$max0];
	 goto Block330;
	 //  @line: 239
Block330:
	 goto Block331, Block333;
	 //  @line: 239
Block331:
	 assume ($eqint(($z0268), (0))==1);
	 goto Block332;
	 //  @line: 239
Block333:
	 //  @line: 239
	 assume ($negInt(($eqint(($z0268), (0))))==1);
	 //  @line: 240
	$i3270 := $subint((i0263), (i1267));
	 //  @line: 240
	__ret := $i3270;
	 return;
	 //  @line: 240
Block332:
	 //  @line: 240
	$i2269 := $subint((i1267), (i0263));
	 goto Block334;
	 //  @line: 240
Block334:
	 //  @line: 240
	__ret := $i2269;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $orref($param00 : ref, $param11 : ref) returns (__ret : int);



// procedure is generated by joogie.
function {:inline true} $shlreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



	 //  @line: 21
// <LinkedList: int length()>
procedure int$LinkedList$length$2250(__this : ref) returns (__ret : int)  requires ($neref((__this), ($null))==1);
 {
var $i0288 : int;
var r0287 : ref;
Block347:
	r0287 := __this;
	 assert ($neref((r0287), ($null))==1);
	 //  @line: 22
	$i0288 := $HeapVar[r0287, int$LinkedList$len0];
	 //  @line: 22
	__ret := $i0288;
	 return;
}


// procedure is generated by joogie.
function {:inline true} $negInt(x : int) returns (__ret : int) {
if (x == 0) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $eqref(x : ref, y : ref) returns (__ret : int) {
if (x == y) then 1 else 0
}


// procedure is generated by joogie.
function {:inline true} $andreal($param00 : realVar, $param11 : realVar) returns (__ret : int);



