; hcai-bench/./svcomp/O0/string_false-unreach-call_true-termination_000.smt2
(set-logic HORN)

(declare-fun |main@_bb7| ( Int (Array Int Int) Int (Array Int Int) Int ) Bool)
(declare-fun |main@_bb4| ( Int Int (Array Int Int) Int Int (Array Int Int) ) Bool)
(declare-fun |main@_bb9| ( Int (Array Int Int) Int (Array Int Int) Int Int ) Bool)
(declare-fun |main@_bb| ( Int Int Int (Array Int Int) Int (Array Int Int) ) Bool)
(declare-fun |main@verifier.error.split| ( ) Bool)
(declare-fun |main@_bb12| ( Int (Array Int Int) Int (Array Int Int) Int Int Int Int ) Bool)
(declare-fun |main@entry| ( Int ) Bool)

(assert
  (forall ( (A Int) ) 
    (=>
      (and
        true
      )
      (main@entry A)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B (Array Int Int)) (C Bool) (D Bool) (E Int) (F Int) (G Int) (H Int) (I (Array Int Int)) (J Int) (K (Array Int Int)) ) 
    (=>
      (and
        (main@entry F)
        (and (not (<= J 0))
     (or (not D) (not C) (= E 0))
     (or (not D) (not C) (= H E))
     (or (not D) (not C) (= B A))
     (or (not D) (not C) (= I B))
     (or (not C) (and D C))
     (= C true)
     (not (<= G 0)))
      )
      (main@_bb F G H I J K)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Int) (H (Array Int Int)) (I Int) (J (Array Int Int)) (K Bool) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q (Array Int Int)) (R Int) (S (Array Int Int)) ) 
    (=>
      (and
        (main@_bb N O G D R S)
        (and (or (not L) (<= O 0) (not (<= E 0)))
     (or (not L) B (not A))
     (or (not L) (not K) (= M I))
     (or (not L) (not K) (= P M))
     (or (not L) (not K) (= J H))
     (or (not L) (not K) (= Q J))
     (or (not K) (and L K))
     (or (not L) (= C N))
     (or (not L) (= E (+ O G)))
     (or (not L) (= I (+ 1 G)))
     (or (not L) (= H (store D E F)))
     (or (not L) (not (<= O 0)))
     (or (not L) (and L A))
     (= K true)
     (= B (not (<= 5 G))))
      )
      (main@_bb N O P Q R S)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Int) (F Bool) (G (Array Int Int)) (H (Array Int Int)) (I Bool) (J Bool) (K Int) (L Int) (M Int) (N (Array Int Int)) (O Int) (P Int) (Q (Array Int Int)) ) 
    (=>
      (and
        (main@_bb L M A N O G)
        (and (or (not J) (<= M 0) (not (<= D 0)))
     (or (not J) (not C) (not B))
     (or (not J) (not I) (= K 0))
     (or (not J) (not I) (= P K))
     (or (not J) (not I) (= H G))
     (or (not J) (not I) (= Q H))
     (or (not I) (and J I))
     (or (not J) (= F (= E 0)))
     (or (not J) (= D (+ 4 M)))
     (or (not J) (= E (select N D)))
     (or (not J) (not (<= M 0)))
     (or (not J) (and J B))
     (or (not J) F)
     (= I true)
     (= C (not (<= 5 A))))
      )
      (main@_bb4 L M N O P Q)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Int) (H (Array Int Int)) (I Int) (J (Array Int Int)) (K Bool) (L Bool) (M Int) (N Int) (O Int) (P (Array Int Int)) (Q Int) (R Int) (S (Array Int Int)) ) 
    (=>
      (and
        (main@_bb4 N O P Q G D)
        (and (or (not L) (not (<= E 0)) (<= Q 0))
     (or (not L) B (not A))
     (or (not L) (not K) (= M I))
     (or (not L) (not K) (= R M))
     (or (not L) (not K) (= J H))
     (or (not L) (not K) (= S J))
     (or (not K) (and L K))
     (or (not L) (= C N))
     (or (not L) (= E (+ Q G)))
     (or (not L) (= I (+ 1 G)))
     (or (not L) (= H (store D E F)))
     (or (not L) (not (<= Q 0)))
     (or (not L) (and L A))
     (= K true)
     (= B (not (<= 5 G))))
      )
      (main@_bb4 N O P Q R S)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J Int) (K Int) (L (Array Int Int)) (M Int) (N (Array Int Int)) (O Int) ) 
    (=>
      (and
        (main@_bb4 A K L M B N)
        (and (or (not I) (not (<= E 0)) (<= M 0))
     (or (not I) (not D) (not C))
     (or (not H) (not I) (= J 0))
     (or (not H) (not I) (= O J))
     (or (not I) (= G (= F 0)))
     (or (not I) (= F (select N E)))
     (or (not I) (= E (+ 4 M)))
     (or (not I) (not (<= M 0)))
     (or (not I) (and I C))
     (or G (not I))
     (or (not H) (and H I))
     (= H true)
     (= D (not (<= 5 B))))
      )
      (main@_bb7 K L M N O)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Bool) (H Bool) (I Int) (J Int) (K (Array Int Int)) (L Int) (M (Array Int Int)) (N Int) ) 
    (=>
      (and
        (main@_bb7 J K L M E)
        (and (= A (+ J E))
     (= B (select K A))
     (not (<= J 0))
     (or (not H) (not C) (not D))
     (or (not G) (not H) (= I F))
     (or (not G) (not H) (= N I))
     (or (<= J 0) (not (<= A 0)))
     (or (not H) (= F (+ 1 E)))
     (or (not H) (and H C))
     (or (not G) (and G H))
     (= G true)
     (= D (= B 0)))
      )
      (main@_bb7 J K L M N)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Bool) (F Int) (G Int) (H (Array Int Int)) (I Int) (J (Array Int Int)) (K Int) (L Int) ) 
    (=>
      (and
        (main@_bb7 G H I J L)
        (and (= A (+ G L))
     (= B (select H A))
     (not (<= G 0))
     (or (not E) (not D) (= F 0))
     (or (not E) (not D) (= K F))
     (or (not E) (not D) C)
     (or (<= G 0) (not (<= A 0)))
     (or (not D) (and E D))
     (= D true)
     (= C (= B 0)))
      )
      (main@_bb9 G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Bool) (H Bool) (I Int) (J Int) (K (Array Int Int)) (L Int) (M (Array Int Int)) (N Int) (O Int) ) 
    (=>
      (and
        (main@_bb9 J K L M E O)
        (and (= A (+ L E))
     (= B (select M A))
     (not (<= L 0))
     (or (not H) (not D) (not C))
     (or (not H) (not G) (= I F))
     (or (not H) (not G) (= N I))
     (or (<= L 0) (not (<= A 0)))
     (or (not G) (and H G))
     (or (not H) (= F (+ 1 E)))
     (or (not H) (and H C))
     (= G true)
     (= D (= B 0)))
      )
      (main@_bb9 J K L M N O)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Bool) (F Int) (G Bool) (H Bool) (I Int) (J Int) (K (Array Int Int)) (L Int) (M (Array Int Int)) (N Int) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (main@_bb9 J K L M P Q)
        (let ((a!1 (or (not H) (= E (not (<= Q P))))))
  (and (= B (select M A))
       (= A (+ L P))
       (not (<= L 0))
       (or (not H) (not G) (= F 0))
       (or (not H) (not G) (= O F))
       (or (not H) (not G) (= I 0))
       (or (not H) (not G) (= N I))
       (or (not H) (not C) D)
       (or (<= L 0) (not (<= A 0)))
       (or (not G) (and H G))
       a!1
       (or (not H) (and H C))
       (or (not H) (not E))
       (= G true)
       (= D (= B 0))))
      )
      (main@_bb12 J K L M N O P Q)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Bool) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Bool) (T Int) (U Int) (V (Array Int Int)) (W Int) (X (Array Int Int)) (Y Int) (Z Int) (A1 Int) (B1 Int) ) 
    (=>
      (and
        (main@_bb12 U V W X L K A1 B1)
        (let ((a!1 (or (not S) (= N (+ L (* (- 1) M))))))
  (and (= B (not (<= A1 K)))
       (= D (and B A))
       (or (not S) (<= U 0) (not (<= E 0)))
       (or (not S) (<= W 0) (not (<= F 0)))
       (or (not S) D (not C))
       (or (not S) (not R) (= Q O))
       (or (not S) (not R) (= Z Q))
       (or (not S) (not R) (= T P))
       (or (not S) (not R) (= Y T))
       (or (not R) (and S R))
       (or (not S) (= J (= G H)))
       (or (not S) (= E (+ U L)))
       (or (not S) (= F (+ W K)))
       (or (not S) (= G (select V E)))
       (or (not S) (= H (select X F)))
       (or (not S) (= I (+ 1 K)))
       (or (not S) (= M (ite J 0 K)))
       a!1
       (or (not S) (= O (ite J I 0)))
       (or (not S) (= P (+ 1 N)))
       (or (not S) (not (<= U 0)))
       (or (not S) (not (<= W 0)))
       (or (not S) (and S C))
       (= R true)
       (= A (not (<= B1 L)))))
      )
      (main@_bb12 U V W X Y Z A1 B1)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J Bool) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Bool) (S Bool) (T Bool) (U Bool) (V Int) (W Bool) (X Bool) (Y Bool) (Z Bool) (A1 Bool) ) 
    (=>
      (and
        (main@_bb12 A B C D E L K F)
        (let ((a!1 (or (not T) (= N (not (<= L M)))))
      (a!2 (and (or (= Q 0) (not (= O 0))) (or (= Q 0) (not (= P 0))))))
  (and (= H (not (<= K L)))
       (= J (and H G))
       (or (not T) (not J) (not I))
       (or (not X) (= W (= V 0)))
       (or (not X) (and U X))
       (or (not X) W)
       (or (not Y) (and Y X))
       (or (not Z) (and Z Y))
       (or (not A1) (and A1 Z))
       (or (not U) (and T U))
       a!1
       (or (not T) (= R (= Q 0)))
       (or (not T) (= M (+ (- 1) K)))
       (or (not T) (= O (ite N 1 0)))
       (or (not T) (= V (ite R 1 0)))
       (or (not T) a!2)
       (or (not T) (and T I))
       (or (not T) (not S))
       (= A1 true)
       (= G (not (<= F E)))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@verifier.error.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
