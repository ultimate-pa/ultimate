(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((?v_12 (* 46 x7)) (?v_1 (* 60 x2)) (?v_5 (* 16 x5)) (?v_7 (* 0 x7)) (?v_10 (* 26 x0)) (?v_0 (* 9 x5)) (?v_15 (* 69 x9)) (?v_13 (* 30 x3)) (?v_6 (* 62 x9)) (?v_9 (* (- 10) x7)) (?v_3 (* (- 54) x8)) (?v_8 (* (- 9) x7)) (?v_2 (* (- 35) x3)) (?v_4 (* (- 68) x1)) (?v_14 (* (- 16) x8)) (?v_11 (* (- 17) x6))) (and (<= (+ ?v_12 (* 34 x9) (* 14 x9) ?v_1 (* 63 x2) ?v_5 ?v_7 (* (- 4) x3) (* 8 x7) (* 60 x9)) 41) (<= (+ (* 8 x8) (* (- 9) x3) ?v_9 (* (- 44) x4) ?v_10 (* (- 11) x4) (* (- 51) x9) ?v_3 (* 33 x8) (* 63 x3)) (- 15)) (<= (+ (* 45 x2) (* 49 x8) (* (- 58) x0) (* (- 12) x8) (* 44 x8) (* (- 30) x2) (* 69 x5) (* (- 38) x0) (* 48 x8) (* (- 51) x6)) 49) (<= (+ (* 31 x6) (* (- 11) x0) (* (- 41) x3) (* 21 x8) ?v_0 (* (- 34) x7) ?v_0 (* 32 x7) (* 2 x5) ?v_15) 55) (<= (+ (* 41 x8) (* (- 1) x5) (* (- 57) x6) (* 55 x8) (* 0 x2) ?v_13 (* (- 25) x5) (* (- 2) x8) ?v_1 ?v_8) (- 16)) (<= (+ (* 34 x7) (* 41 x3) (* (- 58) x8) (* 68 x7) (* (- 2) x7) (* (- 26) x0) (* 13 x7) (* 61 x5) (* 45 x8) (* (- 54) x4)) 41) (<= (+ (* 61 x8) (* 64 x9) (* 2 x1) (* 49 x5) (* (- 28) x4) (* (- 18) x8) (* 57 x1) (* (- 4) x6) (* 42 x7) (* 38 x2)) 40) (<= (+ (* 58 x8) (* 7 x4) (* 41 x4) (* (- 36) x2) (* 31 x3) (* 39 x5) (* 62 x4) (* 28 x7) ?v_2 (* (- 48) x9)) (- 49)) (<= (+ (* 40 x6) (* (- 64) x2) (* 20 x5) (* 62 x1) (* (- 5) x2) ?v_6 ?v_4 (* (- 7) x2) (* (- 60) x2) (* (- 21) x5)) 12) (<= (+ (* 0 x6) (* 22 x3) (* 50 x6) (* 31 x7) ?v_2 ?v_3 (* (- 28) x8) (* 52 x0) (* (- 14) x1) (* 21 x3)) 56) (<= (+ (* 32 x0) ?v_4 (* (- 54) x0) (* 53 x0) (* (- 47) x1) (* (- 5) x6) (* (- 45) x4) (* (- 5) x4) ?v_5 (* (- 61) x1)) 64) (<= (+ (* 56 x5) (* 29 x4) (* 59 x8) (* 22 x8) (* (- 55) x9) (* 1 x9) ?v_14 ?v_6 (* 69 x4) (* 50 x5)) 39) (<= (+ (* 16 x8) ?v_7 (* (- 50) x3) (* (- 11) x6) (* 50 x4) ?v_8 ?v_9 (* (- 49) x0) (* (- 55) x7) (* (- 60) x0)) (- 5)) (<= (+ ?v_10 (* 35 x8) (* 11 x3) (* (- 39) x0) (* (- 14) x4) (* (- 21) x3) (* (- 20) x9) (* 60 x7) (* (- 7) x5) (* (- 69) x0)) (- 66)) (<= (+ (* 56 x4) (* 5 x5) (* (- 60) x3) (* (- 60) x5) (* (- 57) x7) (* 30 x6) (* (- 49) x2) (* (- 48) x1) (* (- 44) x5) (* 6 x7)) (- 63)) (<= (+ ?v_0 (* 54 x5) (* 50 x9) ?v_11 (* 25 x4) (* 51 x5) (* (- 36) x3) (* (- 39) x2) (* (- 54) x6) (* (- 3) x0)) 49) (<= (+ (* 6 x6) (* 53 x8) (* 64 x5) (* 61 x4) (* (- 17) x4) (* 52 x3) (* 57 x7) (* (- 20) x8) (* (- 18) x1) (* 38 x6)) 27) (<= (+ (* 45 x9) (* 14 x8) (* 1 x4) (* (- 38) x2) (* (- 32) x7) (* (- 57) x2) (* (- 17) x2) (* (- 45) x8) (* (- 18) x3) ?v_11) (- 25)) (<= (+ ?v_12 (* (- 5) x1) (* (- 31) x5) (* (- 13) x4) (* (- 23) x0) (* (- 17) x8) (* 61 x6) (* (- 19) x0) (* (- 34) x5) (* 43 x3)) 28) (<= (+ (* 55 x6) (* (- 69) x2) (* 4 x2) (* 20 x2) (* (- 10) x9) ?v_13 ?v_14 (* (- 18) x9) (* (- 63) x6) ?v_15) 49))))
(check-sat)
(exit)
