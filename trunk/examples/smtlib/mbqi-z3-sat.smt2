(set-info :status sat)
(set-logic AUFLIRA)
(declare-fun n () Int)
(declare-fun h (Int) Int)
(declare-fun hp (Int) Int)
(declare-fun f (Int) Int)
(declare-fun c () Int)
(declare-fun a () Int)
(declare-fun b () Int)
(declare-fun i () Int)
(declare-fun j () Int)
(assert (forall ((?x1 Int) (?x2 Int)) (and (or (not (<= 0 ?x1)) (not (<= ?x1 ?x2)) (not (<= ?x2 n)) (<= (h (f ?x1)) (h (f ?x2)))) (or (not (<= 0 ?x1)) (not (<= ?x1 n)) (not (= (f ?x1) a))) (or (not (= ?x1 a)) (= (hp ?x1) (h ?x1))))))
(assert (= (hp a) b))
(assert (and (<= 0 i) (<= i j) (<= j n)))
(assert (> (hp (f i)) (hp (f j))))
(check-sat)
(exit)
