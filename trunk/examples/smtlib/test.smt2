(set-option :interpolant-check-mode true)
(set-option :produce-proofs true)
(set-info :category "{ crafted }")
(set-info :difficulty "{ 0 }")
(set-logic QF_UF)
(declare-sort U 0)
(declare-fun A () Bool)
(declare-fun B () Bool)
(declare-fun C () Bool)
(declare-fun D () Bool)
(declare-fun E () Bool)
(assert (! (= E (and A B)) :named IP_0))
(assert (! (or (not (and A B)) (and A B)) :named IP_1))
(assert (! (= E (or A B)) :named IP_2))
(assert (! (= E (=> A B)) :named IP_3))
(assert (! (= E (= A B)) :named IP_4))
(assert (! (= E (xor A B)) :named IP_5))
(assert (! (and (= E (or A (or B (or C (and D true))))) (= E (ite A B C)) (= E (ite A true false))) :named IP_6))
(check-sat)
(get-proof)
(get-interpolants IP_0 IP_1 IP_2 IP_3 IP_4 IP_5 IP_6)
(exit)
