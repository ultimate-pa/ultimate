(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((?v_4 (* 11 x2)) (?v_5 (* 56 x7)) (?v_1 (* 54 x8)) (?v_3 (* 22 x4)) (?v_11 (* 22 x0)) (?v_9 (* 55 x2)) (?v_8 (* 38 x6)) (?v_0 (* (- 58) x1)) (?v_6 (* (- 68) x1)) (?v_2 (* (- 18) x7)) (?v_7 (* (- 27) x4)) (?v_10 (* (- 47) x7)) (?v_12 (* (- 16) x2)) (?v_13 (* (- 26) x5)) (?v_14 (* (- 16) x5))) (and (<= (+ (* 11 x5) (* 65 x2) (* 21 x4) ?v_0 (* (- 49) x0) (* 34 x2) (* (- 16) x6) (* 20 x9) (* (- 44) x8) ?v_6) 57) (<= (+ (* 34 x9) (* (- 27) x8) (* 53 x2) (* 6 x5) (* (- 26) x3) (* 40 x3) (* 27 x7) ?v_0 ?v_2 ?v_4) 15) (<= (+ (* 47 x6) (* (- 67) x7) (* 9 x0) ?v_5 (* 60 x2) (* 23 x6) (* (- 2) x7) (* 33 x6) (* 50 x4) (* 64 x9)) 58) (<= (+ ?v_1 (* (- 64) x3) (* 54 x4) (* (- 13) x8) (* (- 15) x2) (* 24 x5) (* 13 x9) (* (- 51) x2) (* (- 55) x4) ?v_7) 38) (<= (+ (* 39 x8) ?v_3 (* 27 x8) ?v_10 (* 51 x0) (* 17 x6) (* (- 56) x4) (* 40 x6) ?v_1 ?v_2) 11) (<= (+ (* 41 x9) (* (- 25) x1) (* 23 x9) (* (- 12) x2) (* 52 x9) (* (- 60) x6) (* (- 4) x9) (* (- 42) x3) ?v_3 (* 0 x5)) 50) (<= (+ (* 42 x2) (* (- 33) x2) (* 52 x6) (* 65 x8) (* 26 x7) (* 32 x7) (* 12 x2) (* 15 x8) (* (- 11) x4) (* (- 39) x4)) (- 38)) (<= (+ (* 3 x6) (* (- 37) x7) (* (- 53) x5) ?v_11 ?v_4 (* (- 48) x7) (* (- 61) x7) (* 9 x7) ?v_9 (* (- 19) x6)) 20) (<= (+ ?v_5 (* 35 x6) (* (- 10) x2) (* (- 53) x2) (* 15 x4) (* (- 44) x3) (* 12 x6) (* (- 11) x8) (* 23 x1) (* 32 x6)) 46) (<= (+ (* 15 x0) (* (- 4) x2) ?v_8 (* (- 10) x0) (* 26 x5) (* 19 x1) (* 26 x4) (* 14 x9) (* (- 35) x2) (* (- 34) x5)) (- 35)) (<= (+ (* 35 x5) ?v_6 ?v_12 (* (- 56) x7) (* (- 63) x9) (* (- 34) x2) (* (- 60) x0) (* (- 10) x1) (* (- 54) x0) (* (- 40) x6)) 26) (<= (+ (* 11 x7) (* 14 x0) (* 26 x8) (* 33 x8) (* (- 14) x2) ?v_13 (* (- 59) x3) (* (- 50) x7) (* 0 x6) (* 18 x1)) (- 15)) (<= (+ (* 65 x1) (* (- 37) x0) ?v_7 (* 56 x4) (* (- 20) x3) (* (- 17) x3) (* 0 x8) (* 27 x3) (* 6 x6) (* (- 29) x0)) (- 38)) (<= (+ (* 1 x4) ?v_3 (* 58 x0) (* 63 x2) ?v_8 (* 63 x7) (* 42 x3) (* 37 x7) (* 6 x8) ?v_14) (- 37)) (<= (+ (* 23 x5) (* (- 9) x8) (* (- 9) x4) (* 4 x5) (* 40 x8) (* 39 x3) (* 2 x2) (* (- 41) x3) (* (- 20) x1) (* 15 x3)) 17) (<= (+ ?v_9 (* 55 x1) (* (- 39) x9) (* (- 36) x0) ?v_10 (* (- 40) x9) (* (- 35) x0) (* (- 48) x9) (* (- 1) x5) (* 25 x6)) 24) (<= (+ (* 58 x8) (* 50 x2) (* (- 61) x1) (* 3 x7) (* 0 x7) (* (- 31) x9) (* 33 x1) ?v_11 (* 59 x9) ?v_12) 53) (<= (+ (* 41 x6) (* 66 x7) (* (- 27) x3) (* 34 x3) (* 43 x7) (* (- 3) x0) ?v_13 (* (- 47) x5) (* (- 36) x2) (* (- 60) x7)) 36) (<= (+ (* 14 x4) (* 31 x7) (* (- 6) x2) (* (- 49) x8) (* 68 x8) (* (- 29) x3) (* 14 x7) (* (- 62) x9) (* (- 44) x4) (* (- 43) x3)) (- 39)) (<= (+ (* 23 x2) (* 10 x0) (* 12 x4) (* 2 x0) (* 61 x5) (* (- 36) x7) (* 45 x7) (* 46 x0) (* 22 x8) ?v_14) (- 46)))))
(check-sat)
(exit)
