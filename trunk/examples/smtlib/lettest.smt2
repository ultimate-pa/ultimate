(set-option :produce-proofs true)
(set-info :category "{ crafted }")
(set-info :difficulty "{ 0 }")
(set-logic QF_UF)
(declare-sort U 0)
(declare-fun a ( U) U)
(declare-fun i1 () U)
(declare-fun i2 () U)
(declare-fun i3 () U)
(declare-fun e () U)
(assert (! (let ((x i1)) (and (= (a x) e) (= i2 x))) :named IP_0))
(assert (! (and (= i3 i2) (not (= (a i3) e))) :named IP_1))
(check-sat)
(get-interpolants IP_0 IP_1)
(exit)
