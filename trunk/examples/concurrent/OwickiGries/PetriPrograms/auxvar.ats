// Check that we can use transformulas with auxvars.
// This is really a test of the test suite.
// ------------------------------------------------------

//@ variables (x Int) (y Int)

//@ semantics [1] {x} (= x y)
//@ semantics [2] {x,y} [(z Int)] (and (= x z) (= y z))
//@ semantics [3] { } (distinct x y)

PetriNet program = (
  alphabet    = { "[1]" "[2]" "[3]" },
  places      = { "l0" "l1" "l2" "e" },
  transitions = {
    ({ "l0" } "[1]" { "l1" "l2" })
    ({ "l2" } "[2]" { "l2" })
    ({ "l1" } "[3]" { "e" })
  },
  initialMarking = { "l0" },
  acceptingPlaces = { "e" }
);

FiniteAutomaton proof = (
     alphabet      = { "[1]" "[2]" "[3]" },
     states        = { "true" "(= x y)" "false" },
     initialStates = { "true" },
     finalStates   = { "false" },
     transitions   = {
         ("true"     "[1]" "(= x y)")
         ("(= x y)"  "[2]" "(= x y)")
         ("(= x y)"  "[3]" "false")
     }
);

